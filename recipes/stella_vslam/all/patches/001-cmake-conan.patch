--- src/stella_vslam/CMakeLists.txt
+++ src/stella_vslam/CMakeLists.txt
@@ -25,10 +25,8 @@
 
 # gtsam
 set(USE_GTSAM OFF CACHE BOOL "Enable gtsam")
-unset(GTSAM_INCLUDE_DIRS CACHE)
-find_path(GTSAM_INCLUDE_DIRS NAMES gtsam
-          PATHS /usr/local/include/)
-if(USE_GTSAM AND GTSAM_INCLUDE_DIRS)
+if(USE_GTSAM)
+    find_package(GTSAM REQUIRED CONFIG)
     message(STATUS "gtsam: enabled (Found in ${GTSAM_INCLUDE_DIRS})")
 else()
     set(USE_GTSAM OFF)
@@ -125,12 +123,12 @@
 endif()
 
 if(BOW_FRAMEWORK MATCHES "DBoW2")
-    set(BoW_LIBRARY ${DBoW2_LIBS})
+    set(BoW_LIBRARY ${DBoW2_LIBRARIES})
     target_compile_definitions(${PROJECT_NAME} PUBLIC USE_DBOW2)
     message(STATUS "BoW framework: ${BOW_FRAMEWORK} (found in ${DBoW2_INCLUDE_DIRS})")
 elseif(BOW_FRAMEWORK MATCHES "FBoW")
     if(fbow_FOUND)
-        set(BoW_LIBRARY ${fbow_LIBS})
+        set(BoW_LIBRARY ${fbow_LIBRARIES})
         message(STATUS "BoW framework: ${BOW_FRAMEWORK} (found in ${fbow_INCLUDE_DIRS})")
     else()
         target_include_directories(${PROJECT_NAME}
@@ -226,14 +224,6 @@
 install(FILES ${HEADERS}
         DESTINATION ${STELLA_VSLAM_INCLUDE_INSTALL_DIR})
 
-# Install 3rd party headers
-install(FILES ${json_INCLUDE_DIR}/nlohmann/json.hpp ${json_INCLUDE_DIR}/nlohmann/json_fwd.hpp
-        DESTINATION ${STELLA_VSLAM_INCLUDE_INSTALL_DIR}/3rd/json/include/nlohmann)
-if(NOT spdlog_FOUND)
-  install(DIRECTORY ${spdlog_INCLUDE_DIR}
-          DESTINATION ${STELLA_VSLAM_INCLUDE_INSTALL_DIR}/3rd/spdlog)
-endif()
-
 # ----- Append subdirectory -----
 
 add_subdirectory(camera)
