diff --git a/CMakeLists.txt b/CMakeLists.txt
index b7d5036..0a5c022 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,6 +1,6 @@
 cmake_minimum_required(VERSION 2.8)
 
-project(mdnsd)
+project(mdnsd_example)
 list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/tools/cmake")
 
 include(GNUInstallDirs)
@@ -15,11 +15,9 @@ if(MDNSD_BUILD_FUZZING)
     add_definitions(-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION)
 endif()
 
-set(BUILD_SHARED_LIBS_DEFAULT ON)
 if(MDNSD_BUILD_OSS_FUZZ)
-    set(BUILD_SHARED_LIBS_DEFAULT OFF)
+    set(BUILD_SHARED_LIBS OFF)
 endif()
-option(BUILD_SHARED_LIBS "Build libmdnsd as a shared library" ${BUILD_SHARED_LIBS_DEFAULT})
 
 if(MDNSD_BUILD_FUZZING_CORPUS)
     add_definitions(-DMDNSD_DEBUG_DUMP_PKGS_FILE)
@@ -51,13 +49,13 @@ if(MDNSD_BUILD_FUZZING OR MDNSD_BUILD_OSS_FUZZ)
     add_subdirectory(tests/fuzz)
 endif()
 
-add_executable(mdnsd mdnsd.c)
-target_link_libraries(mdnsd PRIVATE libmdnsd)
+add_executable(mdns_daemon mdnsd.c)
+target_link_libraries(mdns_daemon PRIVATE mdnsd)
 
 add_executable(mquery mquery.c)
-target_link_libraries(mquery PRIVATE libmdnsd)
+target_link_libraries(mquery PRIVATE mdnsd)
 
-install(TARGETS mdnsd mquery
+install(TARGETS mdns_daemon mquery
     RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
 )
 
diff --git a/libmdnsd/CMakeLists.txt b/libmdnsd/CMakeLists.txt
index b7d2a4d..23c3473 100644
--- a/libmdnsd/CMakeLists.txt
+++ b/libmdnsd/CMakeLists.txt
@@ -1,6 +1,6 @@
 cmake_minimum_required(VERSION 2.8)
 
-project(libmdnsd)
+project(mdnsd)
 
 set(MDNSD_LOGLEVEL 300 CACHE STRING "Level at which logs shall be reported")
 
@@ -71,12 +71,13 @@ if(MDNSD_COMPILE_AS_CXX)
     set_source_files_properties(${LIBRARY_FILES} PROPERTIES LANGUAGE CXX)
 endif()
 
-add_library(libmdnsd ${LIBRARY_FILES} ${PUBLIC_INCLUDES})
-set_property(TARGET libmdnsd PROPERTY OUTPUT_NAME "mdnsd")
-set_property(TARGET libmdnsd PROPERTY DEFINE_SYMBOL "MDNSD_DYNAMIC_LINKING_EXPORT")
+add_library(${PROJECT_NAME} ${LIBRARY_FILES} ${PUBLIC_INCLUDES})
+if(MDNSD_DYNAMIC_LINKING)
+  target_compile_definitions(${PROJECT_NAME} PUBLIC MDNSD_DYNAMIC_LINKING_EXPORT)
+endif()
 
 if(WIN32)
-  target_link_libraries(libmdnsd PUBLIC wsock32 ws2_32)
+  target_link_libraries(${PROJECT_NAME} PUBLIC wsock32 ws2_32)
 endif()
 
 install(
@@ -88,10 +89,10 @@ install(
 
 install(
     FILES ${PUBLIC_INCLUDES}
-    DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}"
+    DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/lib${PROJECT_NAME}"
 )
 
 install(
     FILES ${PROJECT_BINARY_DIR}/mdnsd_config.h
-    DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}"
+    DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/lib${PROJECT_NAME}"
 )
diff --git a/libmdnsd/mdnsd_config.h.in b/libmdnsd/mdnsd_config.h.in
index e110e46..be9e229 100644
--- a/libmdnsd/mdnsd_config.h.in
+++ b/libmdnsd/mdnsd_config.h.in
@@ -30,27 +30,27 @@
 /* On Win32: Define MDNSD_DYNAMIC_LINKING and MDNSD_DYNAMIC_LINKING_EXPORT in order to
    export symbols for a DLL. Define MDNSD_DYNAMIC_LINKING only to import symbols
 	from a DLL.*/
-#cmakedefine MDNSD_DYNAMIC_LINKING
-#ifdef _WIN32
-# ifdef MDNSD_DYNAMIC_LINKING_EXPORT
-#  ifdef __GNUC__
-#   define MDNSD_EXPORT __attribute__ ((dllexport))
+#ifdef MDNSD_DYNAMIC_LINKING
+# ifdef _WIN32
+#  ifdef MDNSD_DYNAMIC_LINKING_EXPORT
+#   ifdef __GNUC__
+#    define MDNSD_EXPORT __attribute__ ((dllexport))
+#   else
+#    define MDNSD_EXPORT __declspec(dllexport)
+#   endif
 #  else
-#   define MDNSD_EXPORT __declspec(dllexport)
+#   ifdef __GNUC__
+#    define MDNSD_EXPORT __attribute__ ((dllexport))
+#   else
+#    define MDNSD_EXPORT __declspec(dllimport)
+#   endif
 #  endif
-# else
-#  ifdef __GNUC__
-#   define MDNSD_EXPORT __attribute__ ((dllexport))
-#  else
-#   define MDNSD_EXPORT __declspec(dllimport)
+#  if __GNUC__ || __clang__
+#   define MDNSD_EXPORT __attribute__ ((visibility ("default")))
 #  endif
 # endif
 #else
-# if __GNUC__ || __clang__
-#  define MDNSD_EXPORT __attribute__ ((visibility ("default")))
-# else
-#  define MDNSD_EXPORT
-# endif
+# define MDNSD_EXPORT
 #endif
 
 /**
