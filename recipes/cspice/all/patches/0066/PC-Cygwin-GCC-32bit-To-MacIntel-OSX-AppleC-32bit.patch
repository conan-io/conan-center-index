diff --git a/include/SpiceZpl.h b/include/SpiceZpl.h
index b2e0565..9a6b53b 100644
--- a/include/SpiceZpl.h
+++ b/include/SpiceZpl.h
@@ -111,7 +111,7 @@
 #define HAVE_PLATFORM_MACROS_H
  
  
-   #define   CSPICE_PC_CYGWIN
+   #define   CSPICE_MAC_OSX_INTEL
  
 #endif
  
diff --git a/src/cspice/SpiceZpl.h b/src/cspice/SpiceZpl.h
index b2e0565..9a6b53b 100644
--- a/src/cspice/SpiceZpl.h
+++ b/src/cspice/SpiceZpl.h
@@ -111,7 +111,7 @@
 #define HAVE_PLATFORM_MACROS_H
  
  
-   #define   CSPICE_PC_CYGWIN
+   #define   CSPICE_MAC_OSX_INTEL
  
 #endif
  
diff --git a/src/cspice/fndlun.c b/src/cspice/fndlun.c
index 1792f4a..4cf55d9 100644
--- a/src/cspice/fndlun.c
+++ b/src/cspice/fndlun.c
@@ -23,7 +23,7 @@
 
     /* Local variables */
     static integer i__;
-    static logical resvd[99], opened;
+    static logical resvd[63], opened;
     static integer iostat;
 
 /* $ Abstract */
@@ -521,13 +521,13 @@
 /*     Initialize RESVD if it hasn't already been done. */
 
     if (first) {
-	for (i__ = 1; i__ <= 99; ++i__) {
-	    resvd[(i__1 = i__ - 1) < 99 && 0 <= i__1 ? i__1 : s_rnge("resvd", 
+	for (i__ = 1; i__ <= 63; ++i__) {
+	    resvd[(i__1 = i__ - 1) < 63 && 0 <= i__1 ? i__1 : s_rnge("resvd", 
 		    i__1, "fndlun_", (ftnlen)533)] = FALSE_;
 	}
 	for (i__ = 1; i__ <= 3; ++i__) {
 	    resvd[(i__2 = resnum[(i__1 = i__ - 1) < 3 && 0 <= i__1 ? i__1 : 
-		    s_rnge("resnum", i__1, "fndlun_", (ftnlen)537)] - 1) < 99 
+		    s_rnge("resnum", i__1, "fndlun_", (ftnlen)537)] - 1) < 63 
 		    && 0 <= i__2 ? i__2 : s_rnge("resvd", i__2, "fndlun_", (
 		    ftnlen)537)] = TRUE_;
 	}
@@ -538,8 +538,8 @@
 /*     Cycle through the available units. Skip reserved units, */
 /*     INQUIRE about others. */
 
-    for (i__ = last + 1; i__ <= 99; ++i__) {
-	if (resvd[(i__1 = i__ - 1) < 99 && 0 <= i__1 ? i__1 : s_rnge("resvd", 
+    for (i__ = last + 1; i__ <= 63; ++i__) {
+	if (resvd[(i__1 = i__ - 1) < 63 && 0 <= i__1 ? i__1 : s_rnge("resvd", 
 		i__1, "fndlun_", (ftnlen)551)]) {
 	    opened = TRUE_;
 	} else {
@@ -579,7 +579,7 @@
 
     i__1 = last;
     for (i__ = 1; i__ <= i__1; ++i__) {
-	if (resvd[(i__2 = i__ - 1) < 99 && 0 <= i__2 ? i__2 : s_rnge("resvd", 
+	if (resvd[(i__2 = i__ - 1) < 63 && 0 <= i__2 ? i__2 : s_rnge("resvd", 
 		i__2, "fndlun_", (ftnlen)578)]) {
 	    opened = TRUE_;
 	} else {
@@ -801,13 +801,13 @@ L_reslun:
 /*     Initialize RESVD if it hasn't already been done. */
 
     if (first) {
-	for (i__ = 1; i__ <= 99; ++i__) {
-	    resvd[(i__1 = i__ - 1) < 99 && 0 <= i__1 ? i__1 : s_rnge("resvd", 
+	for (i__ = 1; i__ <= 63; ++i__) {
+	    resvd[(i__1 = i__ - 1) < 63 && 0 <= i__1 ? i__1 : s_rnge("resvd", 
 		    i__1, "fndlun_", (ftnlen)801)] = FALSE_;
 	}
 	for (i__ = 1; i__ <= 3; ++i__) {
 	    resvd[(i__2 = resnum[(i__1 = i__ - 1) < 3 && 0 <= i__1 ? i__1 : 
-		    s_rnge("resnum", i__1, "fndlun_", (ftnlen)805)] - 1) < 99 
+		    s_rnge("resnum", i__1, "fndlun_", (ftnlen)805)] - 1) < 63 
 		    && 0 <= i__2 ? i__2 : s_rnge("resvd", i__2, "fndlun_", (
 		    ftnlen)805)] = TRUE_;
 	}
@@ -817,8 +817,8 @@ L_reslun:
 /*     If UNIT is in the proper range, set the corresponding flag */
 /*     to TRUE. */
 
-    if (*unit >= 1 && *unit <= 99) {
-	resvd[(i__1 = *unit - 1) < 99 && 0 <= i__1 ? i__1 : s_rnge("resvd", 
+    if (*unit >= 1 && *unit <= 63) {
+	resvd[(i__1 = *unit - 1) < 63 && 0 <= i__1 ? i__1 : s_rnge("resvd", 
 		i__1, "fndlun_", (ftnlen)817)] = TRUE_;
     }
     return 0;
@@ -1011,14 +1011,14 @@ L_frelun:
 /*     Initialize RESVD if it hasn't already been done. */
 
     if (first) {
-	for (i__ = 1; i__ <= 99; ++i__) {
-	    resvd[(i__1 = i__ - 1) < 99 && 0 <= i__1 ? i__1 : s_rnge("resvd", 
+	for (i__ = 1; i__ <= 63; ++i__) {
+	    resvd[(i__1 = i__ - 1) < 63 && 0 <= i__1 ? i__1 : s_rnge("resvd", 
 		    i__1, "fndlun_", (ftnlen)1022)] = FALSE_;
 	}
 	for (i__ = 1; i__ <= 3; ++i__) {
 	    resvd[(i__2 = resnum[(i__1 = i__ - 1) < 3 && 0 <= i__1 ? i__1 : 
 		    s_rnge("resnum", i__1, "fndlun_", (ftnlen)1026)] - 1) < 
-		    99 && 0 <= i__2 ? i__2 : s_rnge("resvd", i__2, "fndlun_", 
+		    63 && 0 <= i__2 ? i__2 : s_rnge("resvd", i__2, "fndlun_", 
 		    (ftnlen)1026)] = TRUE_;
 	}
 	first = FALSE_;
@@ -1027,14 +1027,14 @@ L_frelun:
 /*     If UNIT is in the proper range and it has not been reserved by */
 /*     default, set the corresponding flag to FALSE. */
 
-    if (*unit >= 1 && *unit <= 99) {
+    if (*unit >= 1 && *unit <= 63) {
 	for (i__ = 1; i__ <= 3; ++i__) {
 	    if (*unit == resnum[(i__1 = i__ - 1) < 3 && 0 <= i__1 ? i__1 : 
 		    s_rnge("resnum", i__1, "fndlun_", (ftnlen)1040)]) {
 		return 0;
 	    }
 	}
-	resvd[(i__1 = *unit - 1) < 99 && 0 <= i__1 ? i__1 : s_rnge("resvd", 
+	resvd[(i__1 = *unit - 1) < 63 && 0 <= i__1 ? i__1 : s_rnge("resvd", 
 		i__1, "fndlun_", (ftnlen)1045)] = FALSE_;
     }
     return 0;
diff --git a/src/cspice/zzplatfm.c b/src/cspice/zzplatfm.c
index 26a0c61..b2b83c1 100644
--- a/src/cspice/zzplatfm.c
+++ b/src/cspice/zzplatfm.c
@@ -346,10 +346,9 @@ static integer c__6 = 6;
 
 /*        Platform/Environment specific assignments follow. */
 
-	s_copy(attcpy + 32, "PC", (ftnlen)32, (ftnlen)2);
-	s_copy(attcpy + 64, "MICROSOFT WINDOWS/CYGWIN", (ftnlen)32, (ftnlen)
-		24);
-	s_copy(attcpy + 96, "GCC", (ftnlen)32, (ftnlen)3);
+	s_copy(attcpy + 32, "INTEL MAC", (ftnlen)32, (ftnlen)9);
+	s_copy(attcpy + 64, "MAC OS-X", (ftnlen)32, (ftnlen)8);
+	s_copy(attcpy + 96, "CC", (ftnlen)32, (ftnlen)2);
 	s_copy(attcpy + 128, "LTL-IEEE", (ftnlen)32, (ftnlen)8);
 	s_copy(attcpy + 160, "LF", (ftnlen)32, (ftnlen)2);
 	s_copy(attcpy + 192, "BIG-IEEE LTL-IEEE", (ftnlen)32, (ftnlen)17);
