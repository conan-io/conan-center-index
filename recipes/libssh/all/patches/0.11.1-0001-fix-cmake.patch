diff --git a/CMakeLists.txt b/CMakeLists.txt
index 13330ea3..9b86072d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -47,7 +47,7 @@ if (WITH_ZLIB)
 endif (WITH_ZLIB)
 
 if (WITH_GCRYPT)
-  find_package(GCrypt 1.5.0 REQUIRED)
+  find_package(libgcrypt 1.5.0 REQUIRED)
   message(WARNING "libgcrypt cryptographic backend is deprecated and will be removed in future releases.")
 elseif(WITH_MBEDTLS)
     find_package(MbedTLS REQUIRED)
diff --git a/ConfigureChecks.cmake b/ConfigureChecks.cmake
index 8765dc6e..f454d325 100644
--- a/ConfigureChecks.cmake
+++ b/ConfigureChecks.cmake
@@ -218,22 +218,22 @@ if (OPENSSL_FOUND)
   set(HAVE_LIBCRYPTO 1)
 endif (OPENSSL_FOUND)
 
-if (GCRYPT_FOUND)
+if (libgcrypt_FOUND)
     set(HAVE_LIBGCRYPT 1)
-    if (GCRYPT_VERSION VERSION_GREATER "1.4.6")
+    if (libgcrypt_VERSION VERSION_GREATER "1.4.6")
         set(HAVE_GCRYPT_ECC 1)
         set(HAVE_ECC 1)
-    endif (GCRYPT_VERSION VERSION_GREATER "1.4.6")
-    if (NOT GCRYPT_VERSION VERSION_LESS "1.7.0")
+    endif (libgcrypt_VERSION VERSION_GREATER "1.4.6")
+    if (NOT libgcrypt_VERSION VERSION_LESS "1.7.0")
         set(HAVE_GCRYPT_CHACHA_POLY 1)
-    endif (NOT GCRYPT_VERSION VERSION_LESS "1.7.0")
-endif (GCRYPT_FOUND)
+    endif (NOT libgcrypt_VERSION VERSION_LESS "1.7.0")
+endif (libgcrypt_FOUND)
 
-if (MBEDTLS_FOUND)
+if (MbedTLS_FOUND)
     set(HAVE_LIBMBEDCRYPTO 1)
     set(HAVE_ECC 1)
 
-    set(CMAKE_REQUIRED_INCLUDES "${MBEDTLS_INCLUDE_DIR}/mbedtls")
+    set(CMAKE_REQUIRED_INCLUDES "${MbedTLS_INCLUDE_DIR}/mbedtls")
     check_include_file(chacha20.h HAVE_MBEDTLS_CHACHA20_H)
     check_include_file(poly1305.h HAVE_MBEDTLS_POLY1305_H)
     if (WITH_BLOWFISH_CIPHER)
@@ -242,7 +242,7 @@ if (MBEDTLS_FOUND)
 
     unset(CMAKE_REQUIRED_INCLUDES)
 
-endif (MBEDTLS_FOUND)
+endif (MbedTLS_FOUND)
 
 if (CMAKE_USE_PTHREADS_INIT)
     set(HAVE_PTHREAD 1)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 199acbd9..3e715a96 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -12,27 +12,13 @@ if (TARGET OpenSSL::Crypto)
   list(APPEND LIBSSH_LINK_LIBRARIES OpenSSL::Crypto)
 endif ()
 
-if (MBEDTLS_CRYPTO_LIBRARY)
-    set(LIBSSH_PRIVATE_INCLUDE_DIRS
-      ${LIBSSH_PRIVATE_INCLUDE_DIRS}
-      ${MBEDTLS_INCLUDE_DIR}
-    )
-  set(LIBSSH_LINK_LIBRARIES
-    ${LIBSSH_LINK_LIBRARIES}
-    ${MBEDTLS_CRYPTO_LIBRARY}
-  )
-endif (MBEDTLS_CRYPTO_LIBRARY)
-
-if (GCRYPT_LIBRARIES)
-  set(LIBSSH_PRIVATE_INCLUDE_DIRS
-    ${LIBSSH_PRIVATE_INCLUDE_DIRS}
-    ${GCRYPT_INCLUDE_DIR}
-  )
+if (TARGET MbedTLS::mbedcrypto)
+  list(APPEND LIBSSH_LINK_LIBRARIES MbedTLS::mbedcrypto)
+endif ()
 
-  set(LIBSSH_LINK_LIBRARIES
-    ${LIBSSH_LINK_LIBRARIES}
-    ${GCRYPT_LIBRARIES})
-endif()
+if (TARGET libgcrypt::libgcrypt)
+  list(APPEND LIBSSH_LINK_LIBRARIES libgcrypt::libgcrypt)
+endif ()
 
 if (WITH_ZLIB)
   list(APPEND LIBSSH_LINK_LIBRARIES ZLIB::ZLIB)
