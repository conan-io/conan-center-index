--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,5 @@
 cmake_minimum_required(VERSION 2.8)
+project(gainput)
 set(GAINPUT_MAJOR_VERSION 1)
 set(GAINPUT_MINOR_VERSION 0)
 set(GAINPUT_PATCH_VERSION 0)
@@ -9,7 +10,7 @@ option(GAINPUT_TESTS "Build Tests for Gainput" ON)
 option(GAINPUT_BUILD_SHARED "BUILD_SHARED" ON)
 option(GAINPUT_BUILD_STATIC "BUILD_STATIC" ON)
 
-if(!WIN32)
+if(NOT WIN32)
 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -Wextra")
 else()
 	set(XINPUT "Xinput9_1_0")
--- a/lib/CMakeLists.txt
+++ b/lib/CMakeLists.txt
@@ -1,10 +1,8 @@
-project(gainput)
 message(STATUS "GAINPUT version ${GAINPUT_VERSION}")
 
 set(CMAKE_MACOSX_RPATH 1)
 
 if(CMAKE_COMPILER_IS_GNUCXX)
-	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++98 -Wall -Wextra -pedantic -Wshadow -Wno-variadic-macros")
 endif()
 
 include_directories (include/)
@@ -36,12 +34,11 @@ if (GAINPUT_BUILD_STATIC)
   set(install_libs ${install_libs} gainputstatic)
 endif (GAINPUT_BUILD_STATIC)
 
+if(GAINPUT_BUILD_SHARED)
 if(WIN32)
 	target_link_libraries(gainput ${XINPUT} ws2_32)
-	target_link_libraries(gainputstatic ${XINPUT} ws2_32)
 	add_definitions(-DGAINPUT_LIB_DYNAMIC=1)
 elseif(ANDROID)
-	target_link_libraries(gainputstatic native_app_glue log android)
 	target_link_libraries(gainput native_app_glue log android)
 elseif(APPLE)
 	find_library(FOUNDATION Foundation)
@@ -58,6 +55,7 @@ elseif(APPLE)
       target_link_libraries(gainput ${APPKIT})
   endif()
 endif()
+endif()
 
 # Library installation directory
 if(NOT DEFINED CMAKE_INSTALL_LIBDIR)
