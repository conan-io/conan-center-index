diff --git a/src/main/cpp/aprdatagramsocket.cpp b/src/main/cpp/aprdatagramsocket.cpp
index f337736f..55852386 100644
--- a/src/main/cpp/aprdatagramsocket.cpp
+++ b/src/main/cpp/aprdatagramsocket.cpp
@@ -20,7 +20,10 @@
 #include <log4cxx/helpers/transcoder.h>
 #include <apr_network_io.h>
 
-using log4cxx::helpers::APRDatagramSocket;
+namespace log4cxx
+{
+namespace helpers
+{
 
 #define _priv static_cast<APRDatagramSocketPriv*>(m_priv.get())
 
@@ -207,3 +210,6 @@ bool APRDatagramSocket::isClosed() const
 {
 	return _priv->socket != nullptr;
 }
+
+} //namespace helpers
+} //namespace log4cxx
diff --git a/src/main/cpp/aprserversocket.cpp b/src/main/cpp/aprserversocket.cpp
index 797b5a1b..23140030 100644
--- a/src/main/cpp/aprserversocket.cpp
+++ b/src/main/cpp/aprserversocket.cpp
@@ -22,7 +22,10 @@
 #include "apr_pools.h"
 #include "apr_poll.h"
 
-using log4cxx::helpers::APRServerSocket;
+namespace log4cxx
+{
+namespace helpers
+{
 
 #define _priv static_cast<APRServerSocketPriv*>(m_priv.get())
 
@@ -98,7 +101,7 @@ void APRServerSocket::close(){
 /** Listens for a connection to be made to this socket and
 accepts it
 */
-log4cxx::helpers::SocketPtr APRServerSocket::accept()
+SocketPtr APRServerSocket::accept()
 {
 	std::unique_lock<std::mutex> lock(_priv->mutex);
 
@@ -155,3 +158,6 @@ log4cxx::helpers::SocketPtr APRServerSocket::accept()
 
 	return std::make_shared<APRSocket>(newSocket, newPool);
 }
+
+} //namespace helpers
+} //namespace log4cxx
diff --git a/src/main/cpp/aprsocket.cpp b/src/main/cpp/aprsocket.cpp
index e212c689..624363aa 100644
--- a/src/main/cpp/aprsocket.cpp
+++ b/src/main/cpp/aprsocket.cpp
@@ -23,9 +23,12 @@
 #include "apr_network_io.h"
 #include "apr_signal.h"
 
-using log4cxx::helpers::APRSocket;
+namespace log4cxx
+{
+namespace helpers
+{
 
-struct APRSocket::APRSocketPriv : public log4cxx::helpers::Socket::SocketPrivate {
+struct APRSocket::APRSocketPriv : public Socket::SocketPrivate {
 	APRSocketPriv() :
 		socket(nullptr)
 	{}
@@ -154,3 +157,6 @@ void APRSocket::close()
 		_priv->socket = 0;
 	}
 }
+
+} //namespace helpers
+} //namespace log4cxx
