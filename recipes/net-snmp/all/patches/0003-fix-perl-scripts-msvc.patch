--- win32/build.pl
+++ win32/build.pl
@@ -35,7 +35,7 @@
 my $install_devel = false;
 my $perl = false;
 my $perl_install = false;
-my $logging = true;
+my $logging = false;
 my $debug = false;
 my $configOpts;
 my $link_dynamic = false;
@@ -44,15 +44,7 @@
 # Path of this script (source tree path + "win32").
 my $current_pwd = dirname(abs_path($0));
 
-if (!defined($ENV{MSVCDir}) && !defined($ENV{VCINSTALLDIR}) &&
-    !defined($ENV{TARGET_CPU})) {
-  print "\nPlease run VCVARS32.BAT first to set up the Visual Studio build\n" .
-        "environment.\n\n";
-  system("pause");
-  exit;
-}
-
-while (1) {
+while (0) {
   print "\n\nNet-SNMP build and install options\n";
   print "==================================\n\n";
   print "1.  OpenSSL support:                " . ($openssl ? "enabled" : "disabled"). "\n";
@@ -192,6 +184,8 @@
 print "Running Configure...\n";
 system("perl Configure $configOpts --linktype=$linktype --prefix=\"$install_base\"" . ($logging ? " > configure.out 2>&1" : "")) == 0 || die ($logging ? "Build error (see configure.out)" : "Build error (see above)");
 
+exit;
+
 print "Cleaning...\n";
 system("nmake /nologo clean" . ($logging ? " > clean.out 2>&1" : "")) == 0 || die ($logging ? "Build error (see clean.out)" : "Build error (see above)");
 
--- win32/Configure
+++ win32/Configure
@@ -6,7 +6,6 @@
 #
 use strict;
 use warnings;
-use ExtUtils::Embed;
 use Getopt::Long;
 
 my $version = "unknown";
@@ -190,8 +189,6 @@
 
 my $perl_inc = $opensslincdir ? "/I $opensslincdir" : "";
 
-my $perl_cflags = ExtUtils::Embed::ccopts();
-
 my %makefile_subs = (
     "app" => [ "^APPS=",       "APPS=" . join(" ", @apps)	    ],
     "apc" => [ "^APPS_CLEAN=", "APPS_CLEAN=" . join(" ", @apps_clean)],
@@ -205,29 +202,23 @@
     "sdk" => [ "^SDK=",        $sdk == 1 ? "SDK=true" : "SDK=false" ],
     "pin" => [ "^PERL_DEFINE=","PERL_DEFINE=$perl_define"           ],
     "pdf" => [ "^PERL_INC=",   "PERL_INC=$perl_inc"                 ],
-    "pcf" => [ "^PERL_CFLAGS=","PERL_CFLAGS=$perl_cflags"           ],
+    "pcf" => [ "^PERL_CFLAGS=","PERL_CFLAGS="           ],
     "cfl" => [ "^CFLAGS=",     "CFLAGS=$perl_define " .
                                "/D WIN32_LEAN_AND_MEAN " .
-                               "/EHsc " .
-                               "/FD " .
-                               "/FR\$(INTDIR)\\ " .
                                "/Fd\$(INTDIR)\\\$(PROGNAME).pdb " .
                                "/Fo\$(INTDIR)\\ " .
                                "$perl_inc " .
-                               "$perl_cflags " .
                                "/c " .
-                               "/W3 " .
-                               "/Zi " .
+                               "/W3 /wd4267 /wd4244 /GS " .
                                "/nologo " .
                ($config eq "release" ?
-                "/MD  /D NDEBUG /O2 " :
-                "/MDd /D _DEBUG /Od /Gm ")
+                "/runtime /O2 /Ob2 /DNDEBUG " :
+                "/runtime /Zi /Ob0 /Od /RTC1 ")
              ],
     "lfl" => [ "^LDFLAGS=",    "LDFLAGS=" .
                                ($config eq "debug" ? "/debug " : "") .
                                ($openssllibdir ? "/libpath:$openssllibdir" :
-                                "") . " " .
-                               "/MANIFEST:EMBED"
+                                "")
              ],
     "rsc" => [ "^RSCFLAGS=",   "RSCFLAGS=/l 0x409 " .
                                ($config eq "release" ? "/d NDEBUG" :
@@ -308,9 +299,3 @@
 print "  Blumenthal AES:             " . ($blumenthal_aes ? "enabled" : "disabled") . "\n";
 print "  IPv6 transport:             " . ($b_ipv6 == 1 ? "enabled" : "disabled") . "\n";
 print "  winExtDLL agent:            " . ($b_winextdll == 1 ? "enabled" : "disabled") . "\n";
-
-if ($ENV{INCLUDE} eq "") {
-  print "\n\nVisual Studio environment not detected.  Please run VCVARS32.BAT before\n";
-  print "running nmake\n\n";
-}
-
