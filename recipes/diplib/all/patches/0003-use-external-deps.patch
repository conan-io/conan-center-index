

---
 doc/CMakeLists.txt |    6 ++++--
 src/CMakeLists.txt |   18 ++++++++----------
 2 files changed, 12 insertions(+), 12 deletions(-)

Index: src/CMakeLists.txt
===================================================================
--- src/CMakeLists.txt
+++ src/CMakeLists.txt
@@ -110,22 +110,20 @@ endif()
 set(HAS_128_INT ${HAS_128_INT} PARENT_SCOPE)
 
 # Eigen
-target_include_directories(DIP PRIVATE "${PROJECT_SOURCE_DIR}/dependencies/eigen3")
-target_compile_definitions(DIP PRIVATE
-                           EIGEN_MPL2_ONLY # This makes sure we only use parts of the Eigen library that use the MPL2 license or more permissive ones.
-                           EIGEN_DONT_PARALLELIZE) # This to prevent Eigen algorithms trying to run in parallel -- we parallelize at a larger scale.
+find_package(Eigen3 REQUIRED NO_MODULE)
+target_link_libraries(DIP PRIVATE Eigen3::Eigen)
 
 # zlib (for use in libics and libtiff)
 set(DIP_ENABLE_ZLIB ON CACHE BOOL "Enable zlib compression in ICS and TIFF (deflate)")
 if(DIP_ENABLE_ZLIB)
-   add_subdirectory("${PROJECT_SOURCE_DIR}/dependencies/zlib" "${PROJECT_BINARY_DIR}/zlib" EXCLUDE_FROM_ALL)
+  find_package(ZLIB REQUIRED)
 endif()
 
 # libjpeg (for use in libtiff)
 set(DIP_ENABLE_JPEG ON CACHE BOOL "Enable JPEG file support and compression in TIFF")
 if(DIP_ENABLE_JPEG)
-   add_subdirectory("${PROJECT_SOURCE_DIR}/dependencies/libjpeg" "${PROJECT_BINARY_DIR}/libjpeg" EXCLUDE_FROM_ALL)
-   target_link_libraries(DIP PRIVATE jpeg)
+  find_package(JPEG REQUIRED)
+   target_link_libraries(DIP PRIVATE JPEG::JPEG)
    target_compile_definitions(DIP PRIVATE DIP_CONFIG_HAS_JPEG)
 endif()
 
@@ -141,9 +139,9 @@ endif()
 # libtiff
 set(DIP_ENABLE_TIFF ON CACHE BOOL "Enable TIFF file support")
 if(DIP_ENABLE_TIFF)
-   add_subdirectory("${PROJECT_SOURCE_DIR}/dependencies/libtiff" "${PROJECT_BINARY_DIR}/libtiff" EXCLUDE_FROM_ALL)
-   target_link_libraries(DIP PRIVATE tiff)
-   target_compile_definitions(DIP PRIVATE DIP_CONFIG_HAS_TIFF)
+  find_package(TIFF REQUIRED)
+  target_link_libraries(DIP PRIVATE TIFF::TIFF)
+  target_compile_definitions(DIP PRIVATE DIP_CONFIG_HAS_TIFF)
 endif()
 
 # FFTW or PocketFFT for Fourier transforms
