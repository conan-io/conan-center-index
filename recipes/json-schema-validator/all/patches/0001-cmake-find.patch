iff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -8,30 +8,7 @@ cmake_minimum_required(VERSION 3.2)
 option(BUILD_TESTS      "Build tests"    ON)
 option(BUILD_EXAMPLES   "Build examples" ON)
 
-# if used as a subdirectory just define a json-hpp-target as add_library(json-hpp INTERFACE)
-# and associate the path to json.hpp via target_include_directories()
-if(NOT TARGET json-hpp)
-    set(NLOHMANN_JSON_DIR "" CACHE STRING "path to json.hpp")
-
-    # find nlohmann's json.hpp
-    find_path(JSON_HPP nlohmann/json.hpp
-        PATHS
-            ${NLOHMANN_JSON_DIR}
-            ${CMAKE_BINARY_DIR}/${NLOHMANN_JSON_DIR}) # in case it is a relative path
-
-    # get the full, real path
-    get_filename_component(NLOHMANN_JSON_REALPATH ${JSON_HPP} REALPATH)
-
-    if(NOT EXISTS ${NLOHMANN_JSON_REALPATH}/nlohmann/json.hpp)
-        message(FATAL_ERROR "please set NLOHMANN_JSON_DIR to a path in which NLohmann's json.hpp can be found. Looking for nlohmann/json.hpp in '${NLOHMANN_JSON_REALPATH}")
-    endif()
-
-    # create an interface-library for simple cmake-linking
-    add_library(json-hpp INTERFACE)
-    target_include_directories(json-hpp
-        INTERFACE
-            ${NLOHMANN_JSON_REALPATH})
-endif()
+find_package(nlohmann_json REQUIRED)
 
 # and one for the validator
 add_library(json-schema-validator
@@ -69,7 +46,7 @@ endif()
 
 target_link_libraries(json-schema-validator
     PUBLIC
-        json-hpp)
+        nlohmann_json::nlohmann_json)
 if(BUILD_SHARED_LIBS)
     target_compile_definitions(json-schema-validator
         PRIVATE
@@ -92,15 +69,6 @@ if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
     endif()
 endif()
 
-if(NOT TARGET json-hpp) # if used as a subdirectory do not install json-schema.hpp
-    install(
-        FILES
-           ${CMAKE_CURRENT_SOURCE_DIR}/src/json-schema.hpp
-        DESTINATION
-            ${CMAKE_INSTALL_PREFIX}/include
-    )
-endif()
-
 if (BUILD_EXAMPLES)
     # simple json-schema-validator-executable
     add_executable(json-schema-validate app/json-schema-validate.cpp)
