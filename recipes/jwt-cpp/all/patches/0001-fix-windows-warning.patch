diff --git a/include/jwt-cpp/base.h b/include/jwt-cpp/base.h
--- a/include/jwt-cpp/base.h
+++ b/include/jwt-cpp/base.h
@@ -123 +123 @@ namespace jwt {
-						return i;
+						return static_cast<uint32_t>(i);

diff --git a/include/jwt-cpp/jwt.h b/include/jwt-cpp/jwt.h
--- a/include/jwt-cpp/jwt.h
+++ b/include/jwt-cpp/jwt.h
@@ -79 +79 @@ namespace jwt {
-			std::unique_ptr<BIO, decltype(&BIO_free_all)> certbio(BIO_new_mem_buf(const_cast<char*>(certstr.data()), certstr.size()), BIO_free_all);
+			std::unique_ptr<BIO, decltype(&BIO_free_all)> certbio(BIO_new_mem_buf(const_cast<char*>(certstr.data()), (int)certstr.size()), BIO_free_all);
@@ -81 +81 @@ namespace jwt {
-			std::unique_ptr<BIO, decltype(&BIO_free_all)> certbio(BIO_new_mem_buf(certstr.data(), certstr.size()), BIO_free_all);
+			std::unique_ptr<BIO, decltype(&BIO_free_all)> certbio(BIO_new_mem_buf(certstr.data(), (int)certstr.size()), BIO_free_all);
@@ -102 +102 @@ namespace jwt {
-				if ((size_t)BIO_write(pubkey_bio.get(), epkey.data(), epkey.size()) != epkey.size())
+				if ((size_t)BIO_write(pubkey_bio.get(), epkey.data(), (int)epkey.size()) != epkey.size())
@@ -105 +105 @@ namespace jwt {
-				if ((size_t)BIO_write(pubkey_bio.get(), key.data(), key.size()) != key.size())
+				if ((size_t)BIO_write(pubkey_bio.get(), key.data(), (int)key.size()) != key.size())
@@ -118 +118 @@ namespace jwt {
-			if ((size_t)BIO_write(privkey_bio.get(), key.data(), key.size()) != key.size())
+			if ((size_t)BIO_write(privkey_bio.get(), key.data(), (int)key.size()) != key.size())
@@ -170,2 +170,2 @@ namespace jwt {
-				unsigned int len = res.size();
-				if (HMAC(md(), secret.data(), secret.size(), (const unsigned char*)data.data(), data.size(), (unsigned char*)res.data(), &len) == nullptr)
+				unsigned int len = (unsigned int)res.size();
+				if (HMAC(md(), secret.data(), (int)secret.size(), (const unsigned char*)data.data(), (int)data.size(), (unsigned char*)res.data(), &len) == nullptr)
@@ -281 +281 @@ namespace jwt {
-				if (!EVP_VerifyUpdate(ctx.get(), data.data(), data.size()))
+				if (!EVP_VerifyUpdate(ctx.get(), data.data(), (int)data.size()))
@@ -283 +283 @@ namespace jwt {
-				auto res = EVP_VerifyFinal(ctx.get(), (const unsigned char*)signature.data(), signature.size(), pkey.get());
+				auto res = EVP_VerifyFinal(ctx.get(), (const unsigned char*)signature.data(), (int)signature.size(), pkey.get());
@@ -322 +322 @@ namespace jwt {
-						if ((size_t)BIO_write(pubkey_bio.get(), epkey.data(), epkey.size()) != epkey.size())
+						if ((size_t)BIO_write(pubkey_bio.get(), epkey.data(), (int)epkey.size()) != epkey.size())
@@ -325 +325 @@ namespace jwt {
-						if ((size_t)BIO_write(pubkey_bio.get(), public_key.data(), public_key.size()) != public_key.size())
+						if ((size_t)BIO_write(pubkey_bio.get(), public_key.data(), (int)public_key.size()) != public_key.size())
@@ -336 +336 @@ namespace jwt {
-					if ((size_t)BIO_write(privkey_bio.get(), private_key.data(), private_key.size()) != private_key.size())
+					if ((size_t)BIO_write(privkey_bio.get(), private_key.data(), (int)private_key.size()) != private_key.size())
@@ -358 +358 @@ namespace jwt {
-					sig(ECDSA_do_sign((const unsigned char*)hash.data(), hash.size(), pkey.get()), ECDSA_SIG_free);
+					sig(ECDSA_do_sign((const unsigned char*)hash.data(), (int)hash.size(), pkey.get()), ECDSA_SIG_free);
@@ -387 +387 @@ namespace jwt {
-				if(ECDSA_do_verify((const unsigned char*)hash.data(), hash.size(), &sig, pkey.get()) != 1)
+				if(ECDSA_do_verify((const unsigned char*)hash.data(), (int)hash.size(), &sig, pkey.get()) != 1)
@@ -394 +394 @@ namespace jwt {
-				if(ECDSA_do_verify((const unsigned char*)hash.data(), hash.size(), sig, pkey.get()) != 1)
+				if(ECDSA_do_verify((const unsigned char*)hash.data(), (int)hash.size(), sig, pkey.get()) != 1)
@@ -433 +433 @@ namespace jwt {
-					return std::unique_ptr<BIGNUM, decltype(&BN_free)>(BN_bin2bn((const unsigned char*)str.data(), str.size(), nullptr), BN_free);
+					return std::unique_ptr<BIGNUM, decltype(&BN_free)>(BN_bin2bn((const unsigned char*)str.data(), (int)str.size(), nullptr), BN_free);
@@ -435 +435 @@ namespace jwt {
-				return std::unique_ptr<BIGNUM, decltype(&BN_free)>(BN_bin2bn((const unsigned char*)raw.data(), raw.size(), nullptr), BN_free);
+				return std::unique_ptr<BIGNUM, decltype(&BN_free)>(BN_bin2bn((const unsigned char*)raw.data(), (int)raw.size(), nullptr), BN_free);
@@ -451 +451 @@ namespace jwt {
-				if(EVP_DigestUpdate(ctx.get(), data.data(), data.size()) == 0)
+				if(EVP_DigestUpdate(ctx.get(), data.data(), (int)data.size()) == 0)
@@ -527 +527 @@ namespace jwt {
-				if(!RSA_public_decrypt(signature.size(), (const unsigned char*)signature.data(), (unsigned char*)sig.data(), key.get(), RSA_NO_PADDING))
+				if(!RSA_public_decrypt((int)signature.size(), (const unsigned char*)signature.data(), (unsigned char*)sig.data(), key.get(), RSA_NO_PADDING))
@@ -554 +554 @@ namespace jwt {
-				if(EVP_DigestUpdate(ctx.get(), data.data(), data.size()) == 0)
+				if(EVP_DigestUpdate(ctx.get(), data.data(), (int)data.size()) == 0)
