diff --git a/source/Lib/vvdec/CMakeLists.txt b/source/Lib/vvdec/CMakeLists.txt
index 8758189..dad1d67 100644
--- a/source/Lib/vvdec/CMakeLists.txt
+++ b/source/Lib/vvdec/CMakeLists.txt
@@ -73,7 +73,7 @@ add_compile_definitions( ${LIB_NAME_UC}_SOURCE )
 # set PRIVATE include directories for all targets in this directory
 include_directories( $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../../../include> $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}> )
 include_directories( . .. ../DecoderLib ../CommonLib ../CommonLib/x86 ../CommonLib/arm ../libmd5 )
-include_directories( SYSTEM ../../../thirdparty )
+find_package(simde CONFIG REQUIRED)
 
 # don't export all symbols from shared libraries by default (gcc: -fvisibility=hidden), only those marked as VVDEC_DECL
 #  behavior similar to __declspec(dllexport) on windows
@@ -112,7 +112,7 @@ if( VVDEC_ENABLE_X86_SIMD )
 
   #add_library( ${LIB_NAME}_x86_simd OBJECT ${X86_SSE41_SRC_FILES} ${X86_SSE42_SRC_FILES} ${X86_AVX_SRC_FILES} ${X86_AVX2_SRC_FILES} )
   add_library( ${LIB_NAME}_x86_simd OBJECT ${X86_SSE41_SRC_FILES} ${X86_AVX2_SRC_FILES} )
-  target_link_libraries( ${LIB_NAME}_x86_simd ${INTEL_ITT_LINK_TARGET} )
+  target_link_libraries( ${LIB_NAME}_x86_simd ${INTEL_ITT_LINK_TARGET} simde::simde)
 
   # disble LTO for the files compiled with special architecture flags
   set_target_properties( ${LIB_NAME}_x86_simd PROPERTIES
@@ -135,7 +135,7 @@ if( VVDEC_ENABLE_ARM_SIMD )
   #                                             INTERPROCEDURAL_OPTIMIZATION_RELEASE        OFF
   #                                             INTERPROCEDURAL_OPTIMIZATION_RELWITHDEBINFO OFF
   #                                             INTERPROCEDURAL_OPTIMIZATION_MINSIZEREL     OFF )
-
+  target_link_libraries( ${LIB_NAME}_arm_simd simde::simde)
   set_target_properties( ${LIB_NAME}_arm_simd PROPERTIES FOLDER lib )
 endif()
 
@@ -154,7 +154,7 @@ target_compile_definitions( ${LIB_NAME} PUBLIC $<$<STREQUAL:$<TARGET_PROPERTY:${
 
 target_include_directories( ${LIB_NAME} SYSTEM INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../../../include> $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}> )
 
-target_link_libraries( ${LIB_NAME} ${INTEL_ITT_LINK_TARGET} Threads::Threads )
+target_link_libraries( ${LIB_NAME} ${INTEL_ITT_LINK_TARGET} Threads::Threads simde::simde)
 
 set_target_properties( ${LIB_NAME} PROPERTIES
                                    SOVERSION ${PROJECT_VERSION_MAJOR}
