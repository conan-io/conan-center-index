diff --git a/external/googleapis/CMakeLists.txt b/external/googleapis/CMakeLists.txt
index a61b3c9..360863b 100644
--- a/external/googleapis/CMakeLists.txt
+++ b/external/googleapis/CMakeLists.txt
@@ -25,7 +25,7 @@ set(GOOGLE_CLOUD_CPP_GOOGLEAPIS_SHA256
     "741a6fcd6aaf171f6e72b6a132629c8efcfbab86212cbff392320f89d2ffd46f")
 
 set(EXTERNAL_GOOGLEAPIS_SOURCE
-    "${CMAKE_BINARY_DIR}/external/googleapis/src/googleapis_download")
+    "${PROJECT_BINARY_DIR}/external/googleapis/src/googleapis_download")
 
 set(EXTERNAL_GOOGLEAPIS_PROTO_FILES
     "google/api/http.proto"
@@ -164,29 +164,30 @@ endforeach ()
 
 include(ExternalProject)
 
-ExternalProject_Add(
-    googleapis_download
-    EXCLUDE_FROM_ALL ON
-    PREFIX "${CMAKE_BINARY_DIR}/external/googleapis"
-    URL ${GOOGLE_CLOUD_CPP_GOOGLEAPIS_URL}
-    URL_HASH SHA256=${GOOGLE_CLOUD_CPP_GOOGLEAPIS_SHA256}
-    PATCH_COMMAND
-        ""
-        # ~~~
-        # Scaffolding for patching googleapis after download. For example:
-        #   PATCH_COMMAND
-        #       patch
-        #       -p1
-        #       --input=/workspace/external/googleapis.patch
-        # NOTE: This should only be used while developing with a new
-        # protobuf message. No changes to `PATCH_COMMAND` should ever be
-        # committed to the main branch.
-        # ~~~
-    CONFIGURE_COMMAND ""
-    BUILD_COMMAND ""
-    INSTALL_COMMAND ""
-    BUILD_BYPRODUCTS ${EXTERNAL_GOOGLEAPIS_BYPRODUCTS}
-    LOG_DOWNLOAD OFF)
+# Provided by Conan as a requirement
+# ExternalProject_Add(
+#     googleapis_download
+#     EXCLUDE_FROM_ALL ON
+#     PREFIX "${CMAKE_BINARY_DIR}/external/googleapis"
+#     URL ${GOOGLE_CLOUD_CPP_GOOGLEAPIS_URL}
+#     URL_HASH SHA256=${GOOGLE_CLOUD_CPP_GOOGLEAPIS_SHA256}
+#     PATCH_COMMAND
+#         ""
+#         # ~~~
+#         # Scaffolding for patching googleapis after download. For example:
+#         #   PATCH_COMMAND
+#         #       patch
+#         #       -p1
+#         #       --input=/workspace/external/googleapis.patch
+#         # NOTE: This should only be used while developing with a new
+#         # protobuf message. No changes to `PATCH_COMMAND` should ever be
+#         # committed to the main branch.
+#         # ~~~
+#     CONFIGURE_COMMAND ""
+#     BUILD_COMMAND ""
+#     INSTALL_COMMAND ""
+#     BUILD_BYPRODUCTS ${EXTERNAL_GOOGLEAPIS_BYPRODUCTS}
+#     LOG_DOWNLOAD OFF)
 
 find_package(ProtobufWithTargets REQUIRED)
 find_package(gRPC REQUIRED)
@@ -242,7 +243,6 @@ function (external_googleapis_add_library proto)
 endfunction ()
 
 function (external_googleapis_set_version_and_alias short_name)
-    add_dependencies("google_cloud_cpp_${short_name}" googleapis_download)
     set_target_properties(
         "google_cloud_cpp_${short_name}"
         PROPERTIES EXPORT_NAME google-cloud-cpp::${short_name}
