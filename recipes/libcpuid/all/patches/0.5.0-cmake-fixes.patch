--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -27,4 +27,3 @@ endif(UNIX)
 # Include subdirectories
 add_subdirectory(libcpuid)
 add_subdirectory(cpuid_tool)
-add_subdirectory(tests)
--- a/cpuid_tool/CMakeLists.txt
+++ b/cpuid_tool/CMakeLists.txt
@@ -2,7 +2,7 @@ add_executable(cpuid_tool cpuid_tool.c)
 
 target_link_libraries(cpuid_tool cpuid)
 
-if(WIN32)
+if(0)
   install(
     TARGETS cpuid_tool
     CONFIGURATIONS Debug
@@ -12,5 +12,5 @@ if(WIN32)
     CONFIGURATIONS Release
     RUNTIME DESTINATION bin/Release)
 else()
-  install(TARGETS cpuid_tool RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
+  install(TARGETS cpuid_tool DESTINATION ${CMAKE_INSTALL_BINDIR})
 endif()
--- a/libcpuid/CMakeLists.txt
+++ b/libcpuid/CMakeLists.txt
@@ -13,7 +13,7 @@ if("${MSVC_CXX_ARCHITECTURE_ID}" MATCHES "x64")
 endif()
 
 if(UNIX)
-  add_library(cpuid SHARED ${cpuid_sources})
+  add_library(cpuid ${cpuid_sources})
 else()
   add_library(cpuid ${cpuid_sources})
 endif()
@@ -67,7 +67,7 @@ include(CMakePackageConfigHelpers)
 write_basic_package_version_file("${version_config}" COMPATIBILITY SameMajorVersion)
 
 # Configure '<PROJECT-NAME>Config.cmake' Use variables: * TARGETS_EXPORT_NAME * PROJECT_NAME
-configure_package_config_file("${CMAKE_MODULE_PATH}/Config.cmake.in" "${project_config}"
+configure_package_config_file("${PROJECT_SOURCE_DIR}/cmake/Config.cmake.in" "${project_config}"
                               INSTALL_DESTINATION "${config_install_dir}")
 
 # Installation
