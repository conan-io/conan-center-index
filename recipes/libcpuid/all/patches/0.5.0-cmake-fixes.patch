--- CMakeLists.txt
+++ CMakeLists.txt
@@ -11,8 +11,8 @@ set(CMAKE_CXX_STANDARD 11)
 set(CMAKE_C_STANDARD 99)
 
 # Global variables
-set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")
-
+set(PROJECT_CMAKE_DIR "${PROJECT_SOURCE_DIR}/cmake")
+list(APPEND MAKE_MODULE_PATH "${PROJECT_CMAKE_DIR}/cmake")
 if(UNIX)
   include(GNUInstallDirs)
   set(prefix "${CMAKE_INSTALL_PREFIX}")
--- libcpuid/CMakeLists.txt
+++ libcpuid/CMakeLists.txt
@@ -13,7 +13,7 @@
 endif()
 
 if(UNIX)
-  add_library(cpuid SHARED ${cpuid_sources})
+  add_library(cpuid ${cpuid_sources})
 else()
   add_library(cpuid ${cpuid_sources})
 endif()
@@ -67,7 +67,7 @@ include(CMakePackageConfigHelpers)
 write_basic_package_version_file("${version_config}" COMPATIBILITY SameMajorVersion)
 
 # Configure '<PROJECT-NAME>Config.cmake' Use variables: * TARGETS_EXPORT_NAME * PROJECT_NAME
-configure_package_config_file("${CMAKE_MODULE_PATH}/Config.cmake.in" "${project_config}"
+configure_package_config_file("${PROJECT_CMAKE_DIR}/Config.cmake.in" "${project_config}"
                               INSTALL_DESTINATION "${config_install_dir}")
 
 # Installation
--- cpuid_tool/CMakeLists.txt
+++ cpuid_tool/CMakeLists.txt
@@ -2,7 +2,7 @@
 
 target_link_libraries(cpuid_tool cpuid)
 
-if(WIN32)
+if(0)
   install(
     TARGETS cpuid_tool
     CONFIGURATIONS Debug
