--- a/src/fast_type_gen/CMakeLists.txt
+++ b/src/fast_type_gen/CMakeLists.txt
@@ -11,8 +11,7 @@ add_executable (fast_type_gen
 target_link_libraries (fast_type_gen
                        mfast_xml_parser_static
                        mfast_static
-                       ${Boost_SYSTEM_LIBRARY}
-                       ${Boost_FILESYSTEM_LIBRARY})
+                       ${CONAN_LIBS})
 
 install(TARGETS fast_type_gen
         EXPORT  mFASTTargets
--- a/src/mfast/CMakeLists.txt
+++ b/src/mfast/CMakeLists.txt
@@ -11,6 +11,7 @@ set(mfast_SRCS  ${sources} ${instruction_sources} ${headers} ${instruction_heade
 
 add_library(mfast_static STATIC ${mfast_SRCS})
 
+target_link_libraries(mfast_static ${CONAN_LIBS})
 
 if (UNIX)
 	set_target_properties(mfast_static PROPERTIES OUTPUT_NAME mfast)
@@ -30,6 +31,7 @@ if (BUILD_SHARED_LIBS)
   # would be deleted when the static library is built. For CMake 2.8.x, there
   # is no such problem.
   add_dependencies(mfast mfast_static)
+  target_link_libraries(mfast ${CONAN_LIBS})
 
   if (CMAKE_COMPILER_IS_GNUCXX OR ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang"))
 	set_target_properties(mfast PROPERTIES COMPILE_FLAGS -fvisibility=hidden)
@@ -38,6 +40,7 @@ if (BUILD_SHARED_LIBS)
   install(TARGETS mfast
           EXPORT  mFASTTargets
           RUNTIME DESTINATION "${INSTALL_BIN_DIR}" COMPONENT bin
+          ARCHIVE DESTINATION "${INSTALL_LIB_DIR}"
   	      LIBRARY DESTINATION "${INSTALL_LIB_DIR}" COMPONENT lib)
 
   SET(MFAST_LIBRARY mfast CACHE INTERNAL "mFast Library name")
--- a/src/mfast/coder/CMakeLists.txt
+++ b/src/mfast/coder/CMakeLists.txt
@@ -9,6 +9,7 @@ SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
 set(mfast_coder_SRCS ${sources} ${headers})
 
 add_library(mfast_coder_static STATIC ${mfast_coder_SRCS})
+target_link_libraries(mfast_coder_static ${CONAN_LIBS})
 
 if (UNIX)
 	set_target_properties(mfast_coder_static PROPERTIES OUTPUT_NAME mfast_coder)
@@ -28,6 +29,7 @@ if (BUILD_SHARED_LIBS)
   # would be deleted when the static library is built. For CMake 2.8.x, there
   # is no such problem.
   add_dependencies(mfast_coder mfast_coder_static)
+  target_link_libraries(mfast_coder ${CONAN_LIBS})
 
   if (CMAKE_COMPILER_IS_GNUCXX OR ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang"))
 	set_target_properties(mfast_coder PROPERTIES COMPILE_FLAGS -fvisibility=hidden)
@@ -39,6 +41,7 @@ if (BUILD_SHARED_LIBS)
   install(TARGETS mfast_coder
           EXPORT  mFASTTargets
           RUNTIME DESTINATION "${INSTALL_BIN_DIR}" COMPONENT bin
+          ARCHIVE DESTINATION "${INSTALL_LIB_DIR}"
   	      LIBRARY DESTINATION "${INSTALL_LIB_DIR}" COMPONENT lib)
 
   SET(MFAST_DYNAMIC_COMPONENTS ${MFAST_DYNAMIC_COMPONENTS} coder CACHE INTERNAL "")
--- a/src/mfast/json/CMakeLists.txt
+++ b/src/mfast/json/CMakeLists.txt
@@ -9,6 +9,7 @@ SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
 set(mfast_json_SRCS  ${sources} ${headers})
 
 add_library(mfast_json_static STATIC ${mfast_json_SRCS})
+target_link_libraries(mfast_json_static ${CONAN_LIBS})
 
 if (UNIX)
 	set_target_properties(mfast_json_static PROPERTIES OUTPUT_NAME mfast_json)
@@ -28,6 +29,7 @@ if (BUILD_SHARED_LIBS)
   # would be deleted when the static library is built. For CMake 2.8.x, there
   # is no such problem.
   add_dependencies(mfast_json mfast_json_static)
+  target_link_libraries(mfast_json ${CONAN_LIBS})
 
   if (CMAKE_COMPILER_IS_GNUCXX OR ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang"))
 	set_target_properties(mfast_json PROPERTIES COMPILE_FLAGS -fvisibility=hidden)
@@ -38,6 +40,7 @@ if (BUILD_SHARED_LIBS)
   install(TARGETS mfast_json
           EXPORT  mFASTTargets
           RUNTIME DESTINATION "${INSTALL_BIN_DIR}" COMPONENT bin
+          ARCHIVE DESTINATION "${INSTALL_LIB_DIR}"
   	      LIBRARY DESTINATION "${INSTALL_LIB_DIR}" COMPONENT lib)
 
   SET(MFAST_DYNAMIC_COMPONENTS ${MFAST_DYNAMIC_COMPONENTS} json CACHE INTERNAL "")
--- a/src/mfast/xml_parser/CMakeLists.txt
+++ b/src/mfast/xml_parser/CMakeLists.txt
@@ -6,11 +6,11 @@ file (GLOB_RECURSE sources "*.cpp")     ## retrieve all source files in current
 
 SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
 
-include_directories("${CMAKE_SOURCE_DIR}/tinyxml2")
 
-set(mfast_xml_parser_SRCS ${CMAKE_CURRENT_SOURCE_DIR}/../../../tinyxml2/tinyxml2.cpp ${sources} ${headers})
+set(mfast_xml_parser_SRCS ${sources} ${headers})
 
 add_library(mfast_xml_parser_static STATIC ${mfast_xml_parser_SRCS})
+target_link_libraries(mfast_xml_parser_static ${CONAN_LIBS} )
 
 if (UNIX)
 	set_target_properties(mfast_xml_parser_static PROPERTIES OUTPUT_NAME mfast_xml_parser)
@@ -30,6 +30,7 @@ if (BUILD_SHARED_LIBS)
   # would be deleted when the static library is built. For CMake 2.8.x, there
   # is no such problem.
   add_dependencies(mfast_xml_parser mfast_xml_parser_static)
+  target_link_libraries(mfast_xml_parser ${CONAN_LIBS} )
 
   if (CMAKE_COMPILER_IS_GNUCXX OR ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang"))
 	set_target_properties(mfast_xml_parser PROPERTIES COMPILE_FLAGS -fvisibility=hidden)
@@ -41,6 +42,7 @@ if (BUILD_SHARED_LIBS)
   install(TARGETS mfast_xml_parser
           EXPORT  mFASTTargets
           RUNTIME DESTINATION "${INSTALL_BIN_DIR}" COMPONENT bin
+          ARCHIVE DESTINATION "${INSTALL_LIB_DIR}"
   	      LIBRARY DESTINATION "${INSTALL_LIB_DIR}" COMPONENT lib)
 
   SET(MFAST_DYNAMIC_COMPONENTS ${MFAST_DYNAMIC_COMPONENTS} coder CACHE INTERNAL "")
