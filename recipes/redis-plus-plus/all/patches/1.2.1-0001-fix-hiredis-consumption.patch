--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -29,6 +29,7 @@ if (REDIS_PLUS_PLUS_USE_TLS)
     message(STATUS "Build with TLS support")
 
     set(TLS_SUB_DIR "${PROJECT_SOURCE_DIR}/tls")
+    find_package(hiredis REQUIRED hiredis_ssl CONFIG)
 else()
     set(TLS_SUB_DIR "${PROJECT_SOURCE_DIR}/no_tls")
 endif()
@@ -36,8 +37,7 @@ endif()
 file(GLOB TLS_SOURCE_FILES "${TLS_SUB_DIR}/*.cpp")
 
 # hiredis dependency
-find_path(HIREDIS_HEADER hiredis)
-find_library(HIREDIS_LIB hiredis)
+find_package(hiredis REQUIRED hiredis CONFIG)
 
 # Build static library
 option(REDIS_PLUS_PLUS_BUILD_STATIC "Build static library" ON)
@@ -48,7 +48,7 @@ if (REDIS_PLUS_PLUS_BUILD_STATIC)
     add_library(${STATIC_LIB} STATIC ${PROJECT_SOURCE_FILES} ${TLS_SOURCE_FILES})
 
     target_include_directories(${STATIC_LIB} PUBLIC ${PROJECT_SOURCE_DIR} ${TLS_SUB_DIR})
-    target_include_directories(${STATIC_LIB} PUBLIC ${HIREDIS_HEADER})
+    target_link_libraries(${STATIC_LIB} PUBLIC hiredis::hiredis)
 
     if (WIN32)
         target_compile_definitions(${STATIC_LIB} PRIVATE NOMINMAX)
@@ -58,6 +58,10 @@ if (REDIS_PLUS_PLUS_BUILD_STATIC)
         set_target_properties(${STATIC_LIB} PROPERTIES OUTPUT_NAME ${PROJECT_NAME})
     endif()
 
+    if (REDIS_PLUS_PLUS_USE_TLS)
+        target_link_libraries(${STATIC_LIB} PUBLIC hiredis::hiredis_ssl)
+    endif()
+
     set_target_properties(${STATIC_LIB} PROPERTIES CLEAN_DIRECT_OUTPUT 1)
     set_target_properties(${STATIC_LIB} PROPERTIES POSITION_INDEPENDENT_CODE ON)
 endif()
@@ -71,7 +75,7 @@ if (REDIS_PLUS_PLUS_BUILD_SHARED)
     add_library(${SHARED_LIB} SHARED ${PROJECT_SOURCE_FILES} ${TLS_SOURCE_FILES})
 
     target_include_directories(${SHARED_LIB} PUBLIC ${PROJECT_SOURCE_DIR} ${TLS_SUB_DIR})
-    target_include_directories(${SHARED_LIB} PUBLIC ${HIREDIS_HEADER})
+    target_link_libraries(${SHARED_LIB} PUBLIC hiredis::hiredis)
 
     if (WIN32)
         target_compile_definitions(${SHARED_LIB} PRIVATE NOMINMAX)
@@ -79,11 +83,9 @@ if (REDIS_PLUS_PLUS_BUILD_SHARED)
         set_target_properties(${SHARED_LIB} PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS TRUE)
     endif()
 
-    target_link_libraries(${SHARED_LIB} ${HIREDIS_LIB})
 
     if (REDIS_PLUS_PLUS_USE_TLS)
-        find_library(HIREDIS_TLS_LIB hiredis_ssl)
-        target_link_libraries(${SHARED_LIB} ${HIREDIS_TLS_LIB})
+        target_link_libraries(${SHARED_LIB} PUBLIC hiredis::hiredis_ssl)
     endif()
 
     set_target_properties(${SHARED_LIB} PROPERTIES OUTPUT_NAME ${PROJECT_NAME})
