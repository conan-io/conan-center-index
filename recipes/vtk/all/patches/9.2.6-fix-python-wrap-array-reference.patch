Required in additional to the 9.2.2-fix-cxx20.patch
From MR https://gitlab.kitware.com/vtk/vtk/-/merge_requests/9331

commit ee2c9bffa2f974861bf49476c7ada9df116fe577
Author: David Gobbi <david.gobbi@gmail.com>
Date:   Tue Jun 28 19:45:56 2022 -0600

    Properly wrap array reference parameters
    
    This small change allows wrapping of "T (&a)[N]" array parameters,
    such as "float (&a)[3]" or "char (&a)[256]".   These are now
    wrapped as size-checked Python-sequence to C++-array conversions.

diff --git a/Wrapping/Tools/vtkWrapPythonMethod.c b/Wrapping/Tools/vtkWrapPythonMethod.c
index 8ec18e3753..811906c1ec 100644
--- a/Wrapping/Tools/vtkWrapPythonMethod.c
+++ b/Wrapping/Tools/vtkWrapPythonMethod.c
@@ -1000,7 +1000,9 @@ static void vtkWrapPython_WriteBackToArgs(FILE* fp, ClassInfo* data, FunctionInf
       n = 1;
     }
 
-    if (vtkWrap_IsNonConstRef(arg) && !vtkWrap_IsStdVector(arg) && !vtkWrap_IsObject(arg))
+    /* the "arg->Count == 0" keeps this "if" from capturing "T (&a)[N]" */
+    if (vtkWrap_IsNonConstRef(arg) && !vtkWrap_IsStdVector(arg) && !vtkWrap_IsObject(arg) &&
+      arg->Count == 0)
     {
       fprintf(fp,
         "    if (!ap.ErrorOccurred())\n"
