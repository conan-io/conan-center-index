Add option to specify the precision of the output points.
Patch upstream in progress.

--- a/Filters/Core/vtkQuadricDecimation.cxx	2023-02-15 12:03:53.000000000 +0800
+++ b/Filters/Core/vtkQuadricDecimation.cxx	2024-03-07 09:24:41.475106400 +0800
@@ -87,6 +87,7 @@
   this->TensorsWeight = 0.1;
 
   this->ActualReduction = 0.0;
+  this->OutputPointsPrecision = vtkAlgorithm::DEFAULT_PRECISION;
 }
 
 //------------------------------------------------------------------------------
@@ -220,6 +221,20 @@
   pointData = vtkPointData::New();
   outputCellList = vtkIdList::New();
 
+  // Set the desired precision for the points in the output.
+  if (this->OutputPointsPrecision == vtkAlgorithm::DEFAULT_PRECISION)
+  {
+    points->SetDataType(input->GetPoints()->GetDataType());
+  }
+  else if (this->OutputPointsPrecision == vtkAlgorithm::SINGLE_PRECISION)
+  {
+    points->SetDataType(VTK_FLOAT);
+  }
+  else if (this->OutputPointsPrecision == vtkAlgorithm::DOUBLE_PRECISION)
+  {
+    points->SetDataType(VTK_DOUBLE);
+  }
+
   // copy the input (only polys) to our working mesh
   this->Mesh = vtkPolyData::New();
   points->DeepCopy(input->GetPoints());
@@ -393,7 +408,25 @@
     }
   }
 
+
+  // Explicitly set the desired precision for the points in the output.
+  vtkPoints * outputPoints = vtkPoints::New();
+  if (this->OutputPointsPrecision == vtkAlgorithm::DEFAULT_PRECISION)
+  {
+    outputPoints->SetDataType(input->GetPoints()->GetDataType());
+  }
+  else if (this->OutputPointsPrecision == vtkAlgorithm::SINGLE_PRECISION)
+  {
+    outputPoints->SetDataType(VTK_FLOAT);
+  }
+  else if (this->OutputPointsPrecision == vtkAlgorithm::DOUBLE_PRECISION)
+  {
+    outputPoints->SetDataType(VTK_DOUBLE);
+  }
+
+
   output->Reset();
+  output->SetPoints(outputPoints);
   output->AllocateCopy(this->Mesh);
   output->GetPointData()->CopyAllocate(this->Mesh->GetPointData(), 1);
   output->CopyCells(this->Mesh, outputCellList);
--- a/Filters/Core/vtkQuadricDecimation.h	2023-02-15 12:03:53.000000000 +0800
+++ b/Filters/Core/vtkQuadricDecimation.h	2024-03-07 09:02:59.706506200 +0800
@@ -156,6 +156,16 @@
   vtkGetMacro(ActualReduction, double);
   ///@}
 
+  ///@{
+  /**
+   * Set/get the desired precision for the output types. See the documentation
+   * for the vtkAlgorithm::DesiredOutputPrecision enum for an explanation of
+   * the available precision settings.
+   */
+  vtkSetMacro(OutputPointsPrecision, int);
+  vtkGetMacro(OutputPointsPrecision, int);
+  ///@}
+
 protected:
   vtkQuadricDecimation();
   ~vtkQuadricDecimation() override;
@@ -232,6 +242,7 @@
 
   double TargetReduction;
   double ActualReduction;
+  int OutputPointsPrecision;
   vtkTypeBool AttributeErrorMetric;
   vtkTypeBool VolumePreservation;
 
