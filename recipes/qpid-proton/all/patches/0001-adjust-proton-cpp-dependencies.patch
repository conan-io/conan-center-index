diff --git a/cpp/CMakeLists.txt b/cpp/CMakeLists.txt
index c65cc872..64388a75 100644
--- a/cpp/CMakeLists.txt
+++ b/cpp/CMakeLists.txt
@@ -41,9 +41,8 @@ include(versions.cmake)
 find_package(JsonCpp)
 option(ENABLE_JSONCPP "Use jsoncpp parser for connection configuration" ${JsonCpp_FOUND})
 if (ENABLE_JSONCPP)
-  include_directories(${JsonCpp_INCLUDE_DIRS})
   set(CONNECT_CONFIG_SRC src/connect_config.cpp)
-  set(CONNECT_CONFIG_LIBS ${JsonCpp_LIBRARY})
+  set(CONNECT_CONFIG_LIBS JsonCpp::JsonCpp)
 else()
   set(CONNECT_CONFIG_SRC src/connect_config_dummy.cpp)
 endif()
@@ -56,7 +55,7 @@ if (ENABLE_OPENTELEMETRYCPP)
   # of protobuf don't ship cmake config yet. We use this exporter in our examples
   find_package(Protobuf REQUIRED)
   set(TRACING_SRC src/tracing_opentelemetry.cpp src/tracing_stub.cpp)
-  set(TRACING_LIBS opentelemetry-cpp::trace)
+  set(TRACING_LIBS opentelemetry-cpp::opentelemetry_trace)
 else()
   set(TRACING_SRC src/tracing_stub.cpp src/init_tracer_stub.cpp)
 endif()
@@ -137,6 +136,7 @@ target_compile_definitions(qpid-proton-cpp
 
 if(BUILD_STATIC_LIBS)
   add_library(qpid-proton-cpp-static STATIC ${qpid-proton-cpp-source})
+  target_link_libraries(qpid-proton-cpp-static LINK_PRIVATE ${CONNECT_CONFIG_LIBS} ${TRACING_LIBS})
   target_compile_definitions(qpid-proton-cpp-static
     PRIVATE PROTON_DECLARE_STATIC "PN_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}"
     PUBLIC PN_CPP_DECLARE_STATIC)
