--- CMakeLists.txt	2020-12-25 22:29:38.000000000 -0300
+++ CMakeLists_fix.txt	2021-07-13 22:19:23.435169446 -0300
@@ -1776,218 +1776,11 @@
 #
 # Check for ACL libraries, headers, and functions
 #
-# The ACL support in libarchive is written against the POSIX1e draft,
-# which was never officially approved and varies quite a bit across
-# platforms.  Worse, some systems have completely non-POSIX acl functions,
-# which makes the following checks rather more complex than I would like.
+# Patched by Conan
 #
 IF(ENABLE_ACL)
-  # Solaris and derivates ACLs
-  CHECK_FUNCTION_EXISTS(acl HAVE_ACL)
-  CHECK_FUNCTION_EXISTS(facl HAVE_FACL)
-
-  # Libacl
-  CHECK_LIBRARY_EXISTS(acl "acl_get_file" "" HAVE_LIBACL)
-  IF(HAVE_LIBACL)
-    SET(CMAKE_REQUIRED_LIBRARIES "acl")
-    FIND_LIBRARY(ACL_LIBRARY NAMES acl)
-    LIST(APPEND ADDITIONAL_LIBS ${ACL_LIBRARY})
-  ENDIF(HAVE_LIBACL)
-
-  CHECK_TYPE_EXISTS(acl_t "sys/types.h;sys/acl.h" HAVE_ACL_T)
-  CHECK_TYPE_EXISTS(acl_entry_t "sys/types.h;sys/acl.h" HAVE_ACL_ENTRY_T)
-  CHECK_TYPE_EXISTS(acl_permset_t "sys/types.h;sys/acl.h" HAVE_ACL_PERMSET_T)
-  CHECK_TYPE_EXISTS(acl_tag_t "sys/types.h;sys/acl.h" HAVE_ACL_TAG_T)
-
-  IF(HAVE_ACL AND HAVE_FACL)
-    CHECK_TYPE_EXISTS(aclent_t "sys/acl.h" HAVE_ACLENT_T)
-    IF(HAVE_ACLENT_T)
-      CHECK_SYMBOL_EXISTS(GETACL "sys/acl.h" HAVE_DECL_GETACL)
-      CHECK_SYMBOL_EXISTS(GETACLCNT "sys/acl.h" HAVE_DECL_GETACLCNT)
-      CHECK_SYMBOL_EXISTS(SETACL "sys/acl.h" HAVE_DECL_SETACL)
-      IF(HAVE_DECL_GETACL AND
-         HAVE_DECL_GETACLCNT AND
-         HAVE_DECL_SETACL)
-        SET(ARCHIVE_ACL_SUNOS TRUE)
-      ENDIF()
-      CHECK_TYPE_EXISTS(ace_t "sys/acl.h" HAVE_ACE_T)
-      IF(HAVE_ACE_T)
-        CHECK_SYMBOL_EXISTS(ACE_GETACL "sys/acl.h" HAVE_DECL_ACE_GETACL)
-        CHECK_SYMBOL_EXISTS(ACE_GETACLCNT "sys/acl.h" HAVE_DECL_ACE_GETACLCNT)
-        CHECK_SYMBOL_EXISTS(ACE_SETACL "sys/acl.h" HAVE_DECL_ACE_SETACL)
-        IF(HAVE_DECL_ACE_GETACL AND
-           HAVE_DECL_ACE_GETACLCNT AND
-           HAVE_DECL_ACE_SETACL)
-          SET(ARCHIVE_ACL_SUNOS_NFS4 TRUE)
-        ENDIF()
-      ENDIF(HAVE_ACE_T)
-    ENDIF(HAVE_ACLENT_T)
-  ENDIF(HAVE_ACL AND HAVE_FACL)
-
-  IF(HAVE_ACL_T AND HAVE_ACL_ENTRY_T AND HAVE_ACL_PERMSET_T AND HAVE_ACL_TAG_T)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_add_perm HAVE_ACL_ADD_PERM)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_clear_perms HAVE_ACL_CLEAR_PERMS)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_create_entry HAVE_ACL_CREATE_ENTRY)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_delete_def_file HAVE_ACL_DELETE_DEF_FILE)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_free HAVE_ACL_FREE)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_get_entry HAVE_ACL_GET_ENTRY)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_get_fd HAVE_ACL_GET_FD)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_get_file HAVE_ACL_GET_FILE)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_get_permset HAVE_ACL_GET_PERMSET)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_get_qualifier HAVE_ACL_GET_QUALIFIER)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_get_tag_type HAVE_ACL_GET_TAG_TYPE)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_init HAVE_ACL_INIT)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_set_fd HAVE_ACL_SET_FD)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_set_file HAVE_ACL_SET_FILE)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_set_qualifier HAVE_ACL_SET_QUALIFIER)
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_set_tag_type HAVE_ACL_SET_TAG_TYPE)
-    IF(HAVE_ACL_ADD_PERM AND
-       HAVE_ACL_CLEAR_PERMS AND
-       HAVE_ACL_CREATE_ENTRY AND
-       HAVE_ACL_DELETE_DEF_FILE AND
-       HAVE_ACL_FREE AND
-       HAVE_ACL_GET_ENTRY AND
-       HAVE_ACL_GET_FD AND
-       HAVE_ACL_GET_FILE AND
-       HAVE_ACL_GET_PERMSET AND
-       HAVE_ACL_GET_QUALIFIER AND
-       HAVE_ACL_GET_TAG_TYPE AND
-       HAVE_ACL_INIT AND
-       HAVE_ACL_SET_FD AND
-       HAVE_ACL_SET_FILE AND
-       HAVE_ACL_SET_QUALIFIER AND
-       HAVE_ACL_SET_TAG_TYPE)
-         SET(HAVE_POSIX_ACL_FUNCS 1)
-    ENDIF()
-
-    CHECK_FUNCTION_EXISTS_GLIBC(acl_get_perm HAVE_ACL_GET_PERM)
-
-    IF(HAVE_POSIX_ACL_FUNCS AND HAVE_ACL_LIBACL_H AND HAVE_LIBACL AND
-       HAVE_ACL_GET_PERM)
-      SET(ARCHIVE_ACL_LIBACL TRUE)
-    ELSE()
-      CHECK_FUNCTION_EXISTS(acl_add_flag_np HAVE_ACL_ADD_FLAG_NP)
-      CHECK_FUNCTION_EXISTS(acl_clear_flags_np HAVE_ACL_CLEAR_FLAGS_NP)
-      CHECK_FUNCTION_EXISTS(acl_get_brand_np HAVE_ACL_GET_BRAND_NP)
-      CHECK_FUNCTION_EXISTS(acl_get_entry_type_np HAVE_ACL_GET_ENTRY_TYPE_NP)
-      CHECK_FUNCTION_EXISTS(acl_get_flag_np HAVE_ACL_GET_FLAG_NP)
-      CHECK_FUNCTION_EXISTS(acl_get_flagset_np HAVE_ACL_GET_FLAGSET_NP)
-      CHECK_FUNCTION_EXISTS(acl_get_fd_np HAVE_ACL_GET_FD_NP)
-      CHECK_FUNCTION_EXISTS(acl_get_link_np HAVE_ACL_GET_LINK_NP)
-      CHECK_FUNCTION_EXISTS(acl_get_perm_np HAVE_ACL_GET_PERM_NP)
-      CHECK_FUNCTION_EXISTS(acl_is_trivial_np HAVE_ACL_IS_TRIVIAL_NP)
-      CHECK_FUNCTION_EXISTS(acl_set_entry_type_np HAVE_ACL_SET_ENTRY_TYPE_NP)
-      CHECK_FUNCTION_EXISTS(acl_set_fd_np HAVE_ACL_SET_FD_NP)
-      CHECK_FUNCTION_EXISTS(acl_set_link_np HAVE_ACL_SET_LINK_NP)
-      CHECK_FUNCTION_EXISTS(mbr_gid_to_uuid HAVE_MBR_GID_TO_UUID)
-      CHECK_FUNCTION_EXISTS(mbr_uid_to_uuid HAVE_MBR_UID_TO_UUID)
-      CHECK_FUNCTION_EXISTS(mbr_uuid_to_id HAVE_MBR_UUID_TO_ID)
-
-      CHECK_C_SOURCE_COMPILES("#include <sys/types.h>
-#include <sys/acl.h>
-int main(void) { return ACL_TYPE_EXTENDED; }" HAVE_DECL_ACL_TYPE_EXTENDED)
-      CHECK_C_SOURCE_COMPILES("#include <sys/types.h>
-#include <sys/acl.h>
-int main(void) { return ACL_SYNCHRONIZE; }" HAVE_DECL_ACL_SYNCHRONIZE)
-      CHECK_SYMBOL_EXISTS(ACL_TYPE_NFS4 "sys/acl.h" HAVE_DECL_ACL_TYPE_NFS4)
-      CHECK_SYMBOL_EXISTS(ACL_USER "sys/acl.h" HAVE_DECL_ACL_USER)
-
-      IF(HAVE_POSIX_ACL_FUNCS AND
-         HAVE_ACL_GET_FD_NP AND
-         HAVE_ACL_GET_PERM_NP AND
-         NOT HAVE_ACL_GET_PERM AND
-         HAVE_ACL_SET_FD_NP)
-        IF(HAVE_DECL_ACL_USER)
-          SET(ARCHIVE_ACL_FREEBSD TRUE)
-          IF(HAVE_DECL_ACL_TYPE_NFS4 AND
-             HAVE_ACL_ADD_FLAG_NP AND
-             HAVE_ACL_CLEAR_FLAGS_NP AND
-             HAVE_ACL_GET_BRAND_NP AND
-             HAVE_ACL_GET_ENTRY_TYPE_NP AND
-             HAVE_ACL_GET_FLAGSET_NP AND
-             HAVE_ACL_SET_ENTRY_TYPE_NP)
-            SET(ARCHIVE_ACL_FREEBSD_NFS4 TRUE)
-          ENDIF()
-        ELSEIF(HAVE_DECL_ACL_TYPE_EXTENDED AND
-               HAVE_MEMBERSHIP_H AND
-               HAVE_ACL_ADD_FLAG_NP AND
-               HAVE_ACL_CLEAR_FLAGS_NP AND
-               HAVE_ACL_GET_FLAGSET_NP AND
-               HAVE_ACL_GET_LINK_NP AND
-               HAVE_ACL_SET_LINK_NP AND
-               HAVE_MBR_UID_TO_UUID AND
-               HAVE_MBR_GID_TO_UUID AND
-               HAVE_MBR_UUID_TO_ID)
-          SET(ARCHIVE_ACL_DARWIN TRUE)
-        ENDIF()
-      ENDIF()
-    ENDIF()
-  ENDIF(HAVE_ACL_T AND HAVE_ACL_ENTRY_T AND HAVE_ACL_PERMSET_T AND
-        HAVE_ACL_TAG_T)
-
-  # Richacl
-  CHECK_LIBRARY_EXISTS(richacl "richacl_get_file" "" HAVE_LIBRICHACL)
-  IF(HAVE_LIBRICHACL)
-    SET(CMAKE_REQUIRED_LIBRARIES "richacl")
-    FIND_LIBRARY(RICHACL_LIBRARY NAMES richacl)
-    LIST(APPEND ADDITIONAL_LIBS ${RICHACL_LIBRARY})
-  ENDIF(HAVE_LIBRICHACL)
-
-  CHECK_STRUCT_HAS_MEMBER("struct richace" e_type "sys/richacl.h"
-    HAVE_STRUCT_RICHACE)
-  CHECK_STRUCT_HAS_MEMBER("struct richacl" a_flags "sys/richacl.h"
-    HAVE_STRUCT_RICHACL)
-
-  IF(HAVE_LIBRICHACL AND HAVE_STRUCT_RICHACL AND HAVE_STRUCT_RICHACE)
-    CHECK_FUNCTION_EXISTS_GLIBC(richacl_alloc HAVE_RICHACL_ALLOC)
-    CHECK_FUNCTION_EXISTS_GLIBC(richacl_equiv_mode HAVE_RICHACL_EQUIV_MODE)
-    CHECK_FUNCTION_EXISTS_GLIBC(richacl_free HAVE_RICHACL_FREE)
-    CHECK_FUNCTION_EXISTS_GLIBC(richacl_get_fd HAVE_RICHACL_GET_FD)
-    CHECK_FUNCTION_EXISTS_GLIBC(richacl_get_file HAVE_RICHACL_GET_FILE)
-    CHECK_FUNCTION_EXISTS_GLIBC(richacl_set_fd HAVE_RICHACL_SET_FD)
-    CHECK_FUNCTION_EXISTS_GLIBC(richacl_set_file HAVE_RICHACL_SET_FILE)
-    IF(HAVE_RICHACL_ALLOC AND
-       HAVE_RICHACL_EQUIV_MODE AND
-       HAVE_RICHACL_FREE AND
-       HAVE_RICHACL_GET_FD AND
-       HAVE_RICHACL_GET_FILE AND
-       HAVE_RICHACL_SET_FD AND
-       HAVE_RICHACL_SET_FILE)
-      SET(ARCHIVE_ACL_LIBRICHACL TRUE)
-    ENDIF()
-  ENDIF(HAVE_LIBRICHACL AND HAVE_STRUCT_RICHACL AND HAVE_STRUCT_RICHACE)
-
-  IF(ARCHIVE_ACL_DARWIN)
-    MESSAGE(STATUS "ACL support: Darwin (limited NFSv4)")
-  ELSEIF(ARCHIVE_ACL_FREEBSD_NFS4)
-    MESSAGE(STATUS "ACL support: FreeBSD (POSIX.1e and NFSv4)")
-  ELSEIF(ARCHIVE_ACL_FREEBSD)
-    MESSAGE(STATUS "ACL support: FreeBSD (POSIX.1e)")
-  ELSEIF(ARCHIVE_ACL_LIBACL OR ARCHIVE_ACL_LIBRICHACL)
-    IF(ARCHIVE_ACL_LIBACL AND ARCHIVE_ACL_LIBRICHACL)
-      MESSAGE(STATUS "ACL support: libacl (POSIX.1e) + librichacl (NFSv4)")
-    ELSEIF(ARCHIVE_ACL_LIBRICHACL)
-      MESSAGE(STATUS "ACL support: librichacl (NFSv4)")
-    ELSE()
-      MESSAGE(STATUS "ACL support: libacl (POSIX.1e)")
-    ENDIF()
-  ELSEIF(ARCHIVE_ACL_SUNOS_NFS4)
-    MESSAGE(STATUS "ACL support: Solaris (POSIX.1e and NFSv4)")
-  ELSEIF(ARCHIVE_ACL_SUNOS)
-    MESSAGE(STATUS "ACL support: Solaris (POSIX.1e)")
-  ELSE()
-    MESSAGE(STATUS "ACL support: none")
-  ENDIF()
-
-ELSE(ENABLE_ACL)
-  # If someone runs cmake, then disables ACL support, we need
-  # to forcibly override the cached values for these.
-  SET(ARCHIVE_ACL_DARWIN FALSE)
-  SET(ARCHIVE_ACL_FREEBSD FALSE)
-  SET(ARCHIVE_ACL_FREEBSD_NFS4 FALSE)
-  SET(ARCHIVE_ACL_LIBACL FALSE)
-  SET(ARCHIVE_ACL_SUNOS FALSE)
-  SET(ARCHIVE_ACL_SUNOS_NFS4 FALSE)
+  find_package(acl REQUIRED)
+  LIST(APPEND ADDITIONAL_LIBS acl::acl)
 ENDIF(ENABLE_ACL)
 
 #
