diff --git a/CMakeLists.txt b/CMakeLists.txt
index 44ca23d..40439ca 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,7 +12,7 @@ endif()
 #
 PROJECT(libarchive C)
 #
-SET(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/build/cmake")
+LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/build/cmake")
 if(NOT CMAKE_RUNTIME_OUTPUT_DIRECTORY)
   set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${libarchive_BINARY_DIR}/bin)
 endif()
@@ -449,7 +449,7 @@ IF(ZLIB_FOUND)
   SET(HAVE_LIBZ 1)
   SET(HAVE_ZLIB_H 1)
   INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIR})
-  LIST(APPEND ADDITIONAL_LIBS ${ZLIB_LIBRARIES})
+  LIST(APPEND ADDITIONAL_LIBS ZLIB::ZLIB)
   IF(WIN32 AND NOT CYGWIN)
     #
     # Test if ZLIB_WINAPI macro is needed to use.
@@ -518,7 +518,7 @@ IF(LIBLZMA_FOUND)
   SET(HAVE_LIBLZMA 1)
   SET(HAVE_LZMA_H 1)
   CMAKE_PUSH_CHECK_STATE()
-  SET(CMAKE_REQUIRED_INCLUDES ${LIBLZMA_INCLUDE_DIR})
+  SET(CMAKE_REQUIRED_INCLUDES ${LIBLZMA_INCLUDE_DIRS})
   SET(CMAKE_REQUIRED_LIBRARIES ${LIBLZMA_LIBRARIES})
   INCLUDE_DIRECTORIES(${LIBLZMA_INCLUDE_DIRS})
   LIST(APPEND ADDITIONAL_LIBS ${LIBLZMA_LIBRARIES})
@@ -539,7 +539,7 @@ ELSE(LIBLZMA_FOUND)
 # LZMA not found and will not be used.
   SET(HAVE_LZMA_STREAM_ENCODER_MT 0)
 ENDIF(LIBLZMA_FOUND)
-MARK_AS_ADVANCED(CLEAR LIBLZMA_INCLUDE_DIR)
+MARK_AS_ADVANCED(CLEAR LIBLZMA_INCLUDE_DIRS)
 MARK_AS_ADVANCED(CLEAR LIBLZMA_LIBRARY)
 
 #
@@ -610,7 +610,7 @@ IF(ENABLE_LZ4)
   ENDIF (LZ4_INCLUDE_DIR)
 
   FIND_PATH(LZ4_INCLUDE_DIR lz4.h)
-  FIND_LIBRARY(LZ4_LIBRARY NAMES lz4 liblz4)
+  FIND_LIBRARY(LZ4_LIBRARY NAMES lz4 liblz4 lz4_static liblz4_static)
   INCLUDE(FindPackageHandleStandardArgs)
   FIND_PACKAGE_HANDLE_STANDARD_ARGS(LZ4 DEFAULT_MSG LZ4_LIBRARY LZ4_INCLUDE_DIR)
 ELSE(ENABLE_LZ4)
@@ -834,7 +834,7 @@ ENDIF(ENABLE_NETTLE)
 # Find OpenSSL
 # (Except on Mac, where OpenSSL is deprecated.)
 #
-IF(ENABLE_OPENSSL AND NOT CMAKE_SYSTEM_NAME MATCHES "Darwin")
+IF(ENABLE_OPENSSL)
   FIND_PACKAGE(OpenSSL)
   IF(OPENSSL_FOUND)
     SET(HAVE_LIBCRYPTO 1)
diff --git a/libarchive/CMakeLists.txt b/libarchive/CMakeLists.txt
index b79091c..bd9e980 100644
--- a/libarchive/CMakeLists.txt
+++ b/libarchive/CMakeLists.txt
@@ -251,6 +251,7 @@ IF(BUILD_SHARED_LIBS)
 ENDIF(BUILD_SHARED_LIBS)
 
 # archive_static is a static library
+if(NOT BUILD_SHARED_LIBS)
 ADD_LIBRARY(archive_static STATIC ${libarchive_SOURCES} ${include_HEADERS})
 TARGET_INCLUDE_DIRECTORIES(archive_static PUBLIC .)
 TARGET_LINK_LIBRARIES(archive_static ${ADDITIONAL_LIBS})
@@ -260,7 +261,7 @@ SET_TARGET_PROPERTIES(archive_static PROPERTIES COMPILE_DEFINITIONS
 IF(NOT WIN32 OR CYGWIN OR NOT BUILD_SHARED_LIBS)
   SET_TARGET_PROPERTIES(archive_static PROPERTIES OUTPUT_NAME archive)
 ENDIF(NOT WIN32 OR CYGWIN OR NOT BUILD_SHARED_LIBS)
-
+endif()
 IF(ENABLE_INSTALL)
   # How to install the libraries
   IF(BUILD_SHARED_LIBS)
@@ -269,10 +270,12 @@ IF(ENABLE_INSTALL)
             LIBRARY DESTINATION lib
             ARCHIVE DESTINATION lib)
   ENDIF(BUILD_SHARED_LIBS)
+  if(NOT BUILD_SHARED_LIBS)
   INSTALL(TARGETS archive_static
           RUNTIME DESTINATION bin
           LIBRARY DESTINATION lib
           ARCHIVE DESTINATION lib)
+  endif()
   INSTALL_MAN(${libarchive_MANS})
   INSTALL(FILES ${include_HEADERS} DESTINATION include)
 ENDIF()
