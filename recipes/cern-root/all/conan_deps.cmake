macro(custom_find_package name)
    find_package(${name} ${ARGN}
        # Allow only Conan packages
        NO_DEFAULT_PATH
        PATHS ${CMAKE_PREFIX_PATH}
    )
    string(TOUPPER ${name} name_upper)
    set(${name_upper}_FOUND TRUE)
    set(${name_upper}_VERSION_STRING ${${name}_VERSION_STRING})
    set(${name_upper}_INCLUDE_DIRS ${${name}_INCLUDE_DIRS})
    set(${name_upper}_INCLUDE_DIR ${${name}_INCLUDE_DIR})
    set(${name_upper}_LIBRARIES ${${name}_LIBRARIES})
    set(${name_upper}_DEFINITIONS ${${name}_DEFINITIONS})
    unset(name_upper)
endmacro()

# All packages listed under https://github.com/root-project/root/blob/v6-22-06/cmake/modules/SearchInstalledSoftware.cmake
#custom_find_package(AfterImage REQUIRED CONFIG)
#custom_find_package(Alien REQUIRED CONFIG)
custom_find_package(Arrow REQUIRED CONFIG)
#custom_find_package(BLAS REQUIRED CONFIG)
custom_find_package(CFITSIO REQUIRED CONFIG)
#custom_find_package(CUDA REQUIRED CONFIG)
#custom_find_package(CuDNN REQUIRED CONFIG)
custom_find_package(CURL REQUIRED CONFIG)
#custom_find_package(Davix REQUIRED CONFIG)
#custom_find_package(DCAP REQUIRED CONFIG)
#custom_find_package(FastCGI REQUIRED CONFIG)
custom_find_package(FFTW REQUIRED CONFIG)
custom_find_package(Freetype REQUIRED CONFIG)
#custom_find_package(FTGL REQUIRED CONFIG)
#custom_find_package(GFAL REQUIRED CONFIG)
#custom_find_package(gl2ps REQUIRED CONFIG)
custom_find_package(GLEW REQUIRED)
#custom_find_package(Graphviz REQUIRED CONFIG)
custom_find_package(GSL REQUIRED CONFIG)
#custom_find_package(jemalloc REQUIRED CONFIG)
custom_find_package(LibLZMA REQUIRED CONFIG)
find_package(libuuid QUIET)
custom_find_package(LibXml2 REQUIRED CONFIG)
custom_find_package(LZ4 REQUIRED CONFIG)
#custom_find_package(Monalisa REQUIRED CONFIG)
#custom_find_package(MPI REQUIRED CONFIG)
custom_find_package(MySQL REQUIRED CONFIG)
custom_find_package(ODBC REQUIRED CONFIG)
find_package(OpenGL REQUIRED)
custom_find_package(OpenSSL REQUIRED CONFIG)
#custom_find_package(Oracle REQUIRED CONFIG)
custom_find_package(PCRE REQUIRED CONFIG)
custom_find_package(PostgreSQL REQUIRED CONFIG)
#custom_find_package(Pythia6 REQUIRED CONFIG)
#custom_find_package(Pythia8 REQUIRED CONFIG)
#custom_find_package(R REQUIRED CONFIG)
custom_find_package(Sqlite REQUIRED CONFIG)
custom_find_package(TBB REQUIRED CONFIG)
#custom_find_package(tcmalloc REQUIRED CONFIG)
#custom_find_package(Unuran REQUIRED CONFIG)
#custom_find_package(Vc REQUIRED CONFIG)
#custom_find_package(Vdt REQUIRED CONFIG)
#custom_find_package(VecCore REQUIRED CONFIG)
#custom_find_package(VecGeom REQUIRED CONFIG)
#custom_find_package(XROOTD REQUIRED CONFIG)
custom_find_package(xxHash REQUIRED CONFIG)
custom_find_package(ZLIB REQUIRED CONFIG)
custom_find_package(ZSTD REQUIRED CONFIG)

if(asimage)
    custom_find_package(GIF REQUIRED CONFIG)
    custom_find_package(JPEG REQUIRED CONFIG)
    custom_find_package(PNG REQUIRED CONFIG)
    custom_find_package(TIFF REQUIRED CONFIG)
endif()

if(x11)
    find_package(X11 REQUIRED)
    custom_find_package(X11_Xft REQUIRED CONFIG)
    set(X11_Xft_LIB ${X11_Xft_LIBRARIES})
    set(X11_Xft_INCLUDE_PATH ${X11_Xft_INCLUDE_DIR}/X11/Xft/Xft.h)
    custom_find_package(X11_Xpm REQUIRED CONFIG)
    set(X11_Xpm_LIB ${X11_Xpm_LIBRARIES})
    set(X11_Xpm_INCLUDE_PATH ${X11_Xpm_INCLUDE_DIR}/X11/xpm.h)
endif()

link_libraries(FreeType::FreeType)
