from conan import ConanFile
from conan.tools.cmake import CMake, cmake_layout, CMakeToolchain


class TestPackageConan(ConanFile):
    settings = "os", "arch", "compiler", "build_type"
    generators = "CMakeDeps", "VirtualBuildEnv"

    def build_requirements(self):
        self.tool_requires(self.tested_reference_str)

    def layout(self):
        cmake_layout(self)

    def generate(self):
        tc = CMakeToolchain(self)
        tc.variables["CMAKE_TRY_COMPILE_TARGET_TYPE"] = "STATIC_LIBRARY"
        tc.blocks["arch_flags"].values = {
            "arch_flag": "-mthumb -mfloat-abi=hard -march=armv7e-m+fp -mtune=cortex-m4"
        }
        tc.variables[
            "CMAKE_EXE_LINKER_FLAGS_INIT"
        ] = "${{CMAKE_EXE_LINKER_FLAGS_INIT}} -specs=nano.specs -specs=nosys.specs"
        tc.generate()

    def build(self):
        cmake = CMake(self)
        cmake.configure()
        cmake.build()

    def test(self):
        # Executables generated by this toolchain will never work on a host
        # machine and thus can never be executed.
        pass
