diff --git CMakeLists.txt CMakeLists.txt
index 69a249b..ea86ea1 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -19,7 +19,7 @@ cmake_minimum_required(VERSION 3.15)
 # CMP0091: MSVC runtime library flags are selected by an abstraction.
 # New in CMake 3.15. https://cmake.org/cmake/help/latest/policy/CMP0091.html
 if(POLICY CMP0091)
-  cmake_policy(SET CMP0091 OLD)
+  cmake_policy(SET CMP0091 NEW)
 endif()
 
 set(UHDR_MAJOR_VERSION 1)
@@ -144,7 +144,7 @@ if(UHDR_BUILD_BENCHMARK AND EMSCRIPTEN)
 endif()
 
 # side effects
-if(CMAKE_CROSSCOMPILING AND UHDR_ENABLE_INSTALL)
+if(0)
   set(UHDR_ENABLE_INSTALL FALSE) # disable install and uninstall targets during cross compilation.
   message(STATUS "Install and uninstall targets - Disabled")
 endif()
@@ -171,9 +171,9 @@ endif()
 ###########################################################
 # Compile flags
 ###########################################################
-set(CMAKE_CXX_STANDARD 17)
-set(CMAKE_CXX_STANDARD_REQUIRED ON)
-set(CMAKE_CXX_EXTENSIONS OFF)
+#set(CMAKE_CXX_STANDARD 17)
+#set(CMAKE_CXX_STANDARD_REQUIRED ON)
+#set(CMAKE_CXX_EXTENSIONS OFF)
 if(BUILD_SHARED_LIBS)
   set(CMAKE_POSITION_INDEPENDENT_CODE ON)
   set(CMAKE_CXX_VISIBILITY_PRESET hidden)
@@ -422,60 +422,16 @@ if(UHDR_ENABLE_GLES)
   endif()
 endif()
 
-# libjpeg-turbo
-if(NOT UHDR_BUILD_DEPS)
-  find_package(JPEG QUIET)
-  if(NOT JPEG_FOUND)
-    message(FATAL_ERROR "Could NOT find JPEG (missing: JPEG_LIBRARIES JPEG_INCLUDE_DIRS),\
-                         retry after installing JPEG library at sysroot or try 'cmake -DUHDR_BUILD_DEPS=1'")
-  else()
-    message(STATUS "Found JPEG: ${JPEG_LIBRARIES} (found version \"${JPEG_VERSION}\")")
-  endif()
+if(CONAN_USE_JPEG)
+  find_package(JPEG REQUIRED)
 endif()
-
-if(NOT JPEG_FOUND)
-  set(JPEGTURBO_TARGET_NAME turbojpeg)
-  set(JPEGTURBO_PREFIX_DIR ${CMAKE_CURRENT_BINARY_DIR}/${JPEGTURBO_TARGET_NAME})
-  set(JPEGTURBO_SOURCE_DIR ${THIRD_PARTY_DIR}/${JPEGTURBO_TARGET_NAME})
-  set(JPEGTURBO_BINARY_DIR ${JPEGTURBO_PREFIX_DIR}/src/${JPEGTURBO_TARGET_NAME}-build)
-  set(JPEG_INCLUDE_DIRS ${JPEGTURBO_SOURCE_DIR} ${JPEGTURBO_BINARY_DIR})
-  if(MSVC)
-    set(JPEG_LIB ${CMAKE_STATIC_LIBRARY_PREFIX}jpeg-static${CMAKE_STATIC_LIBRARY_SUFFIX})
-  else()
-    set(JPEG_LIB ${CMAKE_STATIC_LIBRARY_PREFIX}jpeg${CMAKE_STATIC_LIBRARY_SUFFIX})
-  endif()
-  if(IS_MULTI)
-    set(JPEG_LIB_PREFIX ${JPEGTURBO_BINARY_DIR}/$<CONFIG>/)
-  else()
-    set(JPEG_LIB_PREFIX ${JPEGTURBO_BINARY_DIR}/)
-  endif()
-  set(JPEG_LIBRARIES ${JPEG_LIB_PREFIX}${JPEG_LIB})
-  if(EMSCRIPTEN)
-    ExternalProject_Add(${JPEGTURBO_TARGET_NAME}
-        GIT_REPOSITORY https://github.com/libjpeg-turbo/libjpeg-turbo.git
-        GIT_TAG 3.0.1
-        PREFIX ${JPEGTURBO_PREFIX_DIR}
-        SOURCE_DIR ${JPEGTURBO_SOURCE_DIR}
-        BINARY_DIR ${JPEGTURBO_BINARY_DIR}
-        CONFIGURE_COMMAND emcmake cmake ${JPEGTURBO_SOURCE_DIR}
-                          -DENABLE_SHARED=0 -DWITH_SIMD=0
-        BUILD_COMMAND ${CMAKE_COMMAND} --build <BINARY_DIR> --config $<CONFIG> --target jpeg-static
-        BUILD_BYPRODUCTS ${JPEG_LIBRARIES}
-        INSTALL_COMMAND ""
-    )
-  else()
-    ExternalProject_Add(${JPEGTURBO_TARGET_NAME}
-        GIT_REPOSITORY https://github.com/libjpeg-turbo/libjpeg-turbo.git
-        GIT_TAG 3.0.1
-        PREFIX ${JPEGTURBO_PREFIX_DIR}
-        SOURCE_DIR ${JPEGTURBO_SOURCE_DIR}
-        BINARY_DIR ${JPEGTURBO_BINARY_DIR}
-        BUILD_COMMAND ${CMAKE_COMMAND} --build <BINARY_DIR> --config $<CONFIG> --target jpeg-static
-        CMAKE_ARGS ${UHDR_CMAKE_ARGS} -DENABLE_SHARED=0
-        BUILD_BYPRODUCTS ${JPEG_LIBRARIES}
-        INSTALL_COMMAND ""
-    )
-  endif()
+if(CONAN_USE_JPEGTURBO)
+  find_package(libjpeg-turbo REQUIRED)
+  add_library(JPEG::JPEG ALIAS libjpeg-turbo::libjpeg-turbo)
+endif()
+if(CONAN_USE_MOZJPEG)
+  find_package(mozjpeg REQUIRED)
+  add_library(JPEG::JPEG ALIAS mozjpeg::mozjpeg)
 endif()
 
 if(UHDR_BUILD_JAVA)
@@ -579,8 +535,8 @@ file(GLOB UHDR_TEST_SRCS_LIST "${TESTS_DIR}/*.cpp")
 file(GLOB UHDR_BM_SRCS_LIST "${BENCHMARK_DIR}/*.cpp")
 file(GLOB IMAGE_IO_SRCS_LIST "${THIRD_PARTY_DIR}/image_io/src/**/*.cc")
 
-set(PRIVATE_INCLUDE_DIR ${SOURCE_DIR}/include/ ${JPEG_INCLUDE_DIRS})
-set(PRIVATE_LINK_LIBS ${JPEG_LIBRARIES} Threads::Threads)
+set(PRIVATE_INCLUDE_DIR ${SOURCE_DIR}/include/)
+set(PRIVATE_LINK_LIBS JPEG::JPEG Threads::Threads)
 if(UHDR_ENABLE_GLES)
   list(APPEND PRIVATE_INCLUDE_DIR ${EGL_INCLUDE_DIRS} ${OPENGLES3_INCLUDE_DIRS})
   list(APPEND PRIVATE_LINK_LIBS ${EGL_LIBRARIES} ${OPENGLES3_LIBRARIES})
@@ -599,9 +555,9 @@ target_include_directories(${IMAGEIO_TARGET_NAME} PRIVATE
 set(UHDR_CORE_LIB_NAME core)
 add_library(${UHDR_CORE_LIB_NAME} STATIC ${UHDR_CORE_SRCS_LIST})
 target_compile_options(${UHDR_CORE_LIB_NAME} PRIVATE ${UHDR_WERROR_FLAGS})
-if(NOT JPEG_FOUND)
-  add_dependencies(${UHDR_CORE_LIB_NAME} ${JPEGTURBO_TARGET_NAME})
-endif()
+#if(NOT JPEG_FOUND)
+#  add_dependencies(${UHDR_CORE_LIB_NAME} ${JPEGTURBO_TARGET_NAME})
+#endif()
 if(NOT MSVC)
   target_compile_options(${UHDR_CORE_LIB_NAME} PRIVATE -Wall -Wextra -Wshadow)
 endif()
@@ -796,7 +752,7 @@ if(UHDR_BUILD_JAVA)
 endif()
 
 if(UHDR_ENABLE_INSTALL)
-  if(NOT(MSVC OR XCODE))
+  if(TRUE)
     include(GNUInstallDirs)
 
     # pkg-config: libuhdr.pc
