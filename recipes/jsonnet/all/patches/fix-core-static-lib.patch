--- a/core/CMakeLists.txt
+++ b/core/CMakeLists.txt
@@ -15,7 +15,8 @@
     static_error.h
     string_utils.h
     unicode.h
-    vm.h)
+    vm.h
+    ../third_party/md5/md5.h)
 
 set(LIBJSONNET_SOURCE
     desugarer.cpp
@@ -26,40 +27,44 @@
     pass.cpp
     static_analysis.cpp
     string_utils.cpp
-    vm.cpp)
+    vm.cpp
+    ../third_party/md5/md5.cpp)
 
-add_library(libjsonnet SHARED ${LIBJSONNET_HEADERS} ${LIBJSONNET_SOURCE})
-add_dependencies(libjsonnet md5 stdlib)
-target_link_libraries(libjsonnet md5 nlohmann_json::nlohmann_json)
-
-file(STRINGS ${CMAKE_CURRENT_SOURCE_DIR}/../include/libjsonnet.h JSONNET_VERSION_DEF
-     REGEX "[#]define[ \t]+LIB_JSONNET_VERSION[ \t]+")
-string(REGEX REPLACE ".*\"v([^\"]+)\".*" "\\1" JSONNET_VERSION ${JSONNET_VERSION_DEF})
-message("Extracted Jsonnet version: " ${JSONNET_VERSION})
-
-
-# CMake prepends CMAKE_SHARED_LIBRARY_PREFIX to shared libraries, so without
-# this step the output would be |liblibjsonnet|.
-set_target_properties(libjsonnet PROPERTIES OUTPUT_NAME jsonnet
-	VERSION     "${JSONNET_VERSION}"
-	SOVERSION   "0"
-	PUBLIC_HEADER "${LIB_HEADER}")
-install(TARGETS libjsonnet
-	LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-	ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-	PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")
-target_include_directories(libjsonnet INTERFACE
-  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>)
 
-if (BUILD_STATIC_LIBS)
+if (NOT BUILD_STATIC_LIBS)
+    add_library(libjsonnet SHARED ${LIBJSONNET_HEADERS} ${LIBJSONNET_SOURCE})
+    add_dependencies(libjsonnet stdlib)
+    target_link_libraries(libjsonnet nlohmann_json::nlohmann_json)
+
+    file(STRINGS ${CMAKE_CURRENT_SOURCE_DIR}/../include/libjsonnet.h JSONNET_VERSION_DEF
+         REGEX "[#]define[ \t]+LIB_JSONNET_VERSION[ \t]+")
+    string(REGEX REPLACE ".*\"v([^\"]+)\".*" "\\1" JSONNET_VERSION ${JSONNET_VERSION_DEF})
+    message("Extracted Jsonnet version: " ${JSONNET_VERSION})
+
+
+    # CMake prepends CMAKE_SHARED_LIBRARY_PREFIX to shared libraries, so without
+    # this step the output would be |liblibjsonnet|.
+    set_target_properties(libjsonnet PROPERTIES OUTPUT_NAME jsonnet
+    	VERSION     "${JSONNET_VERSION}"
+    	SOVERSION   "0"
+    	PUBLIC_HEADER "${LIB_HEADER}")
+    install(TARGETS libjsonnet
+    	LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+    	ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+    	PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")
+    target_include_directories(libjsonnet INTERFACE
+      $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>)
+else()
     # Static library for jsonnet command-line tool.
     add_library(libjsonnet_static STATIC ${LIBJSONNET_SOURCE})
-    add_dependencies(libjsonnet_static md5 stdlib)
-    target_link_libraries(libjsonnet_static md5 nlohmann_json::nlohmann_json)
+    add_dependencies(libjsonnet_static stdlib)
+    target_link_libraries(libjsonnet_static nlohmann_json::nlohmann_json)
     set_target_properties(libjsonnet_static PROPERTIES OUTPUT_NAME jsonnet)
     install(TARGETS libjsonnet_static DESTINATION "${CMAKE_INSTALL_LIBDIR}")
     target_include_directories(libjsonnet_static INTERFACE
       $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>)
+    install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/../include/libjsonnet.h
+            DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
 endif()
 
 if (BUILD_SHARED_BINARIES OR NOT BUILD_STATIC_LIBS)

