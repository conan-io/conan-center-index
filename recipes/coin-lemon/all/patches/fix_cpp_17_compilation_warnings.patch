Subject: [PATCH] Fix C++17 compilation warnings regarding the use of the deprecated std::iterator.
---
Index: lemon/maps.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lemon/maps.h b/lemon/maps.h
--- a/lemon/maps.h	(revision c4284157265976120e57771693a9be7c45d1b617)
+++ b/lemon/maps.h	(date 1674925094000)
@@ -1969,13 +1969,17 @@
     /// be accessed in the <tt>[beginValue, endValue)</tt> range.
     /// They are considered with multiplicity, so each value is
     /// traversed for each item it is assigned to.
-    class ValueIt
-      : public std::iterator<std::forward_iterator_tag, Value> {
+    class ValueIt {
       friend class CrossRefMap;
     private:
       ValueIt(typename Container::const_iterator _it)
         : it(_it) {}
     public:
+      typedef std::forward_iterator_tag iterator_category;
+      typedef Value value_type;
+      typedef void difference_type;
+      typedef void pointer;
+      typedef void reference;

       /// Constructor
       ValueIt() {}
@@ -3131,13 +3135,17 @@
     /// This iterator is an STL compatible forward
     /// iterator on the values of the map. The values can
     /// be accessed in the <tt>[beginValue, endValue)</tt> range.
-    class ValueIt
-      : public std::iterator<std::forward_iterator_tag, Value> {
+    class ValueIt {
       friend class IterableValueMap;
     private:
       ValueIt(typename std::map<Value, Key>::const_iterator _it)
         : it(_it) {}
     public:
+      typedef std::forward_iterator_tag iterator_category;
+      typedef Value value_type;
+      typedef void difference_type;
+      typedef void pointer;
+      typedef void reference;

       /// Constructor
       ValueIt() {}
