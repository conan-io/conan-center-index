/* config.h.in.  Generated from configure.ac by autoheader.  */


#ifndef _GCRYPT_CONFIG_H_INCLUDED
#define _GCRYPT_CONFIG_H_INCLUDED

/* Enable gpg-error's strerror macro for W32CE.  */
#define GPG_ERR_ENABLE_ERRNO_MACROS 1


/* Define if building universal (internal helper macro) */
#undef AC_APPLE_UNIVERSAL_BUILD

/* GIT commit id revision used to build this package */
#cmakedefine BUILD_REVISION "@BUILD_REVISION@"

/* The time this package was configured for a build */
#cmakedefine BUILD_TIMESTAMP "@BUILD_TIMESTAMP@"

/* configure did not test for endianness */
#undef DISABLED_ENDIAN_CHECK

/* Define if you don't want the default EGD socket name. For details see
   cipher/rndegd.c */
#undef EGD_SOCKET_NAME

/* Enable support for Intel AES-NI instructions. */
#undef ENABLE_AESNI_SUPPORT

/* Enable support for ARMv8 Crypto Extension instructions. */
#undef ENABLE_ARM_CRYPTO_SUPPORT

/* Enable support for Intel AVX2 instructions. */
#undef ENABLE_AVX2_SUPPORT

/* Enable support for Intel AVX instructions. */
#undef ENABLE_AVX_SUPPORT

/* Enable support for Intel DRNG (RDRAND instruction). */
#undef ENABLE_DRNG_SUPPORT

/* Define to support an HMAC based integrity check */
#undef ENABLE_HMAC_BINARY_CHECK

/* Enable support for the jitter entropy collector. */
#undef ENABLE_JENT_SUPPORT

/* Enable support for ARM NEON instructions. */
#undef ENABLE_NEON_SUPPORT

/* Enable support for the PadLock engine. */
#undef ENABLE_PADLOCK_SUPPORT

/* Enable support for Intel PCLMUL instructions. */
#undef ENABLE_PCLMUL_SUPPORT

/* Enable support for Intel SSE4.1 instructions. */
#undef ENABLE_SSE41_SUPPORT

/* Define to use the GNU C visibility attribute. */
#undef GCRY_USE_VISIBILITY

/* The default error source for libgcrypt. */
#undef GPG_ERR_SOURCE_DEFAULT

/* Defined if ARM architecture is v6 or newer */
#undef HAVE_ARM_ARCH_V6

/* Define to 1 if you have the `atexit' function. */
#cmakedefine HAVE_ATEXIT @HAVE_ATEXIT@

/* Defined if the mlock() call does not work */
#undef HAVE_BROKEN_MLOCK

/* Defined if compiler has '__builtin_bswap32' intrinsic */
#cmakedefine HAVE_BUILTIN_BSWAP32 @HAVE_BUILTIN_BSWAP32@

/* Defined if compiler has '__builtin_bswap64' intrinsic */
#cmakedefine HAVE_BUILTIN_BSWAP64 @HAVE_BUILTIN_BSWAP64@

/* Defined if compiler has '__builtin_ctz' intrinsic */
#cmakedefine HAVE_BUILTIN_CTZ @HAVE_BUILTIN_CTZ@

/* Defined if a `byte' is typedef'd */
#undef HAVE_BYTE_TYPEDEF

/* Define to 1 if you have the `clock' function. */
#cmakedefine HAVE_CLOCK @HAVE_CLOCK@

/* Define to 1 if you have the `clock_gettime' function. */
#cmakedefine HAVE_CLOCK_GETTIME @HAVE_CLOCK_GETTIME@

/* Defined if underlying assembler is compatible with ARMv8/Aarch64 assembly
   implementations */
#undef HAVE_COMPATIBLE_GCC_AARCH64_PLATFORM_AS

/* Defined if underlying assembler is compatible with amd64 assembly
   implementations */
#undef HAVE_COMPATIBLE_GCC_AMD64_PLATFORM_AS

/* Defined if underlying assembler is compatible with ARM assembly
   implementations */
#undef HAVE_COMPATIBLE_GCC_ARM_PLATFORM_AS

/* Defined if underlying assembler is compatible with WIN64 assembly
   implementations */
#undef HAVE_COMPATIBLE_GCC_WIN64_PLATFORM_AS

/* Defined for Alpha platforms */
#cmakedefine HAVE_CPU_ARCH_ALPHA @HAVE_CPU_ARCH_ALPHA@

/* Defined for ARM AArch64 platforms */
#cmakedefine HAVE_CPU_ARCH_ARM @HAVE_CPU_ARCH_ARM@

/* Defined for M68k platforms */
#cmakedefine HAVE_CPU_ARCH_M68K @HAVE_CPU_ARCH_M68K@

/* Defined for MIPS platforms */
#cmakedefine HAVE_CPU_ARCH_MIPS @HAVE_CPU_ARCH_MIPS@

/* Defined for PPC platforms */
#cmakedefine HAVE_CPU_ARCH_PPC @HAVE_CPU_ARCH_PPC@

/* Defined for SPARC platforms */
#cmakedefine HAVE_CPU_ARCH_SPARC @HAVE_CPU_ARCH_SPARC@

/* Defined for the x86 platforms */
#cmakedefine HAVE_CPU_ARCH_X86 @HAVE_CPU_ARCH_X86@

/* Define to 1 if you have the declaration of `sys_siglist', and to 0 if you
   don't. */
#cmakedefine HAVE_DECL_SYS_SIGLIST @HAVE_DECL_SYS_SIGLIST@

/* defined if the system supports a random device */
#cmakedefine HAVE_DEV_RANDOM @HAVE_DEV_RANDOM@

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H @HAVE_DLFCN_H@

/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
#cmakedefine HAVE_DOPRNT @HAVE_DOPRNT@

/* defined if we run on some of the PCDOS like systems (DOS, Windoze. OS/2)
   with special properties like no file modes */
#cmakedefine HAVE_DOSISH_SYSTEM @HAVE_DOSISH_SYSTEM@

/* defined if we must run on a stupid file system */
#cmakedefine HAVE_DRIVE_LETTERS @HAVE_DRIVE_LETTERS@

/* Define to 1 if you have the `fcntl' function. */
#cmakedefine HAVE_FCNTL @HAVE_FCNTL@

/* Define to 1 if you have the `flockfile' function. */
#cmakedefine HAVE_FLOCKFILE @HAVE_FLOCKFILE@

/* Define to 1 if you have the `ftruncate' function. */
#cmakedefine HAVE_FTRUNCATE @HAVE_FTRUNCATE@

/* Define if inline asm memory barrier is supported */
#undef HAVE_GCC_ASM_VOLATILE_MEMORY

/* Defined if a GCC style "__attribute__ ((aligned (n))" is supported */
#undef HAVE_GCC_ATTRIBUTE_ALIGNED

/* Defined if a GCC style "__attribute__ ((may_alias))" is supported */
#undef HAVE_GCC_ATTRIBUTE_MAY_ALIAS

/* Defined if compiler supports "__attribute__ ((ms_abi))" function attribute
   */
#undef HAVE_GCC_ATTRIBUTE_MS_ABI

/* Defined if a GCC style "__attribute__ ((packed))" is supported */
#undef HAVE_GCC_ATTRIBUTE_PACKED

/* Defined if compiler supports "__attribute__ ((sysv_abi))" function
   attribute */
#undef HAVE_GCC_ATTRIBUTE_SYSV_ABI

/* Defined if default calling convention is 'ms_abi' */
#undef HAVE_GCC_DEFAULT_ABI_IS_MS_ABI

/* Defined if default calling convention is 'sysv_abi' */
#undef HAVE_GCC_DEFAULT_ABI_IS_SYSV_ABI

/* Defined if inline assembler supports AArch32 Crypto Extension instructions
   */
#undef HAVE_GCC_INLINE_ASM_AARCH32_CRYPTO

/* Defined if inline assembler supports AArch64 Crypto Extension instructions
   */
#undef HAVE_GCC_INLINE_ASM_AARCH64_CRYPTO

/* Defined if inline assembler supports AArch64 NEON instructions */
#undef HAVE_GCC_INLINE_ASM_AARCH64_NEON

/* Defined if inline assembler supports AVX instructions */
#undef HAVE_GCC_INLINE_ASM_AVX

/* Defined if inline assembler supports AVX2 instructions */
#undef HAVE_GCC_INLINE_ASM_AVX2

/* Defined if inline assembler supports BMI2 instructions */
#undef HAVE_GCC_INLINE_ASM_BMI2

/* Defined if inline assembler supports NEON instructions */
#undef HAVE_GCC_INLINE_ASM_NEON

/* Defined if inline assembler supports PCLMUL instructions */
#undef HAVE_GCC_INLINE_ASM_PCLMUL

/* Defined if inline assembler supports SSE4.1 instructions */
#undef HAVE_GCC_INLINE_ASM_SSE41

/* Defined if inline assembler supports SSSE3 instructions */
#undef HAVE_GCC_INLINE_ASM_SSSE3

/* Define to 1 if you have the `gethrtime' function. */
#cmakedefine HAVE_GETHRTIME @HAVE_GETHRTIME@

/* Define to 1 if you have the `getpagesize' function. */
#cmakedefine HAVE_GETPAGESIZE @HAVE_GETPAGESIZE@

/* Define to 1 if you have the `getpid' function. */
#cmakedefine HAVE_GETPID @HAVE_GETPID@

/* Define to 1 if you have the `getrusage' function. */
#cmakedefine HAVE_GETRUSAGE @HAVE_GETRUSAGE@

/* Define to 1 if you have the `gettimeofday' function. */
#cmakedefine HAVE_GETTIMEOFDAY @HAVE_GETTIMEOFDAY@

/* Defined if underlying assembler is compatible with Intel syntax assembly
   implementations */
#undef HAVE_INTEL_SYNTAX_PLATFORM_AS

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H @HAVE_INTTYPES_H@

/* Define to 1 if you have the `rt' library (-lrt). */
#undef HAVE_LIBRT

/* Define to 1 if you have the `memmove' function. */
#cmakedefine HAVE_MEMMOVE @HAVE_MEMMOVE@

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H @HAVE_MEMORY_H@

/* Defined if the system supports an mlock() call */
#cmakedefine HAVE_MLOCK @HAVE_MLOCK@

/* Define to 1 if you have the `mmap' function. */
#cmakedefine HAVE_MMAP @HAVE_MMAP@

/* Defined if the GNU Pth is available */
#cmakedefine HAVE_PTH @HAVE_PTH@

/* Define if we have pthread. */
#cmakedefine HAVE_PTHREAD @HAVE_PTHREAD@

/* Define to 1 if you have the `raise' function. */
#cmakedefine HAVE_RAISE @HAVE_RAISE@

/* Define to 1 if you have the `rand' function. */
#cmakedefine HAVE_RAND @HAVE_RAND@

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H @HAVE_STDINT_H@

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H @HAVE_STDLIB_H@

/* Define to 1 if you have the `stpcpy' function. */
#cmakedefine HAVE_STPCPY @HAVE_STPCPY@

/* Define to 1 if you have the `strcasecmp' function. */
#cmakedefine HAVE_STRCASECMP @HAVE_STRCASECMP@

/* Define to 1 if you have the `strerror' function. */
#cmakedefine HAVE_STRERROR @HAVE_STRERROR@

/* Define to 1 if you have the `stricmp' function. */
#cmakedefine HAVE_STRICMP @HAVE_STRICMP@

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H @HAVE_STRINGS_H@

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H @HAVE_STRING_H@

/* Define to 1 if you have the `strtoul' function. */
#cmakedefine HAVE_STRTOUL @HAVE_STRTOUL@

/* Define to 1 if you have the `syscall' function. */
#cmakedefine HAVE_SYSCALL @HAVE_SYSCALL@

/* Define to 1 if you have the `sysconf' function. */
#cmakedefine HAVE_SYSCONF @HAVE_SYSCONF@

/* Define to 1 if you have the `syslog' function. */
#cmakedefine HAVE_SYSLOG @HAVE_SYSLOG@

/* Define to 1 if you have the <sys/capability.h> header file. */
#cmakedefine HAVE_SYS_CAPABILITY_H @HAVE_SYS_CAPABILITY_H@

/* Define to 1 if you have the <sys/mman.h> header file. */
#cmakedefine HAVE_SYS_MMAN_H @HAVE_SYS_MMAN_H@

/* Define to 1 if you have the <sys/msg.h> header file. */
#cmakedefine HAVE_SYS_MSG_H @HAVE_SYS_MSG_H@

/* Define to 1 if you have the <sys/select.h> header file. */
#cmakedefine HAVE_SYS_SELECT_H @HAVE_SYS_SELECT_H@

/* Define to 1 if you have the <sys/socket.h> header file. */
#cmakedefine HAVE_SYS_SOCKET_H @HAVE_SYS_SOCKET_H@

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H @HAVE_SYS_STAT_H@

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H @HAVE_SYS_TYPES_H@

/* Defined if a `u16' is typedef'd */
#undef HAVE_U16_TYPEDEF

/* Defined if a `u32' is typedef'd */
#undef HAVE_U32_TYPEDEF

/* Define to 1 if the system has the type `uintptr_t'. */
#undef HAVE_UINTPTR_T

/* Defined if a `ulong' is typedef'd */
#undef HAVE_ULONG_TYPEDEF

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H @HAVE_UNISTD_H@

/* Defined if a `ushort' is typedef'd */
#undef HAVE_USHORT_TYPEDEF

/* Defined if variable length arrays are supported */
#undef HAVE_VLA

/* Define to 1 if you have the `vprintf' function. */
#cmakedefine HAVE_VPRINTF @HAVE_VPRINTF@

/* Defined if we run on WindowsCE */
#cmakedefine HAVE_W32CE_SYSTEM

/* Defined if we run on a W32 API based system */
#cmakedefine HAVE_W32_SYSTEM

/* Define to 1 if you have the `wait4' function. */
#cmakedefine HAVE_WAIT4 @HAVE_WAIT4@

/* Define to 1 if you have the `waitpid' function. */
#cmakedefine HAVE_WAITPID @HAVE_WAITPID@

/* Define to 1 if you have the <winsock2.h> header file. */
#cmakedefine HAVE_WINSOCK2_H @HAVE_WINSOCK2_H@

/* Define to 1 if you have the <ws2tcpip.h> header file. */
#cmakedefine HAVE_WS2TCPIP_H @HAVE_WS2TCPIP_H@

/* Defined if this is not a regular release */
#undef IS_DEVELOPMENT_VERSION

/* List of available cipher algorithms */
#cmakedefine LIBGCRYPT_CIPHERS "@LIBGCRYPT_CIPHERS@"

/* List of available digest algorithms */
#cmakedefine LIBGCRYPT_DIGESTS "@LIBGCRYPT_DIGESTS@"

/* List of available KDF algorithms */
#cmakedefine LIBGCRYPT_KDFS "@LIBGCRYPT_KDFS@"

/* List of available public key cipher algorithms */
#cmakedefine LIBGCRYPT_PUBKEY_CIPHERS "@LIBGCRYPT_PUBKEY_CIPHERS@"

/* Define to the sub-directory in which libtool stores uninstalled libraries.
   */
#undef LT_OBJDIR

/* Define to use the (obsolete) malloc guarding feature */
#undef M_GUARD

/* defined to the name of the strong random device */
#cmakedefine NAME_OF_DEV_URANDOM "@NAME_OF_DEV_URANDOM@"

/* defined to the name of the weaker random device */
#cmakedefine NAME_OF_DEV_RANDOM "@NAME_OF_DEV_RANDOM@"

/* Name of this package */
#cmakedefine PACKAGE "@PACKAGE@"

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT "@PACKAGE_BUGREPORT@"

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME "@PACKAGE_NAME@"

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING "@PACKAGE_STRING@"

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME "@PACKAGE_TARNAME@"

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL "@PACKAGE_URL@"

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION "@PACKAGE_VERSION@"

/* A human readable text with the name of the OS */
#undef PRINTABLE_OS_NAME

/* Define as the return type of signal handlers (`int' or `void'). */
#undef RETSIGTYPE

/* The size of `uint64_t', as computed by sizeof. */
#cmakedefine SIZEOF_UINT64_T @SIZEOF_UINT64_T@

/* The size of `unsigned int', as computed by sizeof. */
#cmakedefine SIZEOF_UNSIGNED_INT @SIZEOF_UNSIGNED_INT@

/* The size of `unsigned long', as computed by sizeof. */
#cmakedefine SIZEOF_UNSIGNED_LONG @SIZEOF_UNSIGNED_LONG@

/* The size of `unsigned long long', as computed by sizeof. */
#cmakedefine SIZEOF_UNSIGNED_LONG_LONG @SIZEOF_UNSIGNED_LONG_LONG@

/* The size of `unsigned short', as computed by sizeof. */
#cmakedefine SIZEOF_UNSIGNED_SHORT @SIZEOF_UNSIGNED_SHORT@

/* The size of `void *', as computed by sizeof. */
#cmakedefine SIZEOF_VOID_P @SIZEOF_VOID_P@

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS @STDC_HEADERS@

/* Defined if this module should be included */
#cmakedefine01 USE_AES

/* Defined if this module should be included */
#cmakedefine01 USE_ARCFOUR

/* Defined if this module should be included */
#cmakedefine01 USE_BLAKE2

/* Defined if this module should be included */
#cmakedefine01 USE_BLOWFISH

/* Defined if this module should be included */
#cmakedefine01 USE_CAMELLIA

/* define if capabilities should be used */
#cmakedefine USE_CAPABILITIES

/* Defined if this module should be included */
#cmakedefine01 USE_CAST5

/* Defined if this module should be included */
#cmakedefine01 USE_CHACHA20

/* Defined if this module should be included */
#cmakedefine01 USE_CRC

/* Defined if this module should be included */
#cmakedefine01 USE_DES

/* Defined if this module should be included */
#cmakedefine01 USE_DSA

/* Defined if this module should be included */
#cmakedefine01 USE_ECC

/* Defined if this module should be included */
#cmakedefine01 USE_ELGAMAL

/* Defined if the GNU Portable Thread Library should be used */
#cmakedefine01 USE_GNU_PTH

/* Defined if this module should be included */
#cmakedefine01 USE_GOST28147

/* Defined if this module should be included */
#cmakedefine01 USE_GOST_R_3411_12

/* Defined if this module should be included */
#cmakedefine01 USE_GOST_R_3411_94

/* Defined if this module should be included */
#cmakedefine01 USE_IDEA

/* Defined if this module should be included */
#cmakedefine01 USE_MD2

/* Defined if this module should be included */
#cmakedefine01 USE_MD4

/* Defined if this module should be included */
#cmakedefine01 USE_MD5

/* set this to limit filenames to the 8.3 format */
#cmakedefine01 USE_ONLY_8DOT3

/* Define to support the experimental random daemon */
#cmakedefine USE_RANDOM_DAEMON

/* Defined if this module should be included */
#cmakedefine01 USE_RFC2268

/* Defined if this module should be included */
#cmakedefine01 USE_RMD160

/* Defined if the EGD based RNG should be used. */
#cmakedefine01 USE_RNDEGD

/* Defined if the /dev/random RNG should be used. */
#cmakedefine01 USE_RNDLINUX

/* Defined if the default Unix RNG should be used. */
#cmakedefine01 USE_RNDUNIX

/* Defined if the Windows specific RNG should be used. */
#cmakedefine01 USE_RNDW32

/* Defined if the WindowsCE specific RNG should be used. */
#cmakedefine01 USE_RNDW32CE

/* Defined if this module should be included */
#cmakedefine01 USE_RSA

/* Defined if this module should be included */
#cmakedefine01 USE_SALSA20

/* Defined if this module should be included */
#cmakedefine01 USE_SCRYPT

/* Defined if this module should be included */
#cmakedefine01 USE_SEED

/* Defined if this module should be included */
#cmakedefine01 USE_SERPENT

/* Defined if this module should be included */
#cmakedefine01 USE_SHA1

/* Defined if this module should be included */
#cmakedefine01 USE_SHA256

/* Defined if this module should be included */
#cmakedefine01 USE_SHA3

/* Defined if this module should be included */
#cmakedefine01 USE_SHA512

/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# undef _POSIX_PTHREAD_SEMANTICS
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# undef _TANDEM_SOURCE
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# undef __EXTENSIONS__
#endif


/* Defined if this module should be included */
#cmakedefine USE_TIGER @USE_TIGER@

/* Defined if this module should be included */
#cmakedefine USE_TWOFISH @USE_TWOFISH@

/* Defined if this module should be included */
#cmakedefine USE_WHIRLPOOL @USE_WHIRLPOOL@

/* Version of this package */
#cmakedefine VERSION "@VERSION@"

/* Defined if compiled symbols have a leading underscore */
#undef WITH_SYMBOL_UNDERSCORE

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif

/* Expose all libc features (__DARWIN_C_FULL). */
#undef _DARWIN_C_SOURCE

/* Define to 1 if on MINIX. */
#undef _MINIX

/* Define to 2 if the system does not provide POSIX.1 features except with
   this defined. */
#undef _POSIX_1_SOURCE

/* Define to 1 if you need to in order for `stat' and other things to work. */
#undef _POSIX_SOURCE

/* To allow the use of Libgcrypt in multithreaded programs we have to use
    special features from the library. */
#ifndef _REENTRANT
# define _REENTRANT 1
#endif


/* Define to supported assembler block keyword, if plain 'asm' was not
   supported */
#undef asm

/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif

/* Define to `int' if <sys/types.h> does not define. */
#undef pid_t

/* Define to `unsigned int' if <sys/types.h> does not define. */
#undef size_t

/* type to use in place of socklen_t if not defined */
#undef socklen_t

/* Define to the type of an unsigned integer type wide enough to hold a
   pointer, if such a type exists, and if the system does not define it. */
#undef uintptr_t


#define _GCRYPT_IN_LIBGCRYPT 1

/* If the configure check for endianness has been disabled, get it from
   OS macros.  This is intended for making fat binary builds on OS X.  */
#ifdef DISABLED_ENDIAN_CHECK
# if defined(__BIG_ENDIAN__)
#  define WORDS_BIGENDIAN 1
# elif defined(__LITTLE_ENDIAN__)
#  undef WORDS_BIGENDIAN
# else
#  error "No endianness found"
# endif
#endif /*DISABLED_ENDIAN_CHECK*/

/* We basically use the original Camellia source.  Make sure the symbols
   properly prefixed.  */
#define CAMELLIA_EXT_SYM_PREFIX _gcry_

#endif /*_GCRYPT_CONFIG_H_INCLUDED*/

