diff -Naur a/src/gn/command_gen.cc b/src/gn/command_gen.cc
--- a/src/gn/command_gen.cc	2025-06-03 17:28:07.000000000 +0800
+++ b/src/gn/command_gen.cc	2025-06-03 17:44:37.819834400 +0800
@@ -561,11 +561,11 @@
 
   --export-compile-commands[=<target_name1,target_name2...>]
       Produces a compile_commands.json file in the root of the build directory
-      containing an array of “command objects”, where each command object
+      containing an array of "command objects", where each command object
       specifies one way a translation unit is compiled in the project. If a list
       of target_name is supplied, only targets that are reachable from any
       target in any build file whose name is target_name will be used for
-      “command objects” generation, otherwise all available targets will be used.
+      "command objects" generation, otherwise all available targets will be used.
       This is used for various Clang-based tooling, allowing for the replay of
       individual compilations independent of the build system.
       e.g. "foo" will match:
diff -Naur a/src/gn/escape.h b/src/gn/escape.h
--- a/src/gn/escape.h	2025-06-03 17:28:07.000000000 +0800
+++ b/src/gn/escape.h	2025-06-03 17:30:59.747216200 +0800
@@ -6,6 +6,7 @@
 #define TOOLS_GN_ESCAPE_H_
 
 #include <iosfwd>
+#include <string>
 #include <string_view>
 
 enum EscapingMode {
@@ -33,7 +34,7 @@
   ESCAPE_NINJA_PREFORMATTED_COMMAND,
 
   // Shell escaping as described by JSON Compilation Database spec:
-  // Parameters use shell quoting and shell escaping of quotes, with ‘"’ and ‘\’
+  // Parameters use shell quoting and shell escaping of quotes, with '"' and '\'
   // being the only special characters.
   ESCAPE_COMPILATION_DATABASE,
 };
