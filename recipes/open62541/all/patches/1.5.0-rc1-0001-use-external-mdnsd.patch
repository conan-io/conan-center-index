diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9823c8aa0..ca63e1c7b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -771,23 +771,24 @@ file(MAKE_DIRECTORY "${PROJECT_BINARY_DIR}/src_generated")
 configure_file(include/open62541/config.h.in ${PROJECT_BINARY_DIR}/src_generated/open62541/config.h)
 
 if(UA_ENABLE_DISCOVERY_MULTICAST_MDNSD)
-    include(GenerateExportHeader)
-    set(MDNSD_LOGLEVEL 300 CACHE STRING "Level at which logs shall be reported" FORCE)
-
-    # create a "fake" empty library to generate the export header macros
-    if (APPLE)
-        add_library(mdnsd INTERFACE ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/mdnsd.h)
-    else()
-        add_library(mdnsd ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/mdnsd.h)
-    endif()
-
-    set_property(TARGET mdnsd PROPERTY LINKER_LANGUAGE C)
-    set_property(TARGET mdnsd PROPERTY DEFINE_SYMBOL "MDNSD_DYNAMIC_LINKING_EXPORT")
-    configure_file("deps/mdnsd/libmdnsd/mdnsd_config_extra.in"
-                   "${PROJECT_BINARY_DIR}/src_generated/mdnsd_config_extra")
-    file(READ "${PROJECT_BINARY_DIR}/src_generated/mdnsd_config_extra" MDNSD_CONFIG_EXTRA)
-    generate_export_header(mdnsd EXPORT_FILE_NAME "${PROJECT_BINARY_DIR}/src_generated/mdnsd_config.h"
-                           BASE_NAME MDNSD DEFINE_NO_DEPRECATED CUSTOM_CONTENT_FROM_VARIABLE MDNSD_CONFIG_EXTRA)
+    # include(GenerateExportHeader)
+    # set(MDNSD_LOGLEVEL 300 CACHE STRING "Level at which logs shall be reported" FORCE)
+
+    # # create a "fake" empty library to generate the export header macros
+    # if (APPLE)
+    #     add_library(mdnsd INTERFACE ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/mdnsd.h)
+    # else()
+    #     add_library(mdnsd ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/mdnsd.h)
+    # endif()
+
+    # set_property(TARGET mdnsd PROPERTY LINKER_LANGUAGE C)
+    # set_property(TARGET mdnsd PROPERTY DEFINE_SYMBOL "MDNSD_DYNAMIC_LINKING_EXPORT")
+    # configure_file("deps/mdnsd/libmdnsd/mdnsd_config_extra.in"
+    #                "${PROJECT_BINARY_DIR}/src_generated/mdnsd_config_extra")
+    # file(READ "${PROJECT_BINARY_DIR}/src_generated/mdnsd_config_extra" MDNSD_CONFIG_EXTRA)
+    # generate_export_header(mdnsd EXPORT_FILE_NAME "${PROJECT_BINARY_DIR}/src_generated/mdnsd_config.h"
+    #                        BASE_NAME MDNSD DEFINE_NO_DEPRECATED CUSTOM_CONTENT_FROM_VARIABLE MDNSD_CONFIG_EXTRA)
+    find_package(mdnsd REQUIRED)
 endif()
 
 # Exported headers
@@ -965,19 +966,20 @@ if(UA_DEBUG_DUMP_PKGS)
 endif()
 
 if(UA_ENABLE_DISCOVERY_MULTICAST_MDNSD)
-    # prepend in list, otherwise it complains that winsock2.h has to be included before windows.h
-    list(APPEND lib_headers
-        ${PROJECT_BINARY_DIR}/src_generated/mdnsd_config.h
-        ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/1035.h
-        ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/xht.h
-        ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/sdtxt.h
-        ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/mdnsd.h)
-    list(APPEND lib_sources
-        ${PROJECT_SOURCE_DIR}/src/server/ua_discovery_mdns.c
-        ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/1035.c
-        ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/xht.c
-        ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/sdtxt.c
-        ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/mdnsd.c)
+    # # prepend in list, otherwise it complains that winsock2.h has to be included before windows.h
+    # list(APPEND lib_headers
+    #     ${PROJECT_BINARY_DIR}/src_generated/mdnsd_config.h
+    #     ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/1035.h
+    #     ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/xht.h
+    #     ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/sdtxt.h
+    #     ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/mdnsd.h)
+    # list(APPEND lib_sources
+    #     ${PROJECT_SOURCE_DIR}/src/server/ua_discovery_mdns.c
+    #     ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/1035.c
+    #     ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/xht.c
+    #     ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/sdtxt.c
+    #     ${PROJECT_SOURCE_DIR}/deps/mdnsd/libmdnsd/mdnsd.c)
+    set(lib_sources ${PROJECT_SOURCE_DIR}/src/server/ua_discovery_mdns.c ${lib_sources})
 elseif(UA_ENABLE_DISCOVERY_MULTICAST_AVAHI)
     list(APPEND lib_sources
       ${PROJECT_SOURCE_DIR}/src/server/ua_discovery_mdns_avahi.c
