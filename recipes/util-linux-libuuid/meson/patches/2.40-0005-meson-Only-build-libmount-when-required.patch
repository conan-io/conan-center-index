From fb8853dddfb678ae0d429362837f6b37c50baafd Mon Sep 17 00:00:00 2001
From: Jordan Williams <jordan@jwillikers.com>
Date: Mon, 1 Apr 2024 08:10:21 -0500
Subject: [PATCH 5/5] meson: Only build libmount when required

It is not currently possible to build any part of util-linux without
building libmount when using Meson.
The libuuid library is commonly used on macOS, where it is not possible
to build libmount.
To address this, this PR makes it possible to build without libmount.
It does this by only including the libmount subdir when building
libmount.
Several utilities depend on libmount.
The build-libmount feature option has been configured to properly
enforce this relationship.
If build-libmount is disabled and any of these targets is enabled, the
build will fail with an error.
The targets now define the relationship to libmount using dependencies.
This carries include directories along with the library to link.
This also allows defining a null dependency when build-libmount is
disabled.
This ensures the dependency objects are defined in either case.
The tools that depend on libmount are still defined and need the
libmount dependency to exist the way the build system is currently
organized.

An additional dependency is declared for the static libmount library.
A couple of executables use this dependency explicitly.

Options have been added to allow toggling whether to build targets that
require libmount.
This makes it possible to fully disable building libmount.

The python object had to be defined outside of the meson.build file in
libmount/python since this may no longer be included.
The python object is used for tests.

Signed-off-by: Jordan Williams <jordan@jwillikers.com>
---
 libmount/meson.build |   1 +
 meson.build          | 153 +++++++++++++++++++++++++++----------------
 meson_options.txt    |  14 ++++
 3 files changed, 113 insertions(+), 55 deletions(-)

diff --git a/libmount/meson.build b/libmount/meson.build
index d1262e7f0..ea363a0d5 100644
--- a/libmount/meson.build
+++ b/libmount/meson.build
@@ -80,6 +80,7 @@ lib_mount_static = static_library(
                lib_blkid.get_static_lib()],
   dependencies : [realtime_libs],
   install : false)
+mount_static_dep = declare_dependency(link_with: lib_mount_static, include_directories: '.')
 
 lib__mount_deps = [
   lib_selinux,
diff --git a/meson.build b/meson.build
index fcf96b826..b6dbdf3cd 100644
--- a/meson.build
+++ b/meson.build
@@ -78,7 +78,7 @@ conf.set_quoted('ADJTIME_PATH', '/etc/adjtime') # yes, both are used :(
 conf.set_quoted('_PATH_VENDORDIR', vendordir)
 conf.set('USE_VENDORDIR', vendordir == '' ? false : 1)
 
-build_libblkid = not get_option('build-libblkid').disabled()
+build_libblkid = not get_option('build-libblkid').disable_auto_if(get_option('build-libmount').disabled()).disabled()
 conf.set('HAVE_LIBBLKID', build_libblkid ? 1 : false)
 summary('libblkid', build_libblkid ? 'enabled' : 'disabled', section : 'components')
 
@@ -97,7 +97,30 @@ conf.set('HAVE_MOUNTFD_API', have_mountfd_api ? 1 : false)
 have_struct_statx = cc.sizeof('struct statx', prefix : '#include <sys/stat.h>') > 0
 conf.set('HAVE_STRUCT_STATX', have_struct_statx ? 1 : false)
 
-build_libmount = not get_option('build-libmount').disabled()
+static_programs = get_option('static-programs')
+
+if get_option('build-libmount').disabled() and ( \
+    get_option('build-eject').enabled() or \
+    get_option('build-fstrim').enabled() or \
+    build_libblkid or \
+    get_option('build-lsns').enabled() or \
+    get_option('build-mount').enabled() or \
+    'mount' in static_programs or \
+    'umount' in static_programs or \
+    get_option('build-swapon').enabled() or \
+    get_option('build-swapoff').enabled() or \
+    get_option('build-mountpoint').enabled() or \
+    get_option('build-fsck').enabled() or \
+    # Required by cfdisk.
+    get_option('build-fdisks').enabled() or \
+    get_option('build-lslocks').enabled() or \
+    get_option('build-lsblk').enabled() or \
+    get_option('build-findmnt').enabled()
+  )
+  error('libmount is required to build enabled features')
+endif
+build_libmount = get_option('build-libmount').allowed()
+
 conf.set('HAVE_LIBMOUNT', build_libmount ? 1 : false)
 conf.set('USE_LIBMOUNT_SUPPORT_NAMESPACES', 1)
 conf.set('USE_LIBMOUNT_MOUNTFD_SUPPORT', have_mountfd_api ? 1 : false)
@@ -115,7 +138,6 @@ build_uuidd = not get_option('build-uuidd').disabled()
 conf.set('HAVE_UUIDD', build_uuidd ? 1 : false)
 summary('uuidd', build_uuidd ? 'enabled' : 'disabled', section : 'components')
 
-static_programs = get_option('static-programs')
 need_static_libs = static_programs.length() > 0 # a rough estimate...
 summary('static programs', static_programs)
 
@@ -955,7 +977,13 @@ bashcompletionslinks = {}
 subdir('include')
 subdir('lib')
 subdir('libblkid')
-subdir('libmount')
+
+if build_libmount
+  subdir('libmount')
+else
+  mount_dep = dependency('', required : false)
+  mount_static_dep = dependency('', required : false)
+endif
 subdir('libsmartcols')
 subdir('libuuid')
 subdir('liblastlog2')
@@ -972,7 +1000,6 @@ subdir('po')
 includes = [dir_include,
             dir_libblkid,
             dir_libsmartcols,
-            dir_libmount,
             dir_libfdisk,
             dir_libuuid,
             dir_liblastlog2,
@@ -1495,15 +1522,17 @@ if opt and not is_disabler(exe)
   bashcompletions += ['tunelp']
 endif
 
+opt = not get_option('build-fstrim').disable_auto_if(not build_libmount).disabled()
 exe = executable(
   'fstrim',
   fstrim_sources,
   include_directories : includes,
-  link_with : [lib_common,
-               lib_mount],
+  link_with : [lib_common],
+  dependencies : [mount_dep],
   install_dir : sbindir,
-  install : true)
-if not is_disabler(exe)
+  install : opt,
+  build_by_default : opt)
+if opt and not is_disabler(exe)
   exes += exe
   manadocs += ['sys-utils/fstrim.8.adoc']
   bashcompletions += ['fstrim']
@@ -1645,13 +1674,13 @@ foreach link: setarch_links
   manlinks += {link + '.8': 'setarch.8'}
 endforeach
 
-opt = not get_option('build-eject').disabled()
+opt = not get_option('build-eject').disable_auto_if(not build_libmount).disabled()
 exe = executable(
   'eject',
   eject_sources,
   include_directories : includes,
-  link_with : [lib_common,
-               lib_mount],
+  link_with : [lib_common],
+  dependencies : [mount_dep],
   install_dir : usrbin_exec_dir,
   install : opt,
   build_by_default : opt)
@@ -1722,30 +1751,31 @@ if not is_disabler(exe)
   bashcompletions += ['prlimit']
 endif
 
+opt = not get_option('build-lsns').disable_auto_if(not build_libmount).disabled()
 exe = executable(
   'lsns',
   lsns_sources,
   include_directories : includes,
   link_with : [lib_common,
-               lib_smartcols,
-               lib_mount],
+               lib_smartcols],
+  dependencies : [mount_dep],
   install_dir : usrbin_exec_dir,
-  install : true)
-if not is_disabler(exe)
+  install : opt,
+  build_by_default : opt)
+if opt and not is_disabler(exe)
   exes += exe
   manadocs += ['sys-utils/lsns.8.adoc']
   bashcompletions += ['lsns']
 endif
 
-opt = not get_option('build-mount').disabled()
+opt = not get_option('build-mount').disable_auto_if(not build_libmount).disabled()
 exe = executable(
   'mount',
   mount_sources,
   include_directories : includes,
   link_with : [lib_common,
-               lib_smartcols,
-               lib_mount],
-  dependencies : lib_selinux,
+               lib_smartcols],
+  dependencies : [lib_selinux, mount_dep],
   install_mode : 'rwsr-xr-x',
   install : opt,
   build_by_default : opt)
@@ -1753,8 +1783,8 @@ exe2 = executable(
   'umount',
   umount_sources,
   include_directories : includes,
-  link_with : [lib_common,
-               lib_mount],
+  link_with : [lib_common],
+  dependencies : [mount_dep],
   install_mode : 'rwsr-xr-x',
   install : opt,
   build_by_default : opt)
@@ -1773,8 +1803,8 @@ exe = executable(
   include_directories : includes,
   link_args : ['--static'],
   link_with : [lib_common,
-               lib_smartcols_static,
-               lib_mount_static],
+               lib_smartcols_static],
+  dependencies : [mount_static_dep],
   install : opt2,
   build_by_default : opt2)
 if opt2 and not is_disabler(exe)
@@ -1787,8 +1817,8 @@ exe = executable(
   umount_sources,
   include_directories : includes,
   link_args : ['--static'],
-  link_with : [lib_common,
-               lib_mount_static],
+  link_with : [lib_common],
+  dependencies : [mount_static_dep],
   install : opt2,
   build_by_default : opt2)
 if opt2 and not is_disabler(exe)
@@ -1797,32 +1827,36 @@ endif
 
 # setuid?
 
+opt = not get_option('build-swapon').disable_auto_if(not build_libmount).disabled()
 exe = executable(
   'swapon',
   swapon_sources,
   include_directories : includes,
   link_with : [lib_common,
                lib_blkid,
-               lib_mount,
                lib_smartcols],
+  dependencies : [mount_dep],
   install_dir : sbindir,
-  install : true)
-if not is_disabler(exe)
+  install : opt,
+  build_by_default : opt)
+if opt and not is_disabler(exe)
   exes += exe
   manadocs += ['sys-utils/swapon.8.adoc']
   bashcompletions += ['swapon']
 endif
 
+opt = not get_option('build-swapoff').disable_auto_if(not build_libmount).disabled()
 exe = executable(
   'swapoff',
   swapoff_sources,
   include_directories : includes,
   link_with : [lib_common,
-               lib_blkid,
-               lib_mount],
+               lib_blkid],
+  dependencies : [mount_dep],
   install_dir : sbindir,
-  install : true)
-if not is_disabler(exe)
+  install : opt,
+  build_by_default : opt)
+if opt and not is_disabler(exe)
   exes += exe
   manlinks += {'swapoff.8': 'swapon.8'}
   bashcompletions += ['swapoff']
@@ -1867,12 +1901,12 @@ if not is_disabler(exe)
   bashcompletions += ['wdctl']
 endif
 
-opt = not get_option('build-mountpoint').disabled()
+opt = not get_option('build-mountpoint').disable_auto_if(not build_libmount).disabled()
 exe = executable(
   'mountpoint',
   mountpoint_sources,
   include_directories : includes,
-  link_with : [lib_mount],
+  dependencies : [mount_dep],
   install : opt,
   build_by_default : opt)
 if opt and not is_disabler(exe)
@@ -1926,12 +1960,13 @@ if opt and not is_disabler(exe)
   manadocs += ['sys-utils/switch_root.8.adoc']
 endif
 
-opt = not get_option('build-unshare').disabled()
+opt = not get_option('build-unshare').disable_auto_if(not build_libmount).disabled()
 exe = executable(
   'unshare',
   unshare_sources,
   include_directories : includes,
   link_with : [lib_common],
+  dependencies : [mount_dep],
   install_dir : usrbin_exec_dir,
   install : opt,
   build_by_default : opt)
@@ -1947,6 +1982,7 @@ exe = executable(
   unshare_sources,
   include_directories : includes,
   link_with : [lib_common],
+  dependencies : [mount_dep],
   install_dir : usrbin_exec_dir,
   install : opt,
   build_by_default : opt)
@@ -2146,15 +2182,14 @@ if not is_disabler(exe)
   bashcompletions += ['swaplabel']
 endif
 
-opt = not get_option('build-fsck').disabled()
+opt = not get_option('build-fsck').disable_auto_if(not build_libmount).disabled()
 exe = executable(
   'fsck',
   fsck_sources,
   include_directories : includes,
   link_with : [lib_common,
-               lib_blkid,
-               lib_mount],
-  dependencies : realtime_libs,
+               lib_blkid],
+  dependencies : [realtime_libs, mount_dep],
   install_dir : sbindir,
   install : opt,
   build_by_default : opt)
@@ -2261,7 +2296,7 @@ exe = executable(
 manadocs += ['disk-utils/blockdev.8.adoc']
 bashcompletions += ['blockdev']
 
-opt = not get_option('build-fdisks').disabled()
+opt = not get_option('build-fdisks').disable_auto_if(not build_libmount).disabled()
 if opt and not have_dirfd and not have_ddfd
   error('neither dirfd nor ddfd are available')
 endif
@@ -2341,9 +2376,8 @@ exe = executable(
   link_with : [lib_common,
                lib_fdisk,
                lib_smartcols,
-               lib_tcolors,
-               lib_mount],
-  dependencies : [curses_libs],
+               lib_tcolors],
+  dependencies : [curses_libs, mount_dep],
   install_dir : sbindir,
   install : opt,
   build_by_default : opt)
@@ -2679,33 +2713,36 @@ exes += exe
 manadocs += ['misc-utils/whereis.1.adoc']
 bashcompletions += ['whereis']
 
+opt = not get_option('build-lslocks').disable_auto_if(not build_libmount).disabled()
 exe = executable(
   'lslocks',
   lslocks_sources,
   include_directories : includes,
   link_with : [lib_common,
-               lib_mount,
                lib_smartcols],
+  dependencies : [mount_dep],
   install_dir : usrbin_exec_dir,
-  install : true)
-if not is_disabler(exe)
+  install : opt,
+  build_by_default : opt)
+if opt and not is_disabler(exe)
   exes += exe
   manadocs += ['misc-utils/lslocks.8.adoc']
   bashcompletions += ['lslocks']
 endif
 
+opt = not get_option('build-lsblk').disable_auto_if(not build_libmount).disabled()
 exe = executable(
   'lsblk',
   lsblk_sources,
   include_directories : includes,
   link_with : [lib_common,
                lib_blkid,
-               lib_mount,
                lib_tcolors,
                lib_smartcols],
-  dependencies : lib_udev,
-  install : true)
-if not is_disabler(exe)
+  dependencies : [lib_udev, mount_dep],
+  install : opt,
+  build_by_default : opt)
+if opt and not is_disabler(exe)
   exes += exe
   manadocs += ['misc-utils/lsblk.8.adoc']
   bashcompletions += ['lsblk']
@@ -2890,17 +2927,18 @@ if not is_disabler(exe)
   bashcompletions += ['wipefs']
 endif
 
+opt = not get_option('build-findmnt').disable_auto_if(not build_libmount).disabled()
 exe = executable(
   'findmnt',
   findmnt_sources,
   include_directories : includes,
   link_with : [lib_common,
                lib_blkid,
-               lib_mount,
                lib_smartcols],
-  dependencies : [lib_udev],
-  install : true)
-if not is_disabler(exe)
+  dependencies : [lib_udev, mount_dep],
+  install : opt,
+  build_by_default : opt)
+if opt and not is_disabler(exe)
   exes += exe
   manadocs += ['misc-utils/findmnt.8.adoc']
   bashcompletions += ['findmnt']
@@ -3619,6 +3657,11 @@ endif
 # Let the test runner know whether we're running under asan and export
 # some paths. We use a file on disk so that it is possible to run the
 # test scripts from commandline without setting any variables.
+python_module = import('python')
+python = python_module.find_installation(
+    get_option('python'),
+    required : true,
+    disabler : true)
 configure_file(output : 'meson.conf',
                capture : true,
                command : ['echo',
diff --git a/meson_options.txt b/meson_options.txt
index 5cc8b4f61..e4862ad4a 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -53,10 +53,16 @@ option('build-fdisks', type : 'feature',
        description : 'build fdisk(8), sfdisk(8) and cfdisk(8)')
 option('build-mount', type : 'feature',
        description : 'build mount(8) and umount(8)')
+option('build-swapon', type : 'feature',
+       description : 'build swapon')
+option('build-swapoff', type : 'feature',
+       description : 'build swapoff')
 option('build-losetup', type : 'feature',
        description : 'build losetup')
 option('build-zramctl', type : 'feature',
        description : 'build zramctl')
+option('build-lsns', type : 'feature',
+       description : 'build lsns')
 option('build-fsck', type : 'feature',
        description : 'build fsck')
 option('build-partx', type : 'feature',
@@ -101,6 +107,12 @@ option('build-cal', type : 'feature',
        description : 'build cal')
 option('build-logger', type : 'feature',
        description : 'build logger')
+option('build-lsblk', type : 'feature',
+       description : 'build lsblk')
+option('build-lslocks', type : 'feature',
+       description : 'build lslocks')
+option('build-findmnt', type : 'feature',
+       description : 'build findmnt')
 option('build-lsfd', type : 'feature',
        description : 'build lsfd')
 option('build-switch_root', type : 'feature',
@@ -123,6 +135,8 @@ option('build-rfkill', type : 'feature',
        description : 'build rfkill')
 option('build-tunelp', type : 'feature',
        description : 'build tunelp')
+option('build-fstrim', type : 'feature',
+       description : 'build fstrim')
 option('build-kill', type : 'feature',
        description : 'build kill')
 option('build-last', type : 'feature',
-- 
2.44.0

