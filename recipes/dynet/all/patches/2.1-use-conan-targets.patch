diff --git a/CMakeLists.txt b/CMakeLists.txt
index f592036..774569d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,8 +1,6 @@
 project(dynet)
 cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
 
-set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
-
 # DYNET uses Eigen which exploits modern CPU architectures. To get the
 # best possible performance, the following are recommended:
 #   1. use very recent versions of gcc or Clang to build
@@ -126,13 +124,6 @@ if(ENABLE_BOOST)
   set(Boost_REALPATH ON)
   find_package(Boost COMPONENTS program_options regex serialization REQUIRED)
   message("-- Boost dir is " ${Boost_INCLUDE_DIR})
-  include_directories(${Boost_INCLUDE_DIR})
-  if(MSVC)
-    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /LIBPATH:${Boost_LIBRARY_DIRS}")
-    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /LIBPATH:${Boost_LIBRARY_DIRS}")
-  else()
-    set(LIBS ${LIBS} ${Boost_LIBRARIES})
-  endif()
 endif()
 
 if(BACKEND)
@@ -174,14 +165,10 @@ endif()
 if (DEFINED ENV{EIGEN3_INCLUDE_DIR} AND NOT DEFINED EIGEN3_INCLUDE_DIR) # use env variable if not set
   set(EIGEN3_INCLUDE_DIR $ENV{EIGEN3_INCLUDE_DIR})
 endif()
-get_filename_component(EIGEN3_INCLUDE_DIR "${EIGEN3_INCLUDE_DIR}" REALPATH BASE_DIR "${CMAKE_BINARY_DIR}")
-set(EIGEN3_INCLUDE_DIR ${EIGEN3_INCLUDE_DIR} CACHE STRING "" FORCE)
-message("-- Eigen dir is " ${EIGEN3_INCLUDE_DIR})
 find_package(Eigen3 REQUIRED)
-include_directories(${EIGEN3_INCLUDE_DIR})
 
-FIND_PACKAGE(Threads REQUIRED)
-set(LIBS ${LIBS} ${CMAKE_THREAD_LIBS_INIT})
+#FIND_PACKAGE(Threads REQUIRED)
+#set(LIBS ${LIBS} ${CMAKE_THREAD_LIBS_INIT})
 
 configure_file(${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h)
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
diff --git a/dynet/CMakeLists.txt b/dynet/CMakeLists.txt
index 5a69b89..9baceb8 100644
--- a/dynet/CMakeLists.txt
+++ b/dynet/CMakeLists.txt
@@ -207,9 +207,6 @@ set(dynet_gpu_SRCS
     gpu-ops.cu)
 
 file(GLOB TEST_SRCS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} tests/*.cc)
-if (NOT MSVC)
-  set(BUILD_SHARED_LIBS ON)
-endif()
 
 #foreach(test_src ${TEST_SRCS})
   #Extract the filename without an extension (NAME_WE)
@@ -296,7 +293,7 @@ if(WITH_CUDA_BACKEND)
 else()
   # Build cpu library
   add_library(dynet ${dynet_library_SRCS} ${dynet_library_HDRS})
-  target_link_libraries(dynet ${LIBS})
+  target_link_libraries(dynet Boost::Boost)
 endif(WITH_CUDA_BACKEND)
 
 install(FILES ${dynet_library_HDRS} DESTINATION include/dynet)
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
index 2c1db23..91ec3fe 100644
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -1,9 +1,7 @@
 include(CTest)
 enable_testing()
 
-find_package(Boost COMPONENTS system filesystem unit_test_framework REQUIRED)
-include_directories(${TEST_SOURCE_DIR}/src ${Boost_INCLUDE_DIRS})
-add_definitions(-DBOOST_TEST_DYN_LINK)
+include_directories(${TEST_SOURCE_DIR}/src)
 
 if (DEFINED ENV{DYNET_TEST_DEVICES})  # use env variable as preprocessor macro
   add_definitions(-DDYNET_TEST_DEVICES=$ENV{DYNET_TEST_DEVICES})
@@ -12,9 +10,9 @@ endif()
 foreach(TESTNAME dim dynet exec io mem nodes params tensor trainers rnn softmax)
   add_executable(test-${TESTNAME} test-${TESTNAME}.cc)
   if (NOT MSVC)
-    target_link_libraries(test-${TESTNAME} ${Boost_LIBRARIES} ${CMAKE_DL_LIBS})
+    target_link_libraries(test-${TESTNAME} Boost::Boost ${CMAKE_DL_LIBS})
   endif()
-  target_link_libraries(test-${TESTNAME} dynet ${LIBS} ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
+  target_link_libraries(test-${TESTNAME} dynet Boost::Boost)
   if (WITH_CUDA_BACKEND)
     CUDA_ADD_CUBLAS_TO_TARGET(test-${TESTNAME})
   endif(WITH_CUDA_BACKEND)
