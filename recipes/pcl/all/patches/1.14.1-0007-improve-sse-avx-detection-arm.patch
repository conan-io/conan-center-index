diff --git a/cmake/pcl_find_avx.cmake b/cmake/pcl_find_avx.cmake
index f760a16..2d1ff67 100644
--- a/cmake/pcl_find_avx.cmake
+++ b/cmake/pcl_find_avx.cmake
@@ -3,15 +3,15 @@
 function(PCL_CHECK_FOR_AVX)
   set(AVX_FLAGS)
 
-  include(CheckCXXSourceRuns)
+  include(CheckCXXSourceCompiles)
   
   if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX OR CMAKE_COMPILER_IS_CLANG)
-    # Setting -march & -mtune just as required flags for check_cxx_source_runs,
+    # Setting -march & -mtune just as required flags for check_cxx_source_compiles,
     # and CMAKE_REQUIRED_FLAGS will be restored after test runs.
     set(CMAKE_REQUIRED_FLAGS "-march=native -mtune=native")
   endif()
 
-  check_cxx_source_runs("    
+  check_cxx_source_compiles("
     #include <immintrin.h>
     int main()
     {
@@ -22,7 +22,7 @@ function(PCL_CHECK_FOR_AVX)
   HAVE_AVX2)
 
   if(NOT HAVE_AVX2)
-    check_cxx_source_runs("
+    check_cxx_source_compiles("
       #include <immintrin.h>
       int main()
       {
diff --git a/cmake/pcl_find_sse.cmake b/cmake/pcl_find_sse.cmake
index 25d1522..861a4f8 100644
--- a/cmake/pcl_find_sse.cmake
+++ b/cmake/pcl_find_sse.cmake
@@ -19,11 +19,11 @@ function(PCL_CHECK_FOR_SSE)
   # precision). One solution would be to use "-ffloat-store" on 32bit (see
   # http://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html), but that slows code down,
   # so the preferred solution is to try "-mpfmath=sse" first.
-  include(CheckCXXSourceRuns)
+  include(CheckCXXSourceCompiles)
   set(CMAKE_REQUIRED_FLAGS)
   set(SSE_LEVEL 0)
 
-  check_cxx_source_runs("
+  check_cxx_source_compiles("
     // Intel compiler defines an incompatible _mm_malloc signature
     #if defined(__INTEL_COMPILER)
         #include <malloc.h>
@@ -37,7 +37,7 @@ function(PCL_CHECK_FOR_SSE)
     }"
     HAVE_MM_MALLOC)
 
-  check_cxx_source_runs("
+  check_cxx_source_compiles("
     #include <stdlib.h>
     int main()
     {
@@ -50,7 +50,7 @@ function(PCL_CHECK_FOR_SSE)
     set(CMAKE_REQUIRED_FLAGS "-msse4.2")
   endif()
 
-  check_cxx_source_runs("
+  check_cxx_source_compiles("
     #include <emmintrin.h>
     #include <nmmintrin.h>
     int main ()
@@ -79,7 +79,7 @@ function(PCL_CHECK_FOR_SSE)
       set(CMAKE_REQUIRED_FLAGS "-msse4.1")
     endif()
 
-    check_cxx_source_runs("
+    check_cxx_source_compiles("
       #include <smmintrin.h>
       int main ()
       {
@@ -104,7 +104,7 @@ function(PCL_CHECK_FOR_SSE)
       set(CMAKE_REQUIRED_FLAGS "-mssse3")
     endif()
     
-    check_cxx_source_runs("
+    check_cxx_source_compiles("
       #include <tmmintrin.h>
       int main ()
       {
@@ -127,7 +127,7 @@ function(PCL_CHECK_FOR_SSE)
       set(CMAKE_REQUIRED_FLAGS "-msse3")
     endif()
 
-    check_cxx_source_runs("
+    check_cxx_source_compiles("
       #include <pmmintrin.h>
       int main ()
       {
@@ -152,7 +152,7 @@ function(PCL_CHECK_FOR_SSE)
       set(CMAKE_REQUIRED_FLAGS "/arch:SSE2")
     endif()
 
-    check_cxx_source_runs("
+    check_cxx_source_compiles("
       #include <emmintrin.h>
       int main ()
       {
@@ -177,7 +177,7 @@ function(PCL_CHECK_FOR_SSE)
       set(CMAKE_REQUIRED_FLAGS "/arch:SSE")
     endif()
 
-    check_cxx_source_runs("
+    check_cxx_source_compiles("
       #include <xmmintrin.h>
       int main ()
       {
diff --git a/cmake/pcl_options.cmake b/cmake/pcl_options.cmake
index 1911fdf..05b30a6 100644
--- a/cmake/pcl_options.cmake
+++ b/cmake/pcl_options.cmake
@@ -56,12 +56,15 @@ mark_as_advanced(PCL_ONLY_CORE_POINT_TYPES)
 option(PCL_NO_PRECOMPILE "Do not precompile PCL code for any point types at all." OFF)
 mark_as_advanced(PCL_NO_PRECOMPILE)
 
-# Enable or Disable the check for SSE optimizations
+# Enable or Disable the check for SSE and AVX optimizations
+if(CMAKE_SYSTEM_PROCESSOR MATCHES "arm")
+option(PCL_ENABLE_SSE "Enable or Disable SSE optimizations." OFF)
+option(PCL_ENABLE_AVX "Enable or Disable AVX optimizations." OFF)
+else()
 option(PCL_ENABLE_SSE "Enable or Disable SSE optimizations." ON)
-mark_as_advanced(PCL_ENABLE_SSE)
-
-# Enable or Disable the check for AVX optimizations
 option(PCL_ENABLE_AVX "Enable or Disable AVX optimizations." ON)
+endif()
+mark_as_advanced(PCL_ENABLE_SSE)
 mark_as_advanced(PCL_ENABLE_AVX)
 
 if(UNIX)
