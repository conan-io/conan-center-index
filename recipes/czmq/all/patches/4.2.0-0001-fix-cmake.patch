diff --git a/a/CMakeLists.txt b/b/CMakeLists.txt
index de4e150..93a0727 100644
--- a/a/CMakeLists.txt
+++ b/b/CMakeLists.txt
@@ -120,25 +120,26 @@ set(OPTIONAL_LIBRARIES_STATIC)
 ########################################################################
 # LIBZMQ dependency
 ########################################################################
-find_package(libzmq REQUIRED)
-IF (LIBZMQ_FOUND)
-    include_directories(${LIBZMQ_INCLUDE_DIRS})
-    list(APPEND MORE_LIBRARIES ${LIBZMQ_LIBRARIES})
+find_package(ZeroMQ REQUIRED)
+IF (ZeroMQ_FOUND)
+    include_directories(${ZeroMQ_INCLUDE_DIRS})
+    list(APPEND MORE_LIBRARIES ${ZeroMQ_LIBRARIES})
   IF (PC_LIBZMQ_FOUND)
       set(pkg_config_names_private "${pkg_config_names_private} libzmq")
       list(APPEND OPTIONAL_LIBRARIES_STATIC ${PC_LIBZMQ_STATIC_LDFLAGS})
   ELSE (PC_LIBZMQ_FOUND)
       set(pkg_config_libs_private "${pkg_config_libs_private} -lzmq")
   ENDIF (PC_LIBZMQ_FOUND)
-ELSE (LIBZMQ_FOUND)
+ELSE (ZeroMQ_FOUND)
     message( FATAL_ERROR "libzmq not found." )
-ENDIF (LIBZMQ_FOUND)
+ENDIF (ZeroMQ_FOUND)
 
 ########################################################################
 # UUID dependency
 ########################################################################
 find_package(uuid)
-IF (UUID_FOUND)
+option(CZMQ_WITH_UUID "Build czmq with uuid" ${UUID_FOUND})
+IF (CZMQ_WITH_UUID AND UUID_FOUND)
     include_directories(${UUID_INCLUDE_DIRS})
     list(APPEND MORE_LIBRARIES ${UUID_LIBRARIES})
   IF (PC_UUID_FOUND)
@@ -149,13 +150,14 @@ IF (UUID_FOUND)
   ENDIF (PC_UUID_FOUND)
     add_definitions(-DHAVE_UUID)
     list(APPEND OPTIONAL_LIBRARIES ${UUID_LIBRARIES})
-ENDIF (UUID_FOUND)
+ENDIF (CZMQ_WITH_UUID AND UUID_FOUND)
 
 ########################################################################
 # SYSTEMD dependency
 ########################################################################
 find_package(systemd)
-IF (SYSTEMD_FOUND)
+option(CZMQ_WITH_SYSTEMD "Build czmq with systemd" ${SYSTEMD_FOUND})
+IF (CZMQ_WITH_SYSTEMD AND SYSTEMD_FOUND)
     include_directories(${SYSTEMD_INCLUDE_DIRS})
     list(APPEND MORE_LIBRARIES ${SYSTEMD_LIBRARIES})
   IF (PC_SYSTEMD_FOUND)
@@ -166,13 +168,14 @@ IF (SYSTEMD_FOUND)
   ENDIF (PC_SYSTEMD_FOUND)
     add_definitions(-DHAVE_LIBSYSTEMD)
     list(APPEND OPTIONAL_LIBRARIES ${SYSTEMD_LIBRARIES})
-ENDIF (SYSTEMD_FOUND)
+ENDIF (CZMQ_WITH_SYSTEMD AND SYSTEMD_FOUND)
 
 ########################################################################
 # LZ4 dependency
 ########################################################################
 find_package(lz4)
-IF (LZ4_FOUND)
+option(CZMQ_WITH_LZ4 "Build czmq with lz4" ${LZ4_FOUND})
+IF (CZMQ_WITH_LZ4 AND LZ4_FOUND)
     include_directories(${LZ4_INCLUDE_DIRS})
     list(APPEND MORE_LIBRARIES ${LZ4_LIBRARIES})
   IF (PC_LZ4_FOUND)
@@ -183,13 +186,14 @@ IF (LZ4_FOUND)
   ENDIF (PC_LZ4_FOUND)
     add_definitions(-DHAVE_LIBLZ4)
     list(APPEND OPTIONAL_LIBRARIES ${LZ4_LIBRARIES})
-ENDIF (LZ4_FOUND)
+ENDIF (CZMQ_WITH_LZ4 AND LZ4_FOUND)
 
 ########################################################################
 # LIBCURL dependency
 ########################################################################
 find_package(libcurl)
-IF (LIBCURL_FOUND)
+option(CZMQ_WITH_LIBCURL "Build czmq with libcurl" ${LIBCURL_FOUND})
+IF (CZMQ_WITH_LIBCURL AND LIBCURL_FOUND)
     include_directories(${LIBCURL_INCLUDE_DIRS})
     list(APPEND MORE_LIBRARIES ${LIBCURL_LIBRARIES})
   IF (PC_LIBCURL_FOUND)
@@ -200,13 +204,14 @@ IF (LIBCURL_FOUND)
   ENDIF (PC_LIBCURL_FOUND)
     add_definitions(-DHAVE_LIBCURL)
     list(APPEND OPTIONAL_LIBRARIES ${LIBCURL_LIBRARIES})
-ENDIF (LIBCURL_FOUND)
+ENDIF (CZMQ_WITH_LIBCURL AND LIBCURL_FOUND)
 
 ########################################################################
 # LIBMICROHTTPD dependency
 ########################################################################
 find_package(libmicrohttpd)
-IF (LIBMICROHTTPD_FOUND)
+option(CZMQ_WITH_LIBMICROHTTPD "Build czmq with libmicrohttpd" ${LIBMICROHTTPD_FOUND})
+IF (CZMQ_WITH_LIBMICROHTTPD AND LIBMICROHTTPD_FOUND)
     include_directories(${LIBMICROHTTPD_INCLUDE_DIRS})
     list(APPEND MORE_LIBRARIES ${LIBMICROHTTPD_LIBRARIES})
   IF (PC_LIBMICROHTTPD_FOUND)
@@ -217,7 +222,7 @@ IF (LIBMICROHTTPD_FOUND)
   ENDIF (PC_LIBMICROHTTPD_FOUND)
     add_definitions(-DHAVE_LIBMICROHTTPD)
     list(APPEND OPTIONAL_LIBRARIES ${LIBMICROHTTPD_LIBRARIES})
-ENDIF (LIBMICROHTTPD_FOUND)
+ENDIF (CZMQ_WITH_LIBMICROHTTPD AND LIBMICROHTTPD_FOUND)
 
 ########################################################################
 # version
@@ -380,6 +385,7 @@ if (CZMQ_BUILD_SHARED)
   ENDIF (MSVC)
 
   set_target_properties (czmq PROPERTIES
+    LINKER_LANGUAGE CXX
     PUBLIC_HEADER "${public_headers}"
     DEFINE_SYMBOL "CZMQ_EXPORTS"
     SOVERSION "4"
@@ -501,6 +507,7 @@ install(FILES ${CMAKE_CURRENT_BINARY_DIR}/czmqConfig.cmake
 ########################################################################
 # executables
 ########################################################################
+if(0) # disable executables
 add_executable(
     zmakecert
     "${SOURCE_DIR}/src/zmakecert.c"
@@ -588,10 +595,12 @@ target_link_libraries(
     ${OPTIONAL_LIBRARIES_STATIC}
 )
 endif()
+endif() # disable executables
 
 ########################################################################
 # tests
 ########################################################################
+if(0) # disable tests
 set(CLASSTEST_TIMEOUT 60 CACHE STRING "Timeout of the selftest of a class")
 set(TOTAL_TIMEOUT 600 CACHE STRING "Timout of the total testsuite")
 
@@ -687,6 +696,7 @@ foreach(TEST_CLASS ${TEST_CLASSES})
 endforeach(TEST_CLASS)
 
 include(CTest)
+endif() # disable tests
 
 ########################################################################
 # cleanup
