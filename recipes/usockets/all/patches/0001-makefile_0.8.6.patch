diff --git a/Makefile b/Makefile
index aa874b9..d58ac0a 100644
--- a/Makefile
+++ b/Makefile
@@ -74,10 +74,10 @@ endif
 # By default we build the uSockets.a static library
 default:
 	rm -f *.o
-	$(CC) $(CFLAGS) -O3 -c src/*.c src/eventing/*.c src/crypto/*.c src/io_uring/*.c
+	$(CC) $(CFLAGS) $(CPPFLAGS) -O3 -c src/*.c src/eventing/*.c src/crypto/*.c src/io_uring/*.c
 # Also link in Boost Asio support
 ifeq ($(WITH_ASIO),1)
-	$(CXX) $(CXXFLAGS) -Isrc -std=c++14 -flto -O3 -c src/eventing/asio.cpp
+	$(CXX) $(CXXFLAGS) -Isrc -std=c++14 $(CPPFLAGS) -O3 -c src/eventing/asio.cpp
 endif
 
 # For now we do rely on C++17 for OpenSSL support but we will be porting this work to C11
@@ -88,7 +88,7 @@ ifeq ($(WITH_BORINGSSL),1)
 	$(CXX) $(CXXFLAGS) -std=c++17 -flto -O3 -c src/crypto/*.cpp
 endif
 # Create a static library (try windows, then unix)
-	lib.exe /out:uSockets.a *.o || $(AR) rvs uSockets.a *.o
+	lib.exe /out:uSockets.lib *.obj || $(AR) rvs libuSockets.a *.o
 
 # BoringSSL needs cmake and golang
 .PHONY: boringssl
@@ -98,7 +98,7 @@ boringssl:
 # Builds all examples
 .PHONY: examples
 examples: default
-	for f in examples/*.c; do $(CC) -O3 $(CFLAGS) -o $$(basename "$$f" ".c")$(EXEC_SUFFIX) "$$f" $(LDFLAGS); done
+	for f in examples/*.c; do $(CC) -O3 $(CFLAGS) $(CPPFLAGS) -o $$(basename "$$f" ".c")$(EXEC_SUFFIX) "$$f" $(LDFLAGS); done
 
 swift_examples:
 	swiftc -O -I . examples/swift_http_server/main.swift uSockets.a -o swift_http_server
