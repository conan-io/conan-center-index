diff --git a/CMakeLists.txt b/CMakeLists.txt
index daa796b..c76bfef 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -18,30 +18,31 @@ if(DOXYGEN_FOUND)
 endif()
 
 # CMake module path
-set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
+#set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
 
 # Compiler features
-include(SetCompilerFeatures)
-include(SetCompilerWarnings)
-include(SetPlatformFeatures)
-include(SystemInformation)
+#include(SetCompilerFeatures)
+#include(SetCompilerWarnings)
+#include(SetPlatformFeatures)
+#include(SystemInformation)
 
 # External packages
 find_package(Threads REQUIRED)
+find_package(fmt REQUIRED)
 if(UNIX AND NOT APPLE AND NOT MSYS)
   find_package(LibBFD)
   find_package(LibDL)
   find_package(LibRT)
-  find_package(LibUUID)
+  find_package(libuuid)
 endif()
 if(WIN32 OR MSYS)
   find_package(DbgHelp)
   find_package(RPC)
-  find_package(Userenv)
+#  find_package(Userenv)
 endif()
 
 # Modules
-add_subdirectory("modules")
+#add_subdirectory("modules")
 
 # Link libraries
 list(APPEND LINKLIBS Threads::Threads)
@@ -49,17 +50,18 @@ if(UNIX AND NOT APPLE AND NOT MSYS)
   list(APPEND LINKLIBS ${LIBBFD_LIBRARIES})
   list(APPEND LINKLIBS ${LIBDL_LIBRARIES})
   list(APPEND LINKLIBS ${LIBRT_LIBRARIES})
-  list(APPEND LINKLIBS ${LIBUUID_LIBRARIES})
+  list(APPEND LINKLIBS libuuid::libuuid)
 endif()
 if(WIN32 OR MSYS)
   list(APPEND LINKLIBS ${DBGHELP_LIBRARIES})
   list(APPEND LINKLIBS ${RPC_LIBRARIES})
-  list(APPEND LINKLIBS ${USERENV_LIBRARIES})
+  list(APPEND LINKLIBS userenv)
+  list(APPEND LINKLIBS rpcrt4)
   list(APPEND LINKLIBS ${VLD_LIBRARIES})
 endif()
 
 # System directories
-include_directories(SYSTEM "${CMAKE_CURRENT_SOURCE_DIR}/modules")
+#include_directories(SYSTEM "${CMAKE_CURRENT_SOURCE_DIR}/modules")
 include_directories(SYSTEM "${CMAKE_CURRENT_SOURCE_DIR}/plugins")
 
 # Library
@@ -68,8 +70,9 @@ file(GLOB_RECURSE LIB_INLINE_FILES "include/*.inl" "source/*.inl")
 file(GLOB_RECURSE LIB_SOURCE_FILES "include/*.cpp" "source/*.cpp")
 add_library(cppcommon ${LIB_HEADER_FILES} ${LIB_INLINE_FILES} ${LIB_SOURCE_FILES})
 set_target_properties(cppcommon PROPERTIES COMPILE_FLAGS "${PEDANTIC_COMPILE_FLAGS}" FOLDER "libraries")
-target_include_directories(cppcommon PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include" PUBLIC ${vld})
-target_link_libraries(cppcommon ${LINKLIBS} fmt)
+target_include_directories(cppcommon PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include")
+target_compile_features(cppcommon PUBLIC cxx_std_17)
+target_link_libraries(cppcommon PUBLIC ${LINKLIBS} fmt::fmt)
 list(APPEND INSTALL_TARGETS cppcommon)
 list(APPEND LINKLIBS cppcommon)
 
@@ -91,6 +94,7 @@ if(NOT CPPCOMMON_MODULE)
     list(APPEND INSTALL_TARGETS_PDB ${PLUGIN_TARGET})
   endforeach()
 
+  if (0)
   # Examples
   file(GLOB EXAMPLE_HEADER_FILES "examples/*.h")
   file(GLOB EXAMPLE_INLINE_FILES "examples/*.inl")
@@ -136,15 +140,16 @@ if(NOT CPPCOMMON_MODULE)
   # CTest
   enable_testing()
   add_test(cppcommon-tests cppcommon-tests --durations yes --order lex)
+  endif()
 
   # Install
   install(TARGETS ${INSTALL_TARGETS}
-    RUNTIME DESTINATION "${PROJECT_SOURCE_DIR}/bin"
-    LIBRARY DESTINATION "${PROJECT_SOURCE_DIR}/bin"
-    ARCHIVE DESTINATION "${PROJECT_SOURCE_DIR}/bin")
-
+      RUNTIME DESTINATION bin
+      LIBRARY DESTINATION lib
+      ARCHIVE DESTINATION lib)
+  
   # Install *.pdb files
-  if(MSVC)
+  if(FALSE)
     foreach(INSTALL_TARGET_PDB ${INSTALL_TARGETS_PDB})
       install(FILES $<TARGET_PDB_FILE:${INSTALL_TARGET_PDB}> DESTINATION "${PROJECT_SOURCE_DIR}/bin")
     endforeach()
