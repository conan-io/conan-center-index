diff --git a/cmake/IgnSetCompilerFlags.cmake b/cmake/IgnSetCompilerFlags.cmake
index e4257ee..8fc5810 100644
--- a/cmake/IgnSetCompilerFlags.cmake
+++ b/cmake/IgnSetCompilerFlags.cmake
@@ -77,9 +77,9 @@ macro(ign_setup_unix)
     exec_program(${CMAKE_UNAME} ARGS -m OUTPUT_VARIABLE CMAKE_SYSTEM_PROCESSOR)
     set(CMAKE_SYSTEM_PROCESSOR ${CMAKE_SYSTEM_PROCESSOR} CACHE INTERNAL
         "processor type (i386 and x86_64)")
-    if(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
-      set(IGN_ADD_fPIC_TO_LIBRARIES true)
-    endif(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
+    #if(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
+    #  set(IGN_ADD_fPIC_TO_LIBRARIES true)
+    #endif(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
   endif(CMAKE_UNAME)
 
 endmacro()
diff --git a/cmake/IgnUtils.cmake b/cmake/IgnUtils.cmake
index 8dda557..9c5d4b5 100644
--- a/cmake/IgnUtils.cmake
+++ b/cmake/IgnUtils.cmake
@@ -1391,7 +1391,7 @@ macro(_ign_add_library_or_component)
     # Generate export macro headers
     # Note: INTERFACE libraries do not need the export header
     set(binary_include_dir
-      "${CMAKE_BINARY_DIR}/include/${include_dir}")
+        "${PROJECT_BINARY_DIR}/include/${include_dir}")
 
     set(implementation_file_name "${binary_include_dir}/detail/Export.hh")
 
