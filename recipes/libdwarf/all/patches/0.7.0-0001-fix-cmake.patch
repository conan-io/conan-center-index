diff --git a/CMakeLists.txt b/CMakeLists.txt
index dd09dde8..8162a985 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -129,6 +129,9 @@ check_include_file( "libelf/libelf.h" HAVE_LIBELF_LIBELF_H)
 
 ### cmake provides no way to guarantee uint32_t present.
 ### configure does guarantee that.
+if (BUILD_DWARFGEN)
+  find_package(libelf REQUIRED)
+endif()
 if(HAVE_STDINT_H)
   check_c_source_compiles("
   #include <stdint.h>
@@ -192,7 +195,8 @@ elseif(HAVE_LIBELF_LIBELF_H)
 endif()
 
 if (HAVE_LIBELF_H OR HAVE_LIBELF_LIBELF_H)
-  set (CMAKE_REQUIRED_LIBRARIES elf)
+  set (CMAKE_REQUIRED_LIBRARIES libelf::libelf)
+  set (CMAKE_REQUIRED_DEFINITIONS -D__LIBELF64=1)
   message(STATUS "libelf header ${PLAIN_JUST_LIBELF} checking for elf64_getehdr")
   check_symbol_exists( elf64_getehdr ${PLAIN_JUST_LIBELF} HAVE_ELF64_GETEHDR)
   message(STATUS "libelf header ${PLAIN_JUST_LIBELF} checking for elf64_getshdr")
@@ -216,6 +220,9 @@ if (DWARF_WITH_LIBELF)
   message(STATUS "checking using elf header ... ${HAVE_LOCATION_OF_LIBELFHEADER}")
   message(STATUS "checking using libelf header ... ${JUST_LIBELF}")
 
+set (CMAKE_REQUIRED_LIBRARIES libelf::libelf)
+set (CMAKE_REQUIRED_DEFINITIONS -D__LIBELF64=1)
+
 check_c_source_compiles("
   #include ${HAVE_LOCATION_OF_LIBELFHEADER}
   int main()
@@ -361,7 +368,6 @@ message(STATUS "Building api tests   ... ${DOTESTS}")
 ### end what was configure.cmake
 
 # This references cmake/FindLibElf.cmake. See cmake documentation.
-find_package(LibElf REQUIRED)
 list(APPEND CMAKE_REQUIRED_INCLUDES ${LIBELF_INCLUDE_DIRS})
 
 configure_file(cmake/config.h.cmake config.h)
@@ -384,7 +390,6 @@ if(BUILD_SHARED)
 endif()
 
 add_subdirectory(src/lib/libdwarf)
-add_subdirectory(src/bin/dwarfdump)
 
 if ( BUILD_DWARFEXAMPLE )
 	add_subdirectory(src/bin/dwarfexample)
diff --git a/src/bin/dwarfdump/CMakeLists.txt b/src/bin/dwarfdump/CMakeLists.txt
index 507f761d..8ddb0d90 100644
--- a/src/bin/dwarfdump/CMakeLists.txt
+++ b/src/bin/dwarfdump/CMakeLists.txt
@@ -64,7 +64,7 @@ target_compile_options(dwarfdump PRIVATE ${DW_FWALL})
 
 target_link_libraries(dwarfdump PRIVATE ${dwarf-target} ${DW_FZLIB} ${DW_FZSTD} ) 
 
-if(${CMAKE_SIZEOF_VOID_P} EQUAL 8)
+if(0)
 	set(SUFFIX 64)
 endif()
 set(LIBDIR lib${SUFFIX})
diff --git a/src/bin/dwarfgen/CMakeLists.txt b/src/bin/dwarfgen/CMakeLists.txt
index a7f5d78e..60293f6b 100644
--- a/src/bin/dwarfgen/CMakeLists.txt
+++ b/src/bin/dwarfgen/CMakeLists.txt
@@ -28,7 +28,7 @@ target_include_directories(dwarfgen PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/../../lib/libdwarfp)
 
 target_link_libraries(dwarfgen PRIVATE ${dwarfp-target}
-   ${dwarf-target} ${DW_FZLIB})
+   ${dwarf-target} ${DW_FZLIB} libelf::libelf)
 
 set(SUFFIX $<$<EQUAL:${CMAKE_SIZEOF_VOID_P},8>:64>)
 set(LIBDIR lib${SUFFIX})
diff --git a/src/lib/libdwarf/CMakeLists.txt b/src/lib/libdwarf/CMakeLists.txt
index 913274b8..8515e2b0 100644
--- a/src/lib/libdwarf/CMakeLists.txt
+++ b/src/lib/libdwarf/CMakeLists.txt
@@ -70,7 +70,7 @@ set_source_group(CONFIGURATION_FILES "Configuration Files"
 	
 list(LENGTH DWARF_TARGETS targetCount)
 math(EXPR targetCount "${targetCount} - 1")
-list(APPEND DWARF_LIBS ${LIBELF_LIBRARIES})
+list(APPEND DWARF_LIBS ${libelf_LIBRARIES})
 if (DW_FZLIB)
     list(APPEND DWARF_LIBS z)
 endif()
@@ -88,13 +88,15 @@ foreach(i RANGE ${targetCount})
             ${LIBELF_INCLUDE_DIRS})
     target_compile_options(${target} PRIVATE -DLIBDWARF_BUILD
             ${DW_FWALL})
-	msvc_posix(${target})
+    if(BUILD_SHARED)
+        target_compile_definitions(${target} PRIVATE LIBDWARF_SHARED)
+    endif()
+    msvc_posix(${target})
 
 	target_link_libraries(${target} PUBLIC ${LIBELF_LIBRARIES} ${DW_FZLIB} ${DW_FZSTD} ) 
 	
 	set_target_properties(${target} PROPERTIES OUTPUT_NAME dwarf)
 
-	set(SUFFIX $<$<EQUAL:${CMAKE_SIZEOF_VOID_P},8>:64>)
 	set(LIBDIR lib${SUFFIX})
 	set(BINDIR bin${SUFFIX})
 
@@ -105,7 +107,6 @@ foreach(i RANGE ${targetCount})
 endforeach()
 
 # add_library(libdwarf)
-configure_file(libdwarf.pc.cmake libdwarf.pc @ONLY )
 
 # The install has to be here, not in
 # another CMakeLists.txt  to make install work properly
@@ -126,9 +127,9 @@ install(
 )
 install(DIRECTORY libdwarf DESTINATION include/
     FILES_MATCHING PATTERN "*.h")
+install(
+    FILES ${CMAKE_CURRENT_SOURCE_DIR}/dwarf.h
+    DESTINATION include/libdwarf)
 install(
     FILES ${CMAKE_CURRENT_SOURCE_DIR}/libdwarf.h
     DESTINATION include/libdwarf)
-install( FILES ${PROJECT_BINARY_DIR}/src/lib/libdwarf/libdwarf.pc
-    DESTINATION lib/pkgconfig
-)
