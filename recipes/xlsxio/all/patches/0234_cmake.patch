diff --git a/CMakeLists.txt b/CMakeLists.txt
index bf4e9bf..f0d6a0e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -22,8 +22,6 @@ OPTION(BUILD_PC_FILES "Build pkg-config .pc" ON)
 OPTION(BUILD_TOOLS "Build tools" ON)
 OPTION(BUILD_EXAMPLES "Build examples" ON)
 OPTION(WITH_LIBZIP "Use libzip instead of Minizip" OFF)
-OPTION(WITH_MINIZIP_NG "Use Minizip NG" OFF)
-OPTION(MINIZIP_NG_SUFFIX "Minizip NG suffix (default is empty)" "")
 OPTION(WITH_WIDE "Also build UTF-16 library (libxlsxio_readw)" OFF)
 SET(ZLIB_DIR "" CACHE PATH "Path to the zlib library")
 IF(WITH_LIBZIP)
@@ -48,18 +46,33 @@ ENDIF()
 #   dependancy: libzip/minizip/minizip-ng
 IF(WITH_LIBZIP)
   FIND_PACKAGE(LibZip REQUIRED)
-  SET(ANYZIP_INCLUDE_DIRS ${LIBZIP_INCLUDE_DIRS})
-  SET(ANYZIP_LIBRARIES ${LIBZIP_LIBRARIES})
+  IF(LIBZIP_INCLUDE_DIRS)
+    SET(ANYZIP_INCLUDE_DIRS ${LIBZIP_INCLUDE_DIRS})
+    SET(ANYZIP_LIBRARIES ${LIBZIP_LIBRARIES})
+  ELSE()
+    SET(ANYZIP_INCLUDE_DIRS ${libzip_INCLUDE_DIRS})
+    SET(ANYZIP_LIBRARIES ${libzip_LIBRARIES})
+  ENDIF()
   SET(ANYZIP_DEF USE_LIBZIP)
 ELSEIF(WITH_MINIZIP_NG)
-  FIND_PACKAGE(minizip${MINIZIP_NG_SUFFIX} REQUIRED)
-  SET(ANYZIP_INCLUDE_DIRS "${minizip-ng_DIR}/../../../include/minizip${MINIZIP_NG_SUFFIX}")
-  SET(ANYZIP_LIBRARIES minizip${MINIZIP_NG_SUFFIX})
+  FIND_PACKAGE(minizip REQUIRED)
+  IF(minizip_INCLUDE_DIRS)
+    SET(ANYZIP_INCLUDE_DIRS ${minizip_INCLUDE_DIRS})
+    SET(ANYZIP_LIBRARIES ${minizip_LIBRARIES})
+  ELSE()
+    SET(ANYZIP_INCLUDE_DIRS "${minizip-ng_DIR}/../../../include/minizip${MINIZIP_NG_SUFFIX}")
+    SET(ANYZIP_LIBRARIES minizip${MINIZIP_NG_SUFFIX})
+  ENDIF()
   SET(ANYZIP_DEF USE_MINIZIP;USE_MINIZIP_NG)
 ELSE()
-  FIND_PACKAGE(Minizip REQUIRED)
-  SET(ANYZIP_INCLUDE_DIRS ${MINIZIP_INCLUDE_DIRS})
-  SET(ANYZIP_LIBRARIES ${MINIZIP_LIBRARIES})
+  FIND_PACKAGE(Minizip 1 REQUIRED)
+  IF(MINIZIP_INCLUDE_DIRS)
+    SET(ANYZIP_INCLUDE_DIRS ${MINIZIP_INCLUDE_DIRS})
+    SET(ANYZIP_LIBRARIES ${MINIZIP_LIBRARIES})
+  ELSE()
+    SET(ANYZIP_INCLUDE_DIRS ${minizip_INCLUDE_DIRS})
+    SET(ANYZIP_LIBRARIES ${minizip_LIBRARIES})
+  ENDIF()
   SET(ANYZIP_DEF USE_MINIZIP)
 ENDIF()
 #   dependancy: expat
@@ -69,6 +82,9 @@ IF(EXPAT_DIR)
   FIND_LIBRARY(EXPAT_LIBRARIES NAMES expat libexpat NO_DEFAULT_PATH PATHS ${EXPAT_DIR}/lib ${EXPAT_DIR})
 ELSE()
   FIND_PACKAGE(EXPAT REQUIRED)
+  IF(NOT EXPAT_LIBRARIES)
+    SET(EXPAT_LIBRARIES ${expat_LIBRARIES})
+  ENDIF()
 ENDIF()
 #   dependancy: expatw (if wide library was requested)
 IF(WITH_WIDE)
@@ -77,6 +93,9 @@ IF(WITH_WIDE)
   ELSE()
     FIND_LIBRARY(EXPATW_LIBRARIES NAMES expatw)
   ENDIF()
+  IF(NOT EXPATW_LIBRARIES)
+    SET(EXPATW_LIBRARIES ${EXPAT_LIBRARIES})
+  ENDIF()
 ENDIF()
 
 # Doxygen
@@ -108,7 +127,9 @@ ENDIF()
 
 FOREACH(LINKTYPE ${LINKTYPES})
   ADD_LIBRARY(xlsxio_read_${LINKTYPE} ${LINKTYPE} lib/xlsxio_read.c lib/xlsxio_read_sharedstrings.c)
-  SET_TARGET_PROPERTIES(xlsxio_read_${LINKTYPE} PROPERTIES COMPILE_DEFINITIONS "BUILD_XLSXIO;${ANYZIP_DEF};BUILD_XLSXIO_${LINKTYPE}")
+  TARGET_COMPILE_DEFINITIONS(xlsxio_read_${LINKTYPE} PUBLIC BUILD_XLSXIO)
+  TARGET_COMPILE_DEFINITIONS(xlsxio_read_${LINKTYPE} PUBLIC ${ANYZIP_DEF})
+  TARGET_COMPILE_DEFINITIONS(xlsxio_read_${LINKTYPE} PUBLIC BUILD_XLSXIO_${LINKTYPE})
   SET_TARGET_PROPERTIES(xlsxio_read_${LINKTYPE} PROPERTIES OUTPUT_NAME xlsxio_read)
   IF(MINGW AND LINKTYPE STREQUAL "SHARED")
     SET_TARGET_PROPERTIES(xlsxio_read_${LINKTYPE} PROPERTIES LINK_FLAGS "-Wl,--output-def=libxlsxio_read.def")
@@ -119,7 +140,9 @@ FOREACH(LINKTYPE ${LINKTYPES})
   SET(ALLTARGETS_LIB ${ALLTARGETS_LIB} xlsxio_read_${LINKTYPE})
 
   ADD_LIBRARY(xlsxio_write_${LINKTYPE} ${LINKTYPE} lib/xlsxio_write.c)
-  SET_TARGET_PROPERTIES(xlsxio_write_${LINKTYPE} PROPERTIES COMPILE_DEFINITIONS "BUILD_XLSXIO;${ANYZIP_DEF};BUILD_XLSXIO_${LINKTYPE}")
+  TARGET_COMPILE_DEFINITIONS(xlsxio_write_${LINKTYPE} PUBLIC BUILD_XLSXIO)
+  TARGET_COMPILE_DEFINITIONS(xlsxio_write_${LINKTYPE} PUBLIC ${ANYZIP_DEF})
+  TARGET_COMPILE_DEFINITIONS(xlsxio_write_${LINKTYPE} PUBLIC BUILD_XLSXIO_${LINKTYPE})
   SET_TARGET_PROPERTIES(xlsxio_write_${LINKTYPE} PROPERTIES OUTPUT_NAME xlsxio_write)
   IF(MINGW AND LINKTYPE STREQUAL "SHARED")
     SET_TARGET_PROPERTIES(xlsxio_write_${LINKTYPE} PROPERTIES LINK_FLAGS "-Wl,--output-def=libxlsxio_write.def")
@@ -129,8 +152,11 @@ FOREACH(LINKTYPE ${LINKTYPES})
 
   IF(WITH_WIDE)
     ADD_LIBRARY(xlsxio_readw_${LINKTYPE} ${LINKTYPE} lib/xlsxio_read.c lib/xlsxio_read_sharedstrings.c)
-    SET_TARGET_PROPERTIES(xlsxio_readw_${LINKTYPE} PROPERTIES DEFINE_SYMBOL "BUILD_XLSXIO_DLL")
-    SET_TARGET_PROPERTIES(xlsxio_readw_${LINKTYPE} PROPERTIES COMPILE_DEFINITIONS "XML_UNICODE;BUILD_XLSXIO;${ANYZIP_DEF}")
+    TARGET_COMPILE_DEFINITIONS(xlsxio_readw_${LINKTYPE} PUBLIC BUILD_XLSXIO_DLL)
+    TARGET_COMPILE_DEFINITIONS(xlsxio_readw_${LINKTYPE} PUBLIC XML_UNICODE)
+    TARGET_COMPILE_DEFINITIONS(xlsxio_readw_${LINKTYPE} PUBLIC BUILD_XLSXIO)
+    TARGET_COMPILE_DEFINITIONS(xlsxio_readw_${LINKTYPE} PUBLIC ${ANYZIP_DEF})
+    
     SET_TARGET_PROPERTIES(xlsxio_readw_${LINKTYPE} PROPERTIES OUTPUT_NAME xlsxio_readw)
     IF(MINGW AND LINKTYPE STREQUAL "SHARED")
       SET_TARGET_PROPERTIES(xlsxio_readw_${LINKTYPE} PROPERTIES LINK_FLAGS "-Wl,--output-def=libxlsxio_readw.def")
