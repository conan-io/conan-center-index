--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -33,6 +33,10 @@ enable_testing()
 # Setup platform-specific threading flags.
 find_package(Threads REQUIRED)
 
+find_package(ZLIB REQUIRED)
+add_library(PkgConfig::Ptex_ZLIB INTERFACE IMPORTED)
+set_property(TARGET PkgConfig::Ptex_ZLIB PROPERTY INTERFACE_LINK_LIBRARIES ZLIB::ZLIB)
+if(0)
 # Use pkg-config to create a PkgConfig::Ptex_ZLIB imported target
 find_package(PkgConfig REQUIRED)
 pkg_checK_modules(Ptex_ZLIB REQUIRED zlib IMPORTED_TARGET)
@@ -59,6 +63,7 @@ if (NOT DEFINED PTEX_VER)
             OUTPUT_STRIP_TRAILING_WHITESPACE)
     endif ()
 endif ()
+endif()
 # Provide a fallback version when the Git repository is unavailable.
 if (NOT PTEX_VER)
     set(PTEX_VER "v2.3.X")
@@ -76,7 +81,7 @@ endif ()
 list(GET PTEX_VER_LIST 0 PTEX_MAJOR_VERSION)
 list(GET PTEX_VER_LIST 1 PTEX_MINOR_VERSION)
 
-if (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
+if (0)
     # Detect the build type from the $FLAVOR environment variable
     # Default to optimized Release builds when unspecified.
     if ("$ENV{FLAVOR}" MATCHES "debug")
@@ -116,7 +121,4 @@ endif ()
 include_directories(src/ptex)
 
 add_subdirectory(src/ptex)
-add_subdirectory(src/utils)
-add_subdirectory(src/tests)
-add_subdirectory(src/doc)
 add_subdirectory(src/build)
--- a/src/ptex/CMakeLists.txt
+++ b/src/ptex/CMakeLists.txt
@@ -21,6 +21,7 @@ if(PTEX_BUILD_STATIC_LIBS)
         $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
     PRIVATE
         ${CMAKE_CURRENT_SOURCE_DIR})
+    target_compile_definitions(Ptex_static PUBLIC PTEX_STATIC)
     target_link_libraries(Ptex_static
         PUBLIC Threads::Threads PkgConfig::Ptex_ZLIB)
     install(TARGETS Ptex_static EXPORT Ptex DESTINATION ${CMAKE_INSTALL_LIBDIR})
@@ -39,7 +40,7 @@ if(PTEX_BUILD_SHARED_LIBS)
     target_compile_definitions(Ptex_dynamic PRIVATE PTEX_EXPORTS)
     target_link_libraries(Ptex_dynamic
         PUBLIC Threads::Threads PkgConfig::Ptex_ZLIB)
-    install(TARGETS Ptex_dynamic EXPORT Ptex DESTINATION ${CMAKE_INSTALL_LIBDIR})
+    install(TARGETS Ptex_dynamic EXPORT Ptex RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
 endif()
 
 install(FILES
