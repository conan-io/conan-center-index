diff --git a/src/heif.imageio/heifinput.cpp b/src/heif.imageio/heifinput.cpp
index 8fae5d1..b851ec3 100644
--- a/src/heif.imageio/heifinput.cpp
+++ b/src/heif.imageio/heifinput.cpp
@@ -394,7 +394,11 @@ HeifInput::read_native_scanline(int subimage, int miplevel, int y, int /*z*/,
     if (y < 0 || y >= m_spec.height)  // out of range scanline
         return false;
 
-    int ystride          = 0;
+#if LIBHEIF_NUMERIC_VERSION >= 18088192  // libheif >= 1.20.1
+    size_t ystride = 0;
+#else
+    int ystride = 0;
+#endif
     const uint8_t* hdata = m_himage.get_plane(heif_channel_interleaved,
                                               &ystride);
     if (!hdata) {
diff --git a/src/heif.imageio/heifoutput.cpp b/src/heif.imageio/heifoutput.cpp
index 27fe222..ae253d7 100644
--- a/src/heif.imageio/heifoutput.cpp
+++ b/src/heif.imageio/heifoutput.cpp
@@ -149,7 +149,11 @@ HeifOutput::write_scanline(int y, int /*z*/, TypeDesc format, const void* data,
                            stride_t xstride)
 {
     data           = to_native_scanline(format, data, xstride, scratch);
-    int hystride   = 0;
+#if LIBHEIF_NUMERIC_VERSION >= 18088192  // libheif >= 1.20.1
+    size_t hystride = 0;
+#else
+    int hystride = 0;
+#endif
     uint8_t* hdata = m_himage.get_plane(heif_channel_interleaved, &hystride);
     hdata += hystride * (y - m_spec.y);
     memcpy(hdata, data, hystride);
