diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5b6957b..389e714 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -171,7 +171,7 @@ if (OIIO_BUILD_TOOLS AND NOT BUILD_OIIOUTIL_ONLY)
     add_subdirectory (src/iinfo)
     add_subdirectory (src/maketx)
     add_subdirectory (src/oiiotool)
-    add_subdirectory (src/testtex)
+    # add_subdirectory (src/testtex)
     add_subdirectory (src/iv)
 endif ()
 
@@ -477,7 +477,7 @@ if (WIN32)
     set(CPACK_PACKAGE_EXECUTABLES "iv" "iv - Image Viewer")
 #    set(CPACK_CREATE_DESCTOP_LINKS "iv" "iv - Image Viewer")
     set(CPACK_NSIS_MODIFY_PATH ON)
-    include (InstallRequiredSystemLibraries)
+    # include (InstallRequiredSystemLibraries)
 endif ()
 set (CPACK_SOURCE_PACKAGE_FILE_NAME ${PROJECT_NAME}-${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}-source)
 #set (CPACK_SOURCE_STRIP_FILES Do we need this?)
diff --git a/src/cmake/externalpackages.cmake b/src/cmake/externalpackages.cmake
index 7109cb9..106d8bc 100644
--- a/src/cmake/externalpackages.cmake
+++ b/src/cmake/externalpackages.cmake
@@ -144,7 +144,7 @@ if (LINKSTATIC)
     endif ()
 else ()
     if (MSVC)
-        add_definitions (-DBOOST_ALL_DYN_LINK=1)
+        # add_definitions (-DBOOST_ALL_DYN_LINK=1)
     endif ()
 endif ()
 if (BOOST_CUSTOM)
@@ -190,14 +190,13 @@ checked_find_package (TIFF 3.0 REQUIRED)
 # IlmBase & OpenEXR
 checked_find_package (OpenEXR 2.0 REQUIRED)
 # We use Imath so commonly, may as well include it everywhere.
-include_directories ("${OPENEXR_INCLUDES}" "${ILMBASE_INCLUDES}"
-                     "${ILMBASE_INCLUDES}/OpenEXR")
+include_directories ("${OpenEXR_INCLUDE_DIRS}")
 if (CMAKE_COMPILER_IS_CLANG AND OPENEXR_VERSION VERSION_LESS 2.3)
     # clang C++ >= 11 doesn't like 'register' keyword in old exr headers
     add_compile_options (-Wno-deprecated-register)
 endif ()
 if (MSVC AND NOT LINKSTATIC)
-    add_definitions (-DOPENEXR_DLL) # Is this needed for new versions?
+    #add_definitions (-DOPENEXR_DLL) # Is this needed for new versions?
 endif ()
 
 
@@ -214,7 +213,7 @@ endif ()
 # allow this to be overridden to use the distro-provided package if desired.
 option (USE_EXTERNAL_PUGIXML "Use an externally built shared library version of the pugixml library" OFF)
 if (USE_EXTERNAL_PUGIXML)
-    checked_find_package (PugiXML REQUIRED
+    checked_find_package (pugixml REQUIRED
                        DEFINITIONS -DUSE_EXTERNAL_PUGIXML=1)
 endif()
 
@@ -254,8 +253,8 @@ checked_find_package (Field3D
                    DEFINITIONS  -DUSE_FIELD3D=1)
 checked_find_package (GIF 4)
 checked_find_package (Libheif 1.3)  # For HEIF/HEIC format
-checked_find_package (LibRaw)
-checked_find_package (OpenJpeg)
+checked_find_package (libraw)
+checked_find_package (OpenJPEG)
 checked_find_package (OpenVDB 5.0
                    DEPS         TBB
                    DEFINITIONS  -DUSE_OPENVDB=1)
@@ -331,7 +330,7 @@ endmacro()
 option (USE_EMBEDDED_LIBSQUISH
         "Force use of embedded Libsquish, even if external is found" OFF)
 if (NOT USE_EMBEDDED_LIBSQUISH)
-    checked_find_package (Libsquish)
+    checked_find_package (libsquish)
 endif ()
 
 
diff --git a/src/cmake/oiio_macros.cmake b/src/cmake/oiio_macros.cmake
index c642ac7..ac469fb 100644
--- a/src/cmake/oiio_macros.cmake
+++ b/src/cmake/oiio_macros.cmake
@@ -169,6 +169,8 @@ endmacro ()
 # the user where to find such tests.
 #
 macro (oiio_add_tests)
+endmacro()
+macro(DISABLED_oiio_add_tests)
     cmake_parse_arguments (_ats "" "" "URL;IMAGEDIR;LABEL;FOUNDVAR;TESTNAME" ${ARGN})
        # Arguments: <prefix> <options> <one_value_keywords> <multi_value_keywords> args...
     set (_ats_testdir "${OIIO_TESTSUITE_IMAGEDIR}/${_ats_IMAGEDIR}")
diff --git a/src/dds.imageio/CMakeLists.txt b/src/dds.imageio/CMakeLists.txt
index 546f683..5ccdd8e 100644
--- a/src/dds.imageio/CMakeLists.txt
+++ b/src/dds.imageio/CMakeLists.txt
@@ -5,7 +5,7 @@
 if (LIBSQUISH_FOUND)
     # External libsquish was found -- use it
     add_oiio_plugin (ddsinput.cpp
-                     LINK_LIBRARIES Libsquish::Libsquish
+                     LINK_LIBRARIES libsquish::libsquish
                      )
 else ()
     # No external libsquish was found -- use the embedded version.
diff --git a/src/include/CMakeLists.txt b/src/include/CMakeLists.txt
index faed9f6..80b564e 100644
--- a/src/include/CMakeLists.txt
+++ b/src/include/CMakeLists.txt
@@ -58,6 +58,6 @@ set (fmt_headers
         ${FMT_INCLUDES}/fmt/format.h
         ${FMT_INCLUDES}/fmt/ostream.h
         ${FMT_INCLUDES}/fmt/printf.h )
-install (FILES ${fmt_headers}
-         DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}/fmt
-         COMPONENT developer)
+# install (FILES ${fmt_headers}
+#          DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}/fmt
+#          COMPONENT developer)
diff --git a/src/jpeg2000.imageio/CMakeLists.txt b/src/jpeg2000.imageio/CMakeLists.txt
index 7bc6adb..7bf937a 100644
--- a/src/jpeg2000.imageio/CMakeLists.txt
+++ b/src/jpeg2000.imageio/CMakeLists.txt
@@ -2,8 +2,8 @@
 # SPDX-License-Identifier: BSD-3-Clause
 # https://github.com/OpenImageIO/oiio/blob/master/LICENSE.md
 
-if (OPENJPEG_FOUND)
-    if (${OPENJPEG_VERSION} VERSION_LESS 2.0)
+if (OpenJPEG_FOUND)
+    if (${OpenJPEG_VERSION} VERSION_LESS 2.0)
         # Old OpenJpeg 1.5. Remove this eventually.
         #
         # For reasons I don't understand, OpenJPEG 1.5 fails imageinout_test
@@ -13,15 +13,13 @@ if (OPENJPEG_FOUND)
         # for now, I'm just disabling jpeg2000 support for that combination.
         if (EMBEDPLUGINS)
             add_oiio_plugin (jpeg2000input-v1.cpp jpeg2000output-v1.cpp
-                             INCLUDE_DIRS ${OPENJPEG_INCLUDES}
-                             LINK_LIBRARIES ${OPENJPEG_LIBRARIES}
+                             LINK_LIBRARIES OpenJPEG::OpenJPEG
                              DEFINITIONS "-DUSE_OPENJPEG")
         endif()
     else ()
         # OpenJpeg 2.x. Eventually this should be the only one we need.
         add_oiio_plugin (jpeg2000input.cpp jpeg2000output.cpp
-                         INCLUDE_DIRS ${OPENJPEG_INCLUDES}
-                         LINK_LIBRARIES ${OPENJPEG_LIBRARIES}
+                         LINK_LIBRARIES OpenJPEG::OpenJPEG
                          DEFINITIONS "-DUSE_OPENJPEG")
     endif ()
 else()
diff --git a/src/libOpenImageIO/CMakeLists.txt b/src/libOpenImageIO/CMakeLists.txt
index 7cabd9b..9e6b791 100644
--- a/src/libOpenImageIO/CMakeLists.txt
+++ b/src/libOpenImageIO/CMakeLists.txt
@@ -135,8 +135,7 @@ endif ()
 
 target_link_libraries (OpenImageIO
         PUBLIC
-            ${ILMBASE_LIBRARIES}
-            ${OPENEXR_LIBRARIES}
+            OpenEXR::OpenEXR
             ${OpenCV_LIBRARIES}
             ${GCC_ATOMIC_LIBRARIES}
         PRIVATE
@@ -152,12 +151,11 @@ target_link_libraries (OpenImageIO
 if (USE_EXTERNAL_PUGIXML)
     # insert include path to pugixml first, to ensure that the external
     # pugixml is found, and not the one in OIIO's include directory.
-    target_include_directories (OpenImageIO PRIVATE BEFORE ${PUGIXML_INCLUDES})
-    target_link_libraries (OpenImageIO PRIVATE ${PUGIXML_LIBRARIES})
+    target_link_libraries (OpenImageIO PRIVATE pugixml::pugixml)
 endif()
 
 if (FREETYPE_FOUND)
-    target_link_libraries (OpenImageIO PRIVATE ${FREETYPE_LIBRARIES})
+    target_link_libraries (OpenImageIO PRIVATE Freetype::Freetype)
 endif()
 
 if (WIN32)
diff --git a/src/libutil/CMakeLists.txt b/src/libutil/CMakeLists.txt
index 49ec779..8911c83 100644
--- a/src/libutil/CMakeLists.txt
+++ b/src/libutil/CMakeLists.txt
@@ -13,7 +13,7 @@ target_include_directories (OpenImageIO_Util
         )
 target_link_libraries (OpenImageIO_Util
         PUBLIC
-            ${ILMBASE_LIBRARIES}
+            OpenEXR::OpenEXR
             ${GCC_ATOMIC_LIBRARIES}
         PRIVATE
             ${SANITIZE_LIBRARIES}
diff --git a/src/raw.imageio/CMakeLists.txt b/src/raw.imageio/CMakeLists.txt
index 81a0ff5..70ebc84 100644
--- a/src/raw.imageio/CMakeLists.txt
+++ b/src/raw.imageio/CMakeLists.txt
@@ -4,8 +4,7 @@
 
 if (LIBRAW_FOUND)
     add_oiio_plugin (rawinput.cpp
-                     INCLUDE_DIRS ${LibRaw_INCLUDE_DIR}
-                     LINK_LIBRARIES ${LibRaw_r_LIBRARIES}
+                     LINK_LIBRARIES libraw::libraw
                      DEFINITIONS "-DUSE_LIBRAW=1")
 else ()
     message (WARNING "Raw plugin will not be built")
diff --git a/src/tiff.imageio/CMakeLists.txt b/src/tiff.imageio/CMakeLists.txt
index f6d648c..ef345c9 100644
--- a/src/tiff.imageio/CMakeLists.txt
+++ b/src/tiff.imageio/CMakeLists.txt
@@ -3,6 +3,4 @@
 # https://github.com/OpenImageIO/oiio/blob/master/LICENSE.md
 
 add_oiio_plugin (tiffinput.cpp tiffoutput.cpp
-                 INCLUDE_DIRS ${TIFF_INCLUDE_DIR} ${ZLIB_INCLUDE_DIRS}
-                 LINK_LIBRARIES ${TIFF_LIBRARIES} ${JPEG_LIBRARIES}
-                                ${ZLIB_LIBRARIES})
+                 LINK_LIBRARIES TIFF::TIFF)
