--- similarity_search/CMakeLists.txt	2021-03-26 12:59:01 +0100
+++ similarity_search/CMakeLists.txt	2021-03-26 16:16:06 +0100
@@ -47,22 +47,22 @@
     if (CXX_COMPILER_VERSION VERSION_LESS 4.7)
         message(FATAL_ERROR "GCC version must be at least 4.7!")
     endif()
-    set (CMAKE_CXX_FLAGS_RELEASE "${WARN_FLAGS} -Ofast -lm -DNDEBUG -std=c++11 -pthread  -DHAVE_CXX0X ${SIMD_FLAGS} -Wl,--no-as-needed -fpic")
-    set (CMAKE_CXX_FLAGS_DEBUG   "${WARN_FLAGS} -ggdb  -lm -DNDEBUG -std=c++11 -pthread  -DHAVE_CXX0X ${SIMD_FLAGS} -Wl,--no-as-needed -fpic")
+    set (CMAKE_CXX_FLAGS_RELEASE "${WARN_FLAGS} -Ofast -lm -DNDEBUG -std=c++11 -pthread  -DHAVE_CXX0X -Wl,--no-as-needed")
+    set (CMAKE_CXX_FLAGS_DEBUG   "${WARN_FLAGS} -ggdb  -lm -DNDEBUG -std=c++11 -pthread  -DHAVE_CXX0X -Wl,--no-as-needed")
 elseif(${CMAKE_CXX_COMPILER_ID} STREQUAL "Intel")
     if (CXX_COMPILER_VERSION VERSION_LESS 14.0.1)
         message(FATAL_ERROR "Intel version must be at least 14.0.1!")
     endif()
-    set (CMAKE_CXX_FLAGS_RELEASE "-Wall -Wunreachable-code -Ofast -DNDEBUG -std=c++11 -DHAVE_CXX0X -pthread ${SIMD_FLAGS} -fpic")
-    set (CMAKE_CXX_FLAGS_DEBUG   "-Wall -Wunreachable-code -ggdb  -DNDEBUG -std=c++11 -DHAVE_CXX0X -pthread ${SIMD_FLAGS} -fpic")
+    set (CMAKE_CXX_FLAGS_RELEASE "-Wall -Wunreachable-code -Ofast -DNDEBUG -std=c++11 -DHAVE_CXX0X -pthread")
+    set (CMAKE_CXX_FLAGS_DEBUG   "-Wall -Wunreachable-code -ggdb  -DNDEBUG -std=c++11 -DHAVE_CXX0X -pthread")
 elseif(${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
     if (CMAKE_SYSTEM_NAME MATCHES Darwin)
         # MACOSX
-        set (CMAKE_CXX_FLAGS_RELEASE "${WARN_FLAGS} -O3 -DNDEBUG -std=c++11 -DHAVE_CXX0X -pthread -fpic ${SIMD_FLAGS}")
-        set (CMAKE_CXX_FLAGS_DEBUG   "${WARN_FLAGS} -ggdb  -DNDEBUG -std=c++11 -DHAVE_CXX0X -pthread -fpic ${SIMD_FLAGS}")
+        set (CMAKE_CXX_FLAGS_RELEASE "${WARN_FLAGS} -O3 -DNDEBUG -std=c++11 -DHAVE_CXX0X -pthread")
+        set (CMAKE_CXX_FLAGS_DEBUG   "${WARN_FLAGS} -ggdb  -DNDEBUG -std=c++11 -DHAVE_CXX0X -pthread")
     else()
-        set (CMAKE_CXX_FLAGS_RELEASE "${WARN_FLAGS} -O3 -DNDEBUG -std=c++11 -DHAVE_CXX0X -pthread ${SIMD_FLAGS} -Wl,--no-as-needed -fpic")
-        set (CMAKE_CXX_FLAGS_DEBUG   "${WARN_FLAGS} -ggdb  -DNDEBUG -std=c++11 -DHAVE_CXX0X -pthread ${SIMD_FLAGS} -Wl,--no-as-needed -fpic")
+        set (CMAKE_CXX_FLAGS_RELEASE "${WARN_FLAGS} -O3 -DNDEBUG -std=c++11 -DHAVE_CXX0X -pthread -Wl,--no-as-needed")
+        set (CMAKE_CXX_FLAGS_DEBUG   "${WARN_FLAGS} -ggdb  -DNDEBUG -std=c++11 -DHAVE_CXX0X -pthread -Wl,--no-as-needed")
     endif()
 elseif(WIN32)
     # TODO how can we add support for later versions? There seems to be no flag with the semantics "version x or higher"
