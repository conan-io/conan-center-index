/*
 * This file is part of flex.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * Neither the name of the University nor the names of its contributors
 * may be used to endorse or promote products derived from this software
 * without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE.
 */

/* TEST scanner.
   Basic non-reentrant scanner.

   Sample Input:
       # this is a comment
       foo = true
       bar = "string value"
       integer = 43
*/
%{
/* #include "config.h" */
%}

%option prefix="test"
%option nounput noyywrap noyylineno warn nodefault noinput

IDENT [[:alnum:]_-]
WS    [[:blank:]]
%%

^{IDENT}+{WS}*={WS}*(true|false){WS}*\r?\n    { return 100;}
^{IDENT}+{WS}*={WS}*\"[^\"\n\r]*\"{WS}*\r?\n  { return 101;}
^{IDENT}+{WS}*={WS}*[[:digit:]]+{WS}*\r?\n    { return 102;}
^{WS}*#.*\r?\n     { }
^{WS}*\r?\n        { }
.|\n  { fprintf(stderr,"Invalid line.\n"); exit(-1);}

%%

#include <stdio.h>

int main(int argc, char **argv);

int main (int argc, char **argv)
{
    FILE *input = NULL;
    if (argc != 2) {
        fprintf(stderr, "Usage: %s <FILE>\n", argv[0]);
        return 1;
    }
    input = fopen(argv[1], "r");
    if (input == NULL) {
        fprintf(stderr, "Failed to open '%s'\n", argv[1]);
        return 1;
    }
    yyin = input;
    yyout = stdout;
    while( yylex() )
    {
    }
    printf("TEST RETURNING OK.\n");
    fclose(input);
    return 0;
}
