From caeea1c4cfae0d8be1e60bcd9e6d0944fc264acf Mon Sep 17 00:00:00 2001
From: Tsche <2440422+Tsche@users.noreply.github.com>
Date: Thu, 2 Mar 2023 16:51:22 +0100
Subject: [PATCH] fix max_line_number_width miscalculation (#40)

---
 src/assert.cpp | 18 ++++++++++++++----
 1 file changed, 14 insertions(+), 4 deletions(-)

diff --git a/src/assert.cpp b/src/assert.cpp
--- a/src/assert.cpp
+++ b/src/assert.cpp
@@ -2024,10 +2024,20 @@ namespace libassert::detail {
             // path preprocessing
             constexpr size_t max_file_length = 50;
             auto [files, longest_file_width] = process_paths(trace, start, end);
-            size_t max_line_number_width = log10(std::max_element(trace.begin(), trace.begin() + end + 1,
-                [](const libassert::detail::stacktrace_entry& a, const libassert::detail::stacktrace_entry& b) {
-                    return std::to_string(a.line).size() < std::to_string(b.line).size();
-                })->line - start + 1 + 1); // +1 for indices starting at 0, +1 again for log
+
+            const auto max_line_number =
+                std::max_element(std::next(trace.begin(), start),
+                                 std::next(trace.begin(), end + 1),
+                                [](const libassert::detail::stacktrace_entry& a,
+                                    const libassert::detail::stacktrace_entry& b) {
+                                return std::to_string(a.line).size() <
+                                        std::to_string(b.line).size();
+                                })
+                ->line;
+
+            // +1 for indices starting at 0, +1 again for log
+            const size_t max_line_number_width = log10(max_line_number + 1 + 1);
+
             size_t max_frame_width = log10(end - start + 1 + 1); // ^
             // do the actual trace
             for(size_t i = start; i <= end; i++) {
-- 
2.39.1

