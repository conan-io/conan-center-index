--- cmake/FindZSTD.cmake
+++ cmake/FindZSTD.cmake
@@ -1,0 +1,9 @@
+include("${cmake_wrapper_SOURCE_DIR}/ConanFindzstd.cmake")
+if(NOT TARGET ZSTD::ZSTD)
+  add_library(ZSTD::ZSTD INTERFACE IMPORTED)
+  if(TARGET zstd::libzstd_shared)
+    target_link_libraries(ZSTD::ZSTD INTERFACE zstd::libzstd_shared)
+  else()
+    target_link_libraries(ZSTD::ZSTD INTERFACE zstd::libzstd_static)
+  endif()
+endif()
--- cmake/FindJBIG.cmake
+++ cmake/FindJBIG.cmake
@@ -1,0 +1,5 @@
+include("${cmake_wrapper_SOURCE_DIR}/ConanFindjbig.cmake")
+if(NOT TARGET JBIG::JBIG)
+  add_library(JBIG::JBIG INTERFACE IMPORTED)
+  target_link_libraries(JBIG::JBIG INTERFACE jbig::jbig)
+endif()
--- cmake/JPEGCodec.cmake
+++ cmake/JPEGCodec.cmake
@@ -24,11 +24,11 @@
-# OF THIS SOFTWARE.
-
-
-# JPEG
 set(JPEG_SUPPORT FALSE)
+if(DEFINED CONAN_LIBJPEG_ROOT)
 find_package(JPEG)
+else()
+find_package(libjpeg-turbo)
+endif()
 option(jpeg "use libjpeg (required for JPEG compression)" ${JPEG_FOUND})
-if (jpeg AND JPEG_FOUND)
+if (jpeg AND (JPEG_FOUND OR libjpeg-turbo_FOUND))
     set(JPEG_SUPPORT TRUE)
 endif()
 
--- libtiff/CMakeLists.txt
+++ libtiff/CMakeLists.txt
@@ -113,7 +113,7 @@
   target_link_libraries(tiff PRIVATE Deflate::Deflate)
 endif()
 if(JPEG_SUPPORT)
-  target_link_libraries(tiff PRIVATE JPEG::JPEG)
+  target_link_libraries(tiff PRIVATE $<TARGET_NAME_IF_EXISTS:JPEG::JPEG> $<TARGET_NAME_IF_EXISTS:libjpeg-turbo::jpeg> $<TARGET_NAME_IF_EXISTS:libjpeg-turbo::jpeg-static>)
   if(JPEG_DUAL_MODE_8_12)
     target_include_directories(tiff PRIVATE ${JPEG12_INCLUDE_DIR})
     target_link_libraries(tiff PRIVATE ${JPEG12_LIBRARIES})
