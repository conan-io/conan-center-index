diff --git a/cmake/JBIGCodec.cmake b/cmake/JBIGCodec.cmake
index a4350028..4cb01552 100644
--- a/cmake/JBIGCodec.cmake
+++ b/cmake/JBIGCodec.cmake
@@ -34,7 +34,7 @@ if(JBIG_FOUND)
     set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES} ${JBIG_INCLUDE_DIRS})
     set(CMAKE_REQUIRED_LIBRARIES_SAVE ${CMAKE_REQUIRED_LIBRARIES})
     set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} ${JBIG_LIBRARIES})
-    check_symbol_exists(jbg_newlen "jbig.h" HAVE_JBG_NEWLEN)
+    set(HAVE_JBG_NEWLEN TRUE)
     set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES_SAVE})
     set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES_SAVE})
 endif()
diff --git a/cmake/JPEGCodec.cmake b/cmake/JPEGCodec.cmake
index 8455a3ec..09fe975a 100644
--- a/cmake/JPEGCodec.cmake
+++ b/cmake/JPEGCodec.cmake
@@ -42,25 +42,7 @@ endif()
 if (JPEG_SUPPORT)
     # Check for jpeg12_read_scanlines() which has been added in libjpeg-turbo 2.2
     # for dual 8/12 bit mode.
-    include(CheckCSourceCompiles)
-    include(CMakePushCheckState)
-    cmake_push_check_state(RESET)
-    set(CMAKE_REQUIRED_INCLUDES "${JPEG_INCLUDE_DIRS}")
-    set(CMAKE_REQUIRED_LIBRARIES "${JPEG_LIBRARIES}")
-    check_c_source_compiles(
-        "
-        #include <stddef.h>
-        #include <stdio.h>
-        #include \"jpeglib.h\"
-        int main()
-        {
-            jpeg_read_scanlines(0,0,0);
-            jpeg12_read_scanlines(0,0,0);
-            return 0;
-        }
-        "
-        HAVE_JPEGTURBO_DUAL_MODE_8_12)
-    cmake_pop_check_state()
+    set(HAVE_JPEGTURBO_DUAL_MODE_8_12 FALSE)
 endif()
 
 if (NOT HAVE_JPEGTURBO_DUAL_MODE_8_12)
diff --git a/cmake/LZMACodec.cmake b/cmake/LZMACodec.cmake
index c51afe82..53ef874e 100644
--- a/cmake/LZMACodec.cmake
+++ b/cmake/LZMACodec.cmake
@@ -28,7 +28,7 @@
 set(LZMA_SUPPORT FALSE)
 find_package(liblzma)
 
-option(lzma "use liblzma (required for LZMA2 compression)" ${LIBLZMA_FOUND})
-if (lzma AND LIBLZMA_FOUND)
+option(lzma "use liblzma (required for LZMA2 compression)" ${liblzma_FOUND})
+if (lzma AND liblzma_FOUND)
     set(LZMA_SUPPORT TRUE)
 endif()
