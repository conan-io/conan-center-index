--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -463,12 +463,10 @@ set(ZIP_SUPPORT ${ZLIB_SUPPORT})
 option(libdeflate "use libdeflate (optional for faster Deflate support, still requires zlib)" ON)
 if (libdeflate)
   set(DEFLATE_FOUND 0)
-  find_path(DEFLATE_INCLUDE_DIR libdeflate.h)
-  set(DEFLATE_NAMES ${DEFLATE_NAMES} deflate)
-  find_library(DEFLATE_LIBRARY NAMES ${DEFLATE_NAMES})
-  if (DEFLATE_INCLUDE_DIR AND DEFLATE_LIBRARY)
+  find_package(libdeflate REQUIRED CONFIG)
+  if (1)
     set(DEFLATE_FOUND 1)
-    set(DEFLATE_LIBRARIES ${DEFLATE_LIBRARY})
+    set(DEFLATE_LIBRARIES $<IF:$<TARGET_EXISTS:libdeflate::libdeflate>,libdeflate::libdeflate,libdeflate::libdeflate_static>)
   endif()
 endif()
 set(LIBDEFLATE_SUPPORT FALSE)
@@ -517,12 +515,10 @@ endif()
 option(jbig "use ISO JBIG compression (requires JBIT-KIT library)" ON)
 if (jbig)
   set(JBIG_FOUND 0)
-  find_path(JBIG_INCLUDE_DIR jbig.h)
-  set(JBIG_NAMES ${JBIG_NAMES} jbig libjbig)
-  find_library(JBIG_LIBRARY NAMES ${JBIG_NAMES})
-  if (JBIG_INCLUDE_DIR AND JBIG_LIBRARY)
+  find_package(jbig REQUIRED CONFIG)
+  if (1)
     set(JBIG_FOUND 1)
-    set(JBIG_LIBRARIES ${JBIG_LIBRARY})
+    set(JBIG_LIBRARIES jbig::jbig)
   endif()
 endif()
 set(JBIG_SUPPORT 0)
@@ -535,7 +531,7 @@ endif()
 
 set(CMAKE_REQUIRED_INCLUDES_SAVE ${CMAKE_REQUIRED_INCLUDES})
 set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES} ${JBIG_INCLUDE_DIR})
-check_symbol_exists(jbg_newlen "jbig.h" HAVE_JBG_NEWLEN)
+set(HAVE_JBG_NEWLEN TRUE)
 set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES_SAVE})
 
 # liblzma2
@@ -551,14 +547,11 @@ endif()
 # libzstd
 option(zstd "use libzstd (required for ZSTD compression)" ON)
 if (zstd)
-    find_path(ZSTD_INCLUDE_DIR zstd.h)
-    find_library(ZSTD_LIBRARY NAMES zstd)
-    if (ZSTD_INCLUDE_DIR AND ZSTD_LIBRARY)
-        check_library_exists ("${ZSTD_LIBRARY}" ZSTD_decompressStream "" ZSTD_RECENT_ENOUGH)
+    find_package(zstd REQUIRED CONFIG)
+    if (1)
+        set(ZSTD_RECENT_ENOUGH TRUE)
         if (ZSTD_RECENT_ENOUGH)
             set(ZSTD_FOUND TRUE)
-            set(ZSTD_LIBRARIES ${ZSTD_LIBRARY})
-            message(STATUS "Found ZSTD library: ${ZSTD_LIBRARY}")
         else ()
             message(WARNING "Found ZSTD library, but not recent enough. Use zstd >= 1.0")
         endif ()
@@ -572,15 +565,13 @@ endif()
 # libwebp
 option(webp "use libwebp (required for WEBP compression)" ON)
 if (webp)
-    find_path(WEBP_INCLUDE_DIR /webp/decode.h)
-    find_library(WEBP_LIBRARY NAMES webp)
+    find_package(WebP REQUIRED CONFIG)
 endif()
 set(WEBP_SUPPORT 0)
-set(WEBP_FOUND FALSE)
-if (WEBP_INCLUDE_DIR AND WEBP_LIBRARY)
+if (WebP_FOUND)
   set(WEBP_SUPPORT 1)
   set(WEBP_FOUND TRUE)
-  set(WEBP_LIBRARIES ${WEBP_LIBRARY})
+  set(WEBP_LIBRARIES WebP::webp)
   message(STATUS "Found WEBP library: ${WEBP_LIBRARY}")
 endif()
 
@@ -715,8 +706,8 @@ endif()
 if(DEFLATE_LIBRARIES)
   list(APPEND TIFF_LIBRARY_DEPS ${DEFLATE_LIBRARIES})
 endif()
-if(JPEG_LIBRARIES)
-  list(APPEND TIFF_LIBRARY_DEPS ${JPEG_LIBRARIES})
+if(JPEG_FOUND)
+  list(APPEND TIFF_LIBRARY_DEPS JPEG::JPEG)
 endif()
 if(JPEG12_LIBRARIES)
   list(APPEND TIFF_LIBRARY_DEPS ${JPEG12_LIBRARIES})
@@ -727,8 +718,8 @@ endif()
 if(LIBLZMA_LIBRARIES)
   list(APPEND TIFF_LIBRARY_DEPS ${LIBLZMA_LIBRARIES})
 endif()
-if(ZSTD_LIBRARIES)
-  list(APPEND TIFF_LIBRARY_DEPS ${ZSTD_LIBRARIES})
+if(ZSTD_FOUND)
+  list(APPEND TIFF_LIBRARY_DEPS $<IF:$<TARGET_EXISTS:zstd::libzstd_shared>,zstd::libzstd_shared,zstd::libzstd_static>)
 endif()
 if(WEBP_LIBRARIES)
   list(APPEND TIFF_LIBRARY_DEPS ${WEBP_LIBRARIES})
