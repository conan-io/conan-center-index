
--- cmake/CMakeLists.txt
+++ cmake/CMakeLists.txt
@@ -180,7 +180,7 @@
   configure_file(extract_includes.bat.in extract_includes.bat)

   # Suppress linker warnings about files with no symbols defined.
-  set(CMAKE_STATIC_LINKER_FLAGS /ignore:4221)
-
+  # Bincrafters: https://github.com/protocolbuffers/protobuf/issues/6098
+  set(CMAKE_STATIC_LINKER_FLAGS "${CMAKE_STATIC_LINKER_FLAGS} /ignore:4221")
   # Configure Resource Compiler
   enable_language(RC)
@@ -212,9 +212,10 @@
 if (protobuf_UNICODE)
   add_definitions(-DUNICODE -D_UNICODE)
 endif (protobuf_UNICODE)
-
+if(0)
 include(libprotobuf-lite.cmake)
 include(libprotobuf.cmake)
+endif()
 if (protobuf_BUILD_PROTOC_BINARIES)
   include(libprotoc.cmake)
   include(protoc.cmake)
--- cmake/install.cmake
+++ cmake/install.cmake
@@ -1,5 +1,5 @@
 include(GNUInstallDirs)
-
+if(0)
 configure_file(${CMAKE_CURRENT_SOURCE_DIR}/protobuf.pc.cmake
                ${CMAKE_CURRENT_BINARY_DIR}/protobuf.pc @ONLY)
 configure_file(${CMAKE_CURRENT_SOURCE_DIR}/protobuf-lite.pc.cmake
@@ -27,7 +27,7 @@
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT ${_library}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT ${_library})
 endforeach()
-
+endif()
 if (protobuf_BUILD_PROTOC_BINARIES)
   install(TARGETS protoc EXPORT protobuf-targets
     RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT protoc)
@@ -39,7 +39,7 @@
       PROPERTY INSTALL_RPATH "@loader_path/../lib")
   endif()
 endif (protobuf_BUILD_PROTOC_BINARIES)
-
+if(0)
 install(FILES ${CMAKE_CURRENT_BINARY_DIR}/protobuf.pc ${CMAKE_CURRENT_BINARY_DIR}/protobuf-lite.pc DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")

 file(STRINGS extract_includes.bat.in _extract_strings
@@ -108,16 +108,16 @@
   set(CMAKE_INSTALL_CMAKEDIR "cmake" CACHE STRING "${_cmakedir_desc}")
 endif()
 mark_as_advanced(CMAKE_INSTALL_CMAKEDIR)
-
+endif()
 configure_file(protobuf-config.cmake.in
-  ${CMAKE_INSTALL_CMAKEDIR}/protobuf-config.cmake @ONLY)
-configure_file(protobuf-config-version.cmake.in
-  ${CMAKE_INSTALL_CMAKEDIR}/protobuf-config-version.cmake @ONLY)
+  protoc-generate.cmake @ONLY)
+#configure_file(protobuf-config-version.cmake.in
+#  ${CMAKE_INSTALL_CMAKEDIR}/protobuf-config-version.cmake @ONLY)
 configure_file(protobuf-module.cmake.in
-  ${CMAKE_INSTALL_CMAKEDIR}/protobuf-module.cmake @ONLY)
+  protoc-module.cmake @ONLY)
 configure_file(protobuf-options.cmake
-  ${CMAKE_INSTALL_CMAKEDIR}/protobuf-options.cmake @ONLY)
+  protoc-options.cmake @ONLY)
+install(FILES "${CMAKE_CURRENT_BINARY_DIR}/protoc-generate.cmake" "${CMAKE_CURRENT_BINARY_DIR}/protoc-module.cmake" "${CMAKE_CURRENT_BINARY_DIR}/protoc-options.cmake" DESTINATION "${CMAKE_INSTALL_CMAKEDIR}")
-
-# Allows the build directory to be used as a find directory.
+if(0)

 if (protobuf_BUILD_PROTOC_BINARIES)
@@ -148,3 +148,4 @@
   install(DIRECTORY ../examples/ DESTINATION examples
     COMPONENT protobuf-examples)
 endif()
+endif()
--- cmake/libprotoc.cmake
+++ cmake/libprotoc.cmake
@@ -167,7 +167,7 @@

 add_library(libprotoc ${protobuf_SHARED_OR_STATIC}
   ${libprotoc_files} ${libprotoc_headers} ${libprotoc_rc_files})
-target_link_libraries(libprotoc libprotobuf)
+target_link_libraries(libprotoc CONAN_PKG::protobuf)
 if(MSVC AND protobuf_BUILD_SHARED_LIBS)
   target_compile_definitions(libprotoc
     PUBLIC  PROTOBUF_USE_DLLS
--- cmake/protobuf-config.cmake.in
+++ cmake/protobuf-config.cmake.in
@@ -1,11 +1,5 @@
 # User options
-include("${CMAKE_CURRENT_LIST_DIR}/protobuf-options.cmake")
-
-# Depend packages
-@_protobuf_FIND_ZLIB@
-
-# Imported targets
-include("${CMAKE_CURRENT_LIST_DIR}/protobuf-targets.cmake")
+include("${CMAKE_CURRENT_LIST_DIR}/protoc-options.cmake")

 function(protobuf_generate)
   include(CMakeParseArguments)
@@ -104,9 +98,9 @@

     add_custom_command(
       OUTPUT ${_generated_srcs}
-      COMMAND  protobuf::protoc
+      COMMAND  protoc
       ARGS --${protobuf_generate_LANGUAGE}_out ${_dll_export_decl}${protobuf_generate_PROTOC_OUT_DIR} ${_protobuf_include_path} ${_abs_file}
-      DEPENDS ${_abs_file} protobuf::protoc
+      DEPENDS ${_abs_file}
       COMMENT "Running ${protobuf_generate_LANGUAGE} protocol buffer compiler on ${_proto}"
       VERBATIM )
   endforeach()
@@ -123,5 +117,5 @@

 # CMake FindProtobuf module compatible file
 if(protobuf_MODULE_COMPATIBLE)
-  include("${CMAKE_CURRENT_LIST_DIR}/protobuf-module.cmake")
+  include("${CMAKE_CURRENT_LIST_DIR}/protoc-module.cmake")
 endif()
--- cmake/protobuf-module.cmake.in
+++ cmake/protobuf-module.cmake.in
@@ -119,7 +119,7 @@
 #
 # Main.
 #
-
+if(0)
 # By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc
 # for each directory where a proto file is referenced.
 if(NOT DEFINED PROTOBUF_GENERATE_CPP_APPEND_PATH)
@@ -187,3 +187,4 @@
     string(TOUPPER ${Camel} UPPER)
     set(${UPPER} ${${Camel}})
 endforeach()
+endif()
--- cmake/protoc.cmake
+++ cmake/protoc.cmake
@@ -9,7 +9,7 @@
 endif()

 add_executable(protoc ${protoc_files} ${protoc_rc_files})
-target_link_libraries(protoc libprotoc libprotobuf)
+target_link_libraries(protoc libprotoc)
 add_executable(protobuf::protoc ALIAS protoc)

 set_target_properties(protoc PROPERTIES
