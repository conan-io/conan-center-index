diff --git a/cmake/config-ix.cmake b/cmake/config-ix.cmake
index 90e5d327c75..2bc924b79e7 100644
--- a/cmake/config-ix.cmake
+++ b/cmake/config-ix.cmake
@@ -5,6 +5,7 @@ endif()
 
 include(CheckIncludeFile)
 include(CheckLibraryExists)
+include(CMakePushCheckState)
 include(CheckSymbolExists)
 include(CheckFunctionExists)
 include(CheckStructHasMember)
@@ -56,7 +57,15 @@ check_include_file(sys/types.h HAVE_SYS_TYPES_H)
 check_include_file(termios.h HAVE_TERMIOS_H)
 check_include_file(unistd.h HAVE_UNISTD_H)
 check_include_file(valgrind/valgrind.h HAVE_VALGRIND_VALGRIND_H)
-check_include_file(zlib.h HAVE_ZLIB_H)
+
+if(LLVM_ENABLE_ZLIB)
+    find_package(ZLIB REQUIRED)
+    cmake_push_check_state()
+    list(APPEND CMAKE_REQUIRED_INCLUDES ${ZLIB_INCLUDE_DIRS})
+    check_include_file(zlib.h HAVE_ZLIB_H)
+    cmake_pop_check_state()
+endif()
+
 check_include_file(fenv.h HAVE_FENV_H)
 check_symbol_exists(FE_ALL_EXCEPT "fenv.h" HAVE_DECL_FE_ALL_EXCEPT)
 check_symbol_exists(FE_INEXACT "fenv.h" HAVE_DECL_FE_INEXACT)
@@ -118,17 +127,12 @@ endif()
 # Don't look for these libraries if we're using MSan, since uninstrumented third
 # party code may call MSan interceptors like strlen, leading to false positives.
 if(NOT LLVM_USE_SANITIZER MATCHES "Memory.*")
-  set(HAVE_LIBZ 0)
   if(LLVM_ENABLE_ZLIB)
-    foreach(library z zlib_static zlib)
-      string(TOUPPER ${library} library_suffix)
-      check_library_exists(${library} compress2 "" HAVE_LIBZ_${library_suffix})
-      if(HAVE_LIBZ_${library_suffix})
-        set(HAVE_LIBZ 1)
-        set(ZLIB_LIBRARIES "${library}")
-        break()
-      endif()
-    endforeach()
+    cmake_push_check_state()
+    list(APPEND CMAKE_REQUIRED_INCLUDES ${ZLIB_INCLUDE_DIRS})
+    list(APPEND CMAKE_REQUIRED_LIBRARIES ${ZLIB_LIBRARIES})
+    check_symbol_exists(compress2 zlib.h HAVE_LIBZ)
+    cmake_pop_check_state()
   endif()
 
   # Don't look for these libraries on Windows.
@@ -517,7 +521,7 @@ else( LLVM_ENABLE_THREADS )
   message(STATUS "Threads disabled.")
 endif()
 
-if (LLVM_ENABLE_ZLIB )
+if (LLVM_ENABLE_ZLIB STREQUAL "FORCE_ON")
   # Check if zlib is available in the system.
   if ( NOT HAVE_ZLIB_H OR NOT HAVE_LIBZ )
     set(LLVM_ENABLE_ZLIB 0)
