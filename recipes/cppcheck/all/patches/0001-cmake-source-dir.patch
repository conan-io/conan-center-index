diff --git a/oss-fuzz/CMakeLists.txt b/oss-fuzz/CMakeLists.txt
index b9a3e195ea8cf64fd9c078c5102d82a25b2435ca..41bcdccf4e536f08aa5e450320a715d7df8b5b84 100644
--- a/oss-fuzz/CMakeLists.txt
+++ b/oss-fuzz/CMakeLists.txt
@@ -5,7 +5,7 @@ if (ENABLE_OSS_FUZZ AND CMAKE_CXX_COMPILER_ID MATCHES "Clang")
             $<TARGET_OBJECTS:simplecpp_objs_sanitized>
             $<TARGET_OBJECTS:tinyxml_objs_sanitized>
             $<TARGET_OBJECTS:lib_objs_sanitized>)
-    target_include_directories(fuzz-client PRIVATE ${CMAKE_SOURCE_DIR}/lib ${CMAKE_SOURCE_DIR}/externals/simplecpp ${CMAKE_SOURCE_DIR}/externals/tinyxml ${CMAKE_SOURCE_DIR}/externals)
+    target_include_directories(fuzz-client PRIVATE ${PROJECT_SOURCE_DIR}/lib ${PROJECT_SOURCE_DIR}/externals/simplecpp ${PROJECT_SOURCE_DIR}/externals/tinyxml ${PROJECT_SOURCE_DIR}/externals)
     target_compile_options(fuzz-client PRIVATE -fsanitize=fuzzer)
     # requires CMake >= 3.13
     #target_link_options(fuzz-client PRIVATE -fsanitize=address -fsanitize=fuzzer)
diff --git a/tools/CMakeLists.txt b/tools/CMakeLists.txt
index 303b8d55f77cd36bc597ddfc406bc5fe7c2992e5..e25948fa14664d9a8b758586a75369ecde111ddb 100644
--- a/tools/CMakeLists.txt
+++ b/tools/CMakeLists.txt
@@ -4,23 +4,23 @@ foreach(file ${srcs_lib})
         set(src "${CMAKE_BINARY_DIR}/lib/build/mc_${file}")
         set_source_files_properties(${src} PROPERTIES GENERATED TRUE)
     else()
-        set(src "${CMAKE_SOURCE_DIR}/lib/${file}")
+        set(src "${PROJECT_SOURCE_DIR}/lib/${file}")
     endif()
     set(srcs_tools ${srcs_tools} ${src})
 endforeach()
 
 add_executable(dmake EXCLUDE_FROM_ALL
         dmake.cpp
-        ${CMAKE_SOURCE_DIR}/cli/filelister.cpp
+        ${PROJECT_SOURCE_DIR}/cli/filelister.cpp
         ${srcs_tools}
-        ${CMAKE_SOURCE_DIR}/lib/utils.cpp
-        ${CMAKE_SOURCE_DIR}/externals/simplecpp/simplecpp
+        ${PROJECT_SOURCE_DIR}/lib/utils.cpp
+        ${PROJECT_SOURCE_DIR}/externals/simplecpp/simplecpp
 )
-target_include_directories(dmake PRIVATE ${CMAKE_SOURCE_DIR}/cli ${CMAKE_SOURCE_DIR}/lib ${CMAKE_SOURCE_DIR}/externals/simplecpp)
+target_include_directories(dmake PRIVATE ${PROJECT_SOURCE_DIR}/cli ${PROJECT_SOURCE_DIR}/lib ${PROJECT_SOURCE_DIR}/externals/simplecpp)
 if (WIN32 AND NOT BORLAND)
     target_link_libraries(dmake Shlwapi.lib)
 endif()
 
 add_custom_target(run-dmake $<TARGET_FILE:dmake>
-        WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
+        WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
         DEPENDS dmake)
\ No newline at end of file
diff --git a/cmake/clang_tidy.cmake b/cmake/clang_tidy.cmake
index 21b71ffeee066c37fbb21232aa558b026b7159b7..2bc45ab826719a56ed8d90ea62cb05a00e58b140 100644
--- a/cmake/clang_tidy.cmake
+++ b/cmake/clang_tidy.cmake
@@ -1,12 +1,12 @@
 find_program(CLANG_TIDY NAMES clang-tidy clang-tidy-10 clang-tidy-9 clang-tidy-8)
 message(STATUS "CLANG_TIDY=${CLANG_TIDY}")
 if (CLANG_TIDY)
-    set(CLANG_TIDY_SRCS ${CMAKE_SOURCE_DIR}/cli/*.cpp ${CMAKE_SOURCE_DIR}/lib/*.cpp)
+    set(CLANG_TIDY_SRCS ${PROJECT_SOURCE_DIR}/cli/*.cpp ${PROJECT_SOURCE_DIR}/lib/*.cpp)
     if (BUILD_GUI)
-        list(APPEND CLANG_TIDY_SRCS ${CMAKE_SOURCE_DIR}/gui/*.cpp)
+        list(APPEND CLANG_TIDY_SRCS ${PROJECT_SOURCE_DIR}/gui/*.cpp)
     endif()
     if (BUILD_TESTS)
-        list(APPEND CLANG_TIDY_SRCS ${CMAKE_SOURCE_DIR}/test/*.cpp)
+        list(APPEND CLANG_TIDY_SRCS ${PROJECT_SOURCE_DIR}/test/*.cpp)
     endif()
 
     add_custom_target(run-clang-tidy ${CLANG_TIDY} -p=${CMAKE_BINARY_DIR} ${CLANG_TIDY_SRCS})
