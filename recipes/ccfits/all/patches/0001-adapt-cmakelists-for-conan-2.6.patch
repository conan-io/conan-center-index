--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,8 +1,6 @@
+CMAKE_MINIMUM_REQUIRED(VERSION 3.8)
 PROJECT(CCfits)
-CMAKE_MINIMUM_REQUIRED(VERSION 3.1)
 
-set (CMAKE_CXX_STANDARD_REQUIRED on)
-set (CMAKE_CXX_STANDARD 11)
 
 # Allow the developer to select whether to build Dynamic or Static libraries
 OPTION (BUILD_SHARED_LIBS "Build Shared Libraries" OFF)
@@ -25,8 +23,7 @@ ENDIF()
 
 #add_subdirectory (src)
 
-find_package(CFITSIO REQUIRED)
-INCLUDE_DIRECTORIES(${CFITSIO_INCLUDE_DIR})
+find_package(cfitsio REQUIRED CONFIG)
 
 SET (LIB_TYPE STATIC)
 IF (BUILD_SHARED_LIBS)
@@ -58,15 +55,17 @@ SET(SRC_FILES
 )
 
 ADD_LIBRARY(${LIB_NAME} ${LIB_TYPE} ${H_FILES} ${SRC_FILES})
-TARGET_LINK_LIBRARIES(${LIB_NAME} ${CFITSIO_LIBRARY}
+TARGET_LINK_LIBRARIES(${LIB_NAME} cfitsio::cfitsio
 )
+TARGET_COMPILE_FEATURES(${LIB_NAME} PRIVATE cxx_std_11)
 
 SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
     VERSION ${${PROJECT_NAME}_VERSION}
 )
-install(TARGETS ${LIB_NAME} DESTINATION ${LIB_DESTINATION})
+install(TARGETS ${LIB_NAME} RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
 install(FILES ${H_FILES} DESTINATION ${INCLUDE_INSTALL_DIR})
 
+if(0)
 ENABLE_TESTING()
 
 SET(TEST_FILES file1.pha)
@@ -75,3 +74,4 @@ ADD_EXECUTABLE(cookbook cookbook.cxx)
 INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR} "${CMAKE_SOURCE_DIR}/../")
 TARGET_LINK_LIBRARIES(cookbook ${LIB_NAME} ${CFITSIO_LIBRARY})
 ADD_TEST(cookbook cookbook)
+endif()
