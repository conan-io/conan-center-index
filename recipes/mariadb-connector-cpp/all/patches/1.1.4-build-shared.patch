--- a/CMakeLists.txt	2024-07-26 18:25:43.150534700 +0500
+++ b/CMakeLists.txt	2024-07-26 18:55:37.270380025 +0500
@@ -19,7 +19,7 @@
 
 IF(APPLE)
   # productbuild packaging stuff 
-  CMAKE_MINIMUM_REQUIRED(VERSION 3.23)
+  CMAKE_MINIMUM_REQUIRED(VERSION 3.1)
 ELSE()
   CMAKE_MINIMUM_REQUIRED(VERSION 3.1)
 ENDIF()
@@ -47,6 +47,15 @@
   SET(CMAKE_C_STANDARD 99)
 ENDIF()
 
+FIND_PACKAGE(mariadb-connector-c REQUIRED)
+
+if(BUILD_SHARED_LIBS)
+  set(MARIADB_LIBRARY_TYPE SHARED)
+else()
+  set(MARIADB_LIBRARY_TYPE STATIC)
+endif(BUILD_SHARED_LIBS)
+
+
 SET(CMAKE_CXX_STANDARD 11)
 SET(CMAKE_CXX_STANDARD_REQUIRED ON)
 
@@ -62,7 +71,6 @@
 SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake)
 
 SET(LIBRARY_NAME "mariadbcpp")
-SET(STATIC_LIBRARY_NAME "${LIBRARY_NAME}-static")
 
 CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/Version.h.in
                ${CMAKE_SOURCE_DIR}/src/Version.h)
@@ -565,7 +573,7 @@
                                              ShLwApi
                 DOC "Path to ShLwApi.Lib. Usually found in $ENV{programfiles\(x86\)}\\Windows Kits\\10\\Lib")
     ELSE()
-      FIND_LIBRARY(CCLIB libmariadb.so)
+      SET(CCLIB mariadb-connector-c::mariadb-connector-c)
       IF (${CCLIB} STREQUAL "CCLIB-NOTFOUND")
         # It won't be found by linker either unless user does some magic before build, so we actually could stop here with error
         MESSAGE(STATUS "C/C library has not been found")
@@ -580,6 +588,7 @@
                       /usr/local/include/mariadb
                       /usr/local/include/mysql)
                 #PATH_SUFFIXES mariadb mysql)
+      FIND_FILE(CCHEADER NAMES "mysql.h")
       IF (${CCHEADER} STREQUAL "CCHEADER-NOTFOUND")
         # Again should probably stop
         MESSAGE(STATUS "C/C headers have not been found")
@@ -607,15 +616,17 @@
 SET(${LIBRARY_NAME}_OBJECTS $<TARGET_OBJECTS:${LIBRARY_NAME}_obj>)
 
 IF(WIN32 AND NOT MINGW)
-  ADD_LIBRARY(${LIBRARY_NAME} SHARED ${CMAKE_SOURCE_DIR}/src/maconncpp.rc ${${LIBRARY_NAME}_OBJECTS} ${CMAKE_SOURCE_DIR}/src/maconncpp.def)
-  ADD_LIBRARY(${STATIC_LIBRARY_NAME} STATIC ${${LIBRARY_NAME}_OBJECTS} ${CMAKE_SOURCE_DIR}/src/maconncpp.rc)
-
-  TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME}_obj PRIVATE "MARIADB_EXPORTED=__declspec(dllexport)")
+  if (MARIADB_LIBRARY_TYPE STREQUAL "SHARED")
+    ADD_LIBRARY(${LIBRARY_NAME} ${MARIADB_LIBRARY_TYPE} ${CMAKE_SOURCE_DIR}/src/maconncpp.rc ${${LIBRARY_NAME}_OBJECTS} ${CMAKE_SOURCE_DIR}/src/maconncpp.def)
 
-  TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} PRIVATE "MARIADB_EXPORTED=__declspec(dllexport)")
-  TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} INTERFACE "MARIADB_EXPORTED=__declspec(dllimport)")
+    TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME}_obj PRIVATE "MARIADB_EXPORTED=__declspec(dllexport)")
 
-  TARGET_COMPILE_DEFINITIONS(${STATIC_LIBRARY_NAME} PUBLIC MARIADB_STATIC_LINK)
+    TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} PRIVATE "MARIADB_EXPORTED=__declspec(dllexport)")
+    TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} INTERFACE "MARIADB_EXPORTED=__declspec(dllimport)")
+  else()
+    ADD_LIBRARY(${LIBRARY_NAME} ${MARIADB_LIBRARY_TYPE} ${${LIBRARY_NAME}_OBJECTS} ${CMAKE_SOURCE_DIR}/src/maconncpp.rc)
+    TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} PUBLIC MARIADB_STATIC_LINK)
+  endif()
 ELSE()
   # Xcode doesn't support targets that have only object files,
   # so let's add an empty file to keep Xcode happy
@@ -624,36 +635,39 @@
     SET(EMPTY_FILE ${CMAKE_BINARY_DIR}/empty.cpp)
   ENDIF()
   #  MESSAGE(STATUS "Version script: ${CMAKE_SOURCE_DIR}/src/maconncpp.def")
-  ADD_LIBRARY(${LIBRARY_NAME} SHARED ${${LIBRARY_NAME}_OBJECTS} ${EMPTY_FILE})
-  ADD_LIBRARY(${STATIC_LIBRARY_NAME} STATIC ${${LIBRARY_NAME}_OBJECTS} ${EMPTY_FILE})
+  ADD_LIBRARY(${LIBRARY_NAME} ${MARIADB_LIBRARY_TYPE} ${${LIBRARY_NAME}_OBJECTS} ${EMPTY_FILE})
 
   IF(APPLE)
-    SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES LINK_FLAGS "-Wl"
-                                     INSTALL_RPATH_USE_LINK_PATH 0
-                                     BUILD_WITH_INSTALL_RPATH 1
-                                     XCODE_ATTRIBUTE_ENABLE_HARDENED_RUNTIME YES
-                                     XCODE_ATTRIBUTE_OTHER_CODE_SIGN_FLAGS "--timestamp -f"
-                                     INSTALL_RPATH "${MAODBC_INSTALL_RPATH}")
-    SET_TARGET_PROPERTIES(${STATIC_LIBRARY_NAME} PROPERTIES 
-                                     INSTALL_RPATH_USE_LINK_PATH 0
-                                     BUILD_WITH_INSTALL_RPATH 1
-                                     XCODE_ATTRIBUTE_ENABLE_HARDENED_RUNTIME YES
-                                     XCODE_ATTRIBUTE_OTHER_CODE_SIGN_FLAGS "--timestamp -f"
-                                     INSTALL_RPATH "${MAODBC_INSTALL_RPATH}")
+    if (MARIADB_LIBRARY_TYPE STREQUAL "SHARED")
+      SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES LINK_FLAGS "-Wl"
+                                      INSTALL_RPATH_USE_LINK_PATH 0
+                                      BUILD_WITH_INSTALL_RPATH 1
+                                      XCODE_ATTRIBUTE_ENABLE_HARDENED_RUNTIME YES
+                                      XCODE_ATTRIBUTE_OTHER_CODE_SIGN_FLAGS "--timestamp -f"
+                                      INSTALL_RPATH "${MAODBC_INSTALL_RPATH}")
+    else()
+      SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES 
+                                      INSTALL_RPATH_USE_LINK_PATH 0
+                                      BUILD_WITH_INSTALL_RPATH 1
+                                      XCODE_ATTRIBUTE_ENABLE_HARDENED_RUNTIME YES
+                                      XCODE_ATTRIBUTE_OTHER_CODE_SIGN_FLAGS "--timestamp -f"
+                                      INSTALL_RPATH "${MAODBC_INSTALL_RPATH}")
+    endif()
     IF(WITH_SIGNCODE)
       SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "Developer ID Application: ${DEVELOPER_ID}")
-      SET_TARGET_PROPERTIES(${STATIC_LIBRARY_NAME} PROPERTIES XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "Developer ID Application: ${DEVELOPER_ID}")
     ELSE()
       SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "")
-      SET_TARGET_PROPERTIES(${STATIC_LIBRARY_NAME} PROPERTIES XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "")
     ENDIF()
   ELSE()
 #    SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES LINK_FLAGS "-Wl,--version-script=${CMAKE_SOURCE_DIR}/src/maconncpp.def")
   ENDIF()
 ENDIF()
 
-TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${MARIADB_CLIENT_TARGET_NAME} ${PLATFORM_DEPENDENCIES})
-TARGET_LINK_LIBRARIES(${STATIC_LIBRARY_NAME} mariadbclient)
+if (MARIADB_LIBRARY_TYPE STREQUAL "SHARED")
+  TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${MARIADB_CLIENT_TARGET_NAME} ${PLATFORM_DEPENDENCIES})
+else()
+  TARGET_LINK_LIBRARIES(${LIBRARY_NAME} mariadbclient)
+endif()
 
 # MINGW Specific includes and linking
 IF(MINGW)
@@ -676,7 +690,6 @@
   
   IF(MARIADB_CONNECTORC_LIB)
     TARGET_LINK_DIRECTORIES(${LIBRARY_NAME} PUBLIC ${MARIADB_CONNECTORC_LIB})
-    TARGET_LINK_DIRECTORIES(${STATIC_LIBRARY_NAME} PUBLIC ${MARIADB_CONNECTORC_LIB})
     MESSAGE(STATUS "Found MariaDB Connector/C libraries - ${MARIADB_CONNECTORC_LIB}")
   ELSE()
     MESSAGE(WARNING "Did not find MariaDB Connector/C libraries")
@@ -685,7 +698,9 @@
 ENDIF()
 
 INCLUDE(symlink)
-CREATE_SYMLINK(lib${LIBRARY_NAME}${CMAKE_STATIC_LIBRARY_SUFFIX} ${STATIC_LIBRARY_NAME} ${INSTALL_LIBDIR})
+if (MARIADB_LIBRARY_TYPE STREQUAL "STATIC")
+  CREATE_SYMLINK(lib${LIBRARY_NAME}${CMAKE_STATIC_LIBRARY_SUFFIX} ${LIBRARY_NAME} ${INSTALL_LIBDIR})
+endif()
 
 ADD_DEPENDENCIES(${LIBRARY_NAME} DEPENDENCIES_FOR_PACKAGE)
 
@@ -709,13 +724,16 @@
     #MESSAGE(STATUS "Configuring to generate PKG package")
     #ADD_SUBDIRECTORY(osxinstall)
   ENDIF()
-  INSTALL(TARGETS ${LIBRARY_NAME}
-          LIBRARY DESTINATION ${INSTALL_LIBDIR}
-          COMPONENT SharedLibraries)
-  INSTALL(TARGETS
-          ${STATIC_LIBRARY_NAME}
-          ARCHIVE DESTINATION ${INSTALL_LIBDIR}
-          COMPONENT Development)
+  if (MARIADB_LIBRARY_TYPE STREQUAL "SHARED")
+    INSTALL(TARGETS ${LIBRARY_NAME}
+            LIBRARY DESTINATION ${INSTALL_LIBDIR}
+            COMPONENT SharedLibraries)
+  else()
+    INSTALL(TARGETS
+            ${LIBRARY_NAME}
+            ARCHIVE DESTINATION ${INSTALL_LIBDIR}
+            COMPONENT Development)
+  endif()
 
   MESSAGE(STATUS "Documentation installed to ${INSTALL_DOCDIR}")
   MESSAGE(STATUS "License file installed to ${INSTALL_LICENSEDIR}")
