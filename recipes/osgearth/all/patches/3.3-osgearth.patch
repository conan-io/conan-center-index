diff --git a/src/osgEarthDrivers/lerc/CMakeLists.txt b/src/osgEarthDrivers/lerc/CMakeLists.txt
--- a/src/osgEarthDrivers/lerc/CMakeLists.txt	(revision 6b5fb806a9190f7425c32db65d3ea905a55a9c16)
+++ b/src/osgEarthDrivers/lerc/CMakeLists.txt	(date 1653145387687)
@@ -1,17 +1,11 @@
-INCLUDE_DIRECTORIES( ../../third_party/lerc/include )
+INCLUDE_DIRECTORIES( ${lerc_INCLUDE_DIR} )

 SET(TARGET_SRC
     ReaderWriterLERC.cpp
-    ../../third_party/lerc/src/LercLib/BitMask.cpp
-    ../../third_party/lerc/src/LercLib/BitStuffer2.cpp
-    ../../third_party/lerc/src/LercLib/Huffman.cpp
-    ../../third_party/lerc/src/LercLib/Lerc.cpp
-    ../../third_party/lerc/src/LercLib/Lerc_c_api_impl.cpp
-    ../../third_party/lerc/src/LercLib/Lerc2.cpp
-    ../../third_party/lerc/src/LercLib/RLE.cpp
-    ../../third_party/lerc/src/LercLib/Lerc1Decode/BitStuffer.cpp
-    ../../third_party/lerc/src/LercLib/Lerc1Decode/CntZImage.cpp
 )
+
+
+SET(TARGET_LIBRARIES_VARS lerc_LIBRARIES)

 #### end var setup  ###
 SETUP_PLUGIN(lerc)
\ No newline at end of file
diff --git a/src/osgEarth/CMakeLists.txt b/src/osgEarth/CMakeLists.txt
--- a/src/osgEarth/CMakeLists.txt	(revision 6b5fb806a9190f7425c32db65d3ea905a55a9c16)
+++ b/src/osgEarth/CMakeLists.txt	(date 1652372070543)
@@ -503,7 +503,7 @@


 SET(VERSION_GIT_SOURCE "")
-find_package(git)
+find_package(Git)
 if (GIT_FOUND)
     option(OSGEARTH_EMBED_GIT_SHA "Encode the SHA in the Version header code" OFF)
     if(OSGEARTH_EMBED_GIT_SHA)
diff --git a/src/osgEarthProcedural/GroundCoverLayer.cpp b/src/osgEarthProcedural/GroundCoverLayer.cpp
--- a/src/osgEarthProcedural/GroundCoverLayer.cpp	(revision 6b5fb806a9190f7425c32db65d3ea905a55a9c16)
+++ b/src/osgEarthProcedural/GroundCoverLayer.cpp	(date 1652372070576)
@@ -1302,7 +1302,8 @@
 void
 GroundCoverLayer::Renderer::releaseGLObjects(osg::State* state) const
 {
-    _cameraState.forEach(CameraStateRGLO(state));
+    CameraStateRGLO state_rglo(state);
+    _cameraState.forEach(state_rglo);

     if (_texArena.valid())
     {
diff --git a/src/osgEarthProcedural/CMakeLists.txt b/src/osgEarthProcedural/CMakeLists.txt
--- a/src/osgEarthProcedural/CMakeLists.txt	(revision 6b5fb806a9190f7425c32db65d3ea905a55a9c16)
+++ b/src/osgEarthProcedural/CMakeLists.txt	(date 1652372099890)
@@ -107,4 +107,5 @@
 # Place it in the NodeKits solution folder
 set_property( TARGET ${LIB_NAME} PROPERTY FOLDER "NodeKits" )

-INCLUDE(ModuleInstall OPTIONAL)
\ No newline at end of file
+INCLUDE(ModuleInstall OPTIONAL)
+INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/source_subfolder/src/osgEarth)
\ No newline at end of file
diff --git a/src/osgEarthDrivers/cache_leveldb/CMakeLists.txt b/src/osgEarthDrivers/cache_leveldb/CMakeLists.txt
--- a/src/osgEarthDrivers/cache_leveldb/CMakeLists.txt	(revision 6b5fb806a9190f7425c32db65d3ea905a55a9c16)
+++ b/src/osgEarthDrivers/cache_leveldb/CMakeLists.txt	(date 1652372099900)
@@ -1,5 +1,3 @@
-FIND_PACKAGE(LevelDB)
-
 IF(LEVELDB_FOUND)

     INCLUDE_DIRECTORIES( ${LEVELDB_INCLUDE_DIR} )
diff --git a/CMakeModules/OsgEarthMacroUtils.cmake b/CMakeModules/OsgEarthMacroUtils.cmake
--- a/CMakeModules/OsgEarthMacroUtils.cmake	(revision 6b5fb806a9190f7425c32db65d3ea905a55a9c16)
+++ b/CMakeModules/OsgEarthMacroUtils.cmake	(date 1652372099916)
@@ -512,7 +512,7 @@

 	# generate the build-time script that will create out cpp file with inline shaders:
 	configure_file(
-		"${CMAKE_SOURCE_DIR}/CMakeModules/ConfigureShaders.cmake.in"
+		"${CMAKE_SOURCE_DIR}/source_subfolder/CMakeModules/ConfigureShaders.cmake.in"
 		"${CMAKE_CURRENT_BINARY_DIR}/ConfigureShaders.cmake"
 		@ONLY)

@@ -525,7 +525,7 @@
 		DEPENDS
 			${GLSL_FILES}
 			"${TEMPLATE_FILE}"
-			"${CMAKE_SOURCE_DIR}/CMakeModules/ConfigureShaders.cmake.in" )
+			"${CMAKE_SOURCE_DIR}/source_subfolder/CMakeModules/ConfigureShaders.cmake.in" )

 endmacro(configure_shaders)

diff --git a/src/osgEarthDrivers/gltf/CMakeLists.txt b/src/osgEarthDrivers/gltf/CMakeLists.txt
--- a/src/osgEarthDrivers/gltf/CMakeLists.txt	(revision 6b5fb806a9190f7425c32db65d3ea905a55a9c16)
+++ b/src/osgEarthDrivers/gltf/CMakeLists.txt	(date 1653145502470)
@@ -11,7 +11,7 @@

 INCLUDE_DIRECTORIES(
     ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/tinygltf 
-    ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/rapidjson/include/rapidjson
+    ${RapidJSON_INCLUDE_DIR}/rapidjson
 )

 IF(draco_FOUND)
diff --git a/src/osgEarthDrivers/fastdxt/dxt.cpp b/src/osgEarthDrivers/fastdxt/dxt.cpp
--- a/src/osgEarthDrivers/fastdxt/dxt.cpp	(revision 6b5fb806a9190f7425c32db65d3ea905a55a9c16)
+++ b/src/osgEarthDrivers/fastdxt/dxt.cpp	(date 1652372326143)
@@ -119,7 +119,12 @@
 			     int &outputBytes )
 {
   byte *tmpBuf;
+
+#ifdef __MINGW32__
+  tmpBuf = (byte*)__mingw_aligned_malloc(width*height*4,16);
+#else
   tmpBuf = (byte*)memalign(16, width*height*4);
+#endif
   memset(tmpBuf, 0, width*height*4);
   RGBAtoYCoCg(inBuf, tmpBuf, width, height);
   CompressImageDXT5(tmpBuf, outBuf, width, height, outputBytes);
diff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	(revision 6b5fb806a9190f7425c32db65d3ea905a55a9c16)
+++ b/CMakeLists.txt	(date 1652372963746)
@@ -143,30 +143,14 @@
     endif()
 endif()

-# required
-find_package(OSG REQUIRED)
-find_package(CURL REQUIRED)
-find_package(GDAL REQUIRED)
-
 # optional
-find_package(GEOS)
-find_package(Sqlite3)
-find_package(Draco)
-find_package(BASISU)
 find_package(GLEW)
-find_package(Protobuf)
-find_package(WEBP)
 find_package(Blend2D)
-find_package(blosc)

 if(OSGEARTH_ENABLE_PROFILING)
     find_package(Tracy)
 endif()

-if(OSGEARTH_BUILD_ZIP_PLUGIN)
-    find_package(LIBZIP)
-endif()
-
 if(OSGEARTH_BUILD_TRITON_NODEKIT)
     find_package(Triton QUIET)
 endif()
@@ -237,7 +221,8 @@
 INCLUDE(OsgEarthMacroUtils)

 # OpenSceneGraph is the 3D rendering toolkit
-DETECT_OSG_VERSION()
+set(OPENSCENEGRAPH_VERSION "3.6.5")
+set(OSG_PLUGINS "osgPlugins-${OPENSCENEGRAPH_VERSION}"  CACHE STRING "" FORCE)

 IF (NOT OPENSCENEGRAPH_VERSION)
 	SET(OPENSCENEGRAPH_VERSION ${OPENSCENEGRAPH_MAJOR_VERSION}.${OPENSCENEGRAPH_MINOR_VERSION}.${OPENSCENEGRAPH_PATCH_VERSION})
