From d59323d1742293e2f1428b743c3184c228abc425 Mon Sep 17 00:00:00 2001
From: Martin Valgur <martin.valgur@gmail.com>
Date: Tue, 9 Jul 2024 11:24:38 +0300
Subject: [PATCH] Unvendor dependencies

---
 CMakeLists.txt                                |  4 +---
 cmake/osgearth-macros.cmake                   | 20 +++++--------------
 src/osgEarth/BuildConfig.in                   |  1 +
 src/osgEarth/CMakeLists.txt                   |  8 ++++++++
 src/osgEarth/ImGui/ImGuiApp                   | 11 ++++------
 src/osgEarth/ImGui/LayersGUI                  | 10 ++++------
 src/osgEarth/ImGui/SceneGraphGUI              |  9 +++------
 .../cache_rocksdb/CMakeLists.txt              |  2 +-
 src/osgEarthDrivers/gltf/CMakeLists.txt       |  6 ++++--
 src/osgEarthDrivers/lerc/CMakeLists.txt       | 15 +++-----------
 10 files changed, 34 insertions(+), 52 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index d8fdc25b6..22d2048b7 100755
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -127,9 +127,7 @@ find_package(OpenSceneGraph REQUIRED COMPONENTS osg osgDB osgGA osgManipulator o
 # optional - GLEW supports ImGui
 find_package(GLEW)
 
-if(GLEW_FOUND AND EXISTS "${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/imgui/imgui.cpp")
-    set(OSGEARTH_HAVE_IMGUI 1)
-endif()
+set(OSGEARTH_HAVE_IMGUI 1)
 
 
 # integrated profiling with tracy?
diff --git a/cmake/osgearth-macros.cmake b/cmake/osgearth-macros.cmake
index 51e356907..95051bb37 100644
--- a/cmake/osgearth-macros.cmake
+++ b/cmake/osgearth-macros.cmake
@@ -190,27 +190,17 @@ macro(add_osgearth_app)
     set(oneValueArgs TARGET FOLDER)
     set(multiValueArgs SOURCES HEADERS SHADERS TEMPLATES LIBRARIES INCLUDE_DIRECTORIES)
     cmake_parse_arguments(MY "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
-    
+
     set(OK_TO_BUILD TRUE)
     
     if (MY_USE_IMGUI)
         if(OSGEARTH_HAVE_IMGUI)
-            list(APPEND MY_INCLUDE_DIRECTORIES
-                ${GLEW_INCLUDE_DIR}
-                ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/imgui
-                ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/imgui/examples )
-            
-            list(APPEND MY_SOURCES
-                ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/imgui/imgui.cpp
-                ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/imgui/imgui_demo.cpp
-                ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/imgui/imgui_draw.cpp
-                ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/imgui/imgui_widgets.cpp
-                ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/imgui/imgui_tables.cpp
-                ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/imgui/backends/imgui_impl_opengl3.cpp
-                ${OSGEARTH_SOURCE_DIR}/src/osgEarth/ImGui/ImGui.cpp )
+            find_package(imgui REQUIRED CONFIG)
+            find_package(GLEW REQUIRED CONFIG)
+            find_package(portable-file-dialogs REQUIRED CONFIG)
 
             list(APPEND MY_LIBRARIES
-                ${MY_LIBRARIES} ${GLEW_LIBRARIES} ${CMAKE_DL_LIBS} OpenGL::GL)
+                ${MY_LIBRARIES} ${GLEW_LIBRARIES} ${CMAKE_DL_LIBS} OpenGL::GL imgui::imgui GLEW::GLEW portable-file-dialogs::portable-file-dialogs)
 
             # define for conditional compilation (esp for imgui headers)
             if(OSGEARTHPROCEDURAL_LIBRARY)
diff --git a/src/osgEarth/BuildConfig.in b/src/osgEarth/BuildConfig.in
index c9e970914..50121b653 100644
--- a/src/osgEarth/BuildConfig.in
+++ b/src/osgEarth/BuildConfig.in
@@ -13,6 +13,7 @@
 #cmakedefine OSGEARTH_HAVE_SPDLOG
 #cmakedefine OSGEARTH_HAVE_SQLITE3
 #cmakedefine OSGEARTH_HAVE_TRACY
+#cmakedefine OSGEARTH_HAVE_PFD
 
 #cmakedefine OSGEARTH_HAVE_CESIUM_NODEKIT
 #cmakedefine OSGEARTH_HAVE_PROCEDURAL_NODEKIT
diff --git a/src/osgEarth/CMakeLists.txt b/src/osgEarth/CMakeLists.txt
index 1c50e39b6..ec8ba7318 100644
--- a/src/osgEarth/CMakeLists.txt
+++ b/src/osgEarth/CMakeLists.txt
@@ -19,6 +19,7 @@ find_package(blend2d QUIET)
 find_package(blosc QUIET)
 find_package(spdlog QUIET)
 find_package(meshoptimizer QUIET)
+find_package(portable-file-dialogs QUIET)
 
 if(OSGEARTH_BUILD_ZIP_PLUGIN)
     find_package(LibZip QUIET)
@@ -930,6 +931,13 @@ if(meshoptimizer_FOUND)
     target_link_libraries(${LIB_NAME} PRIVATE meshoptimizer::meshoptimizer)
 endif()
 
+# portable-file-dialogs?
+if(portable-file-dialogs_FOUND)
+    message(STATUS "Found portable-file-dialogs")
+    set(OSGEARTH_HAVE_PFD ON)
+    target_link_libraries(${LIB_NAME} PRIVATE portable-file-dialogs::portable-file-dialogs)
+endif()
+
 # pthreads?
 if(UNIX)
     target_link_libraries(${LIB_NAME} PUBLIC Threads::Threads)
diff --git a/src/osgEarth/ImGui/ImGuiApp b/src/osgEarth/ImGui/ImGuiApp
index 59a0dc7e3..8ac6d4c29 100644
--- a/src/osgEarth/ImGui/ImGuiApp
+++ b/src/osgEarth/ImGui/ImGuiApp
@@ -24,7 +24,7 @@
 #include "GL/glew.h"
 #include "imgui.h"
 #include "imgui_internal.h"
-#include "misc/cpp/imgui_stdlib.h"
+#include "imgui_stdlib.h"
 
 #include "ImGui"
 
@@ -62,11 +62,8 @@
 #include "SearchGUI"
 #endif
 
-#if defined(__has_include)
-#if __has_include(<third_party/portable-file-dialogs/portable-file-dialogs.h>)
-#include <third_party/portable-file-dialogs/portable-file-dialogs.h>
-#define HAS_PFD
-#endif
+#ifdef OSGEARTH_HAVE_PFD
+#include <portable-file-dialogs.h>
 #endif
 
 namespace osgEarth
@@ -276,7 +273,7 @@ namespace osgEarth
                 {
                     if (ImGui::BeginMenu("File"))
                     {                        
-#ifdef HAS_PFD
+#ifdef OSGEARTH_HAVE_PFD
                         if (ImGui::MenuItem("Open Earth File"))
                         {
                             auto f = pfd::open_file("Choose files to read", pfd::path::home(),
diff --git a/src/osgEarth/ImGui/LayersGUI b/src/osgEarth/ImGui/LayersGUI
index 7761a35a9..de259d3d9 100644
--- a/src/osgEarth/ImGui/LayersGUI
+++ b/src/osgEarth/ImGui/LayersGUI
@@ -41,11 +41,9 @@
 #ifndef NOMINMAX
 #define NOMINMAX
 #endif
-#if defined(__has_include)
-#if __has_include(<third_party/portable-file-dialogs/portable-file-dialogs.h>)
-#include <third_party/portable-file-dialogs/portable-file-dialogs.h>
-#define HAS_PFD
-#endif
+
+#ifdef OSGEARTH_HAVE_PFD
+#include <portable-file-dialogs.h>
 #endif
 
 #include <osgEarth/BuildConfig>
@@ -947,7 +945,7 @@ namespace osgEarth
                 {
                     if (ImGui::BeginMenu("Add Layer"))
                     {
-#ifdef HAS_PFD
+#ifdef OSGEARTH_HAVE_PFD
                         if (ImGui::MenuItem("Local File"))
                         {
                             auto f = pfd::open_file("Choose files to read", pfd::path::home(),
diff --git a/src/osgEarth/ImGui/SceneGraphGUI b/src/osgEarth/ImGui/SceneGraphGUI
index 6dd8169d4..1755e269e 100644
--- a/src/osgEarth/ImGui/SceneGraphGUI
+++ b/src/osgEarth/ImGui/SceneGraphGUI
@@ -38,11 +38,8 @@
 #include <osg/io_utils>
 #include <osg/PolygonMode>
 
-#if defined(__has_include)
-#if __has_include(<third_party/portable-file-dialogs/portable-file-dialogs.h>)
-#include <third_party/portable-file-dialogs/portable-file-dialogs.h>
-#define HAS_PFD
-#endif
+#ifdef OSGEARTH_HAVE_PFD
+#include <portable-file-dialogs.h>
 #endif
 
 struct PrepareForWriting : public osg::NodeVisitor
@@ -946,7 +943,7 @@ namespace osgEarth
                     }
                 }
 
-#ifdef HAS_PFD
+#ifdef OSGEARTH_HAVE_PFD
                 if (ImGui::Button("Export"))
                 {
                     auto f = pfd::save_file("Save file", pfd::path::home());
diff --git a/src/osgEarthDrivers/cache_rocksdb/CMakeLists.txt b/src/osgEarthDrivers/cache_rocksdb/CMakeLists.txt
index 33cede756..ee7d75de1 100644
--- a/src/osgEarthDrivers/cache_rocksdb/CMakeLists.txt
+++ b/src/osgEarthDrivers/cache_rocksdb/CMakeLists.txt
@@ -21,6 +21,6 @@ if(RocksDB_FOUND)
             RocksDBCacheDriver.cpp )
             
     target_link_libraries(osgdb_osgearth_cache_rocksdb
-        PRIVATE RocksDB::rocksdb RocksDB::rocksdb-shared)    
+        PRIVATE RocksDB::rocksdb)
         
 endif()
diff --git a/src/osgEarthDrivers/gltf/CMakeLists.txt b/src/osgEarthDrivers/gltf/CMakeLists.txt
index 0b2039647..b0f426512 100644
--- a/src/osgEarthDrivers/gltf/CMakeLists.txt
+++ b/src/osgEarthDrivers/gltf/CMakeLists.txt
@@ -15,8 +15,10 @@ add_osgearth_plugin(
     SOURCES ${TARGET_SRC} )
     
 include_directories(
-    ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/tinygltf 
-    ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/rapidjson/include/rapidjson )
+    ${OSGEARTH_EMBEDDED_THIRD_PARTY_DIR}/tinygltf )
+
+find_package(RapidJSON REQUIRED CONFIG)
+target_link_libraries(osgdb_gltf PRIVATE rapidjson)
 
 if (draco_FOUND)
     #include_directories(${draco_INCLUDE_DIRS})
diff --git a/src/osgEarthDrivers/lerc/CMakeLists.txt b/src/osgEarthDrivers/lerc/CMakeLists.txt
index e8d0f8c69..72cf89ce9 100644
--- a/src/osgEarthDrivers/lerc/CMakeLists.txt
+++ b/src/osgEarthDrivers/lerc/CMakeLists.txt
@@ -1,15 +1,6 @@
-include_directories(BEFORE ../../third_party/lerc/include )
-
 add_osgearth_plugin(
     TARGET osgdb_lerc
     SOURCES
-        ReaderWriterLERC.cpp
-        ../../third_party/lerc/src/LercLib/BitMask.cpp
-        ../../third_party/lerc/src/LercLib/BitStuffer2.cpp
-        ../../third_party/lerc/src/LercLib/Huffman.cpp
-        ../../third_party/lerc/src/LercLib/Lerc.cpp
-        ../../third_party/lerc/src/LercLib/Lerc_c_api_impl.cpp
-        ../../third_party/lerc/src/LercLib/Lerc2.cpp
-        ../../third_party/lerc/src/LercLib/RLE.cpp
-        ../../third_party/lerc/src/LercLib/Lerc1Decode/BitStuffer.cpp
-        ../../third_party/lerc/src/LercLib/Lerc1Decode/CntZImage.cpp )
\ No newline at end of file
+        ReaderWriterLERC.cpp)
+find_package(lerc REQUIRED CONFIG)
+target_link_libraries(osgdb_lerc PRIVATE lerc::lerc)
-- 
2.43.0

