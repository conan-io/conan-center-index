From 761b3791e30bd07a0a57ca295327b63da71e117e Mon Sep 17 00:00:00 2001
From: Tarcisio Rodrigues <tarcisio.genaro@gmail.com>
Date: Tue, 9 Jun 2020 02:14:57 -0300
Subject: [PATCH 1/8] inc. required CMake version, add conan basic setup and
 check compiler features

---
 CMakeLists.txt | 39 +++++++++++++++------------------------
 1 file changed, 15 insertions(+), 24 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 48908ead..a9cea790 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.0 FATAL_ERROR)
+cmake_minimum_required(VERSION 3.16 FATAL_ERROR)
 
 option(HAVE_EMX "Build with EMX")
 
@@ -11,6 +11,8 @@ set (quickfix_PROJECT_NAME quickfix)
 endif()
 
 project(${quickfix_PROJECT_NAME} VERSION 0.1 LANGUAGES CXX C)
+include(${PROJECT_SOURCE_DIR}/../conanbuildinfo.cmake)
+conan_basic_setup()
 message("-- Project name ${CMAKE_PROJECT_NAME}")
 
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")
@@ -31,13 +33,6 @@ option(HAVE_PYTHON3 "Build with default Python3 version")
 if(HAVE_SSL)
 # Can set location explicitly, example, cmake -DOPENSSL_ROOT_DIR=/usr/local/ssl -DOPENSSL_LIBRARIES=/usr/local/ssl/lib
 
-find_package(OpenSSL REQUIRED)
-include_directories(${OPENSSL_INCLUDE_DIR})
-
-message("-- OPENSSL_INCLUDE_DIR: ${OPENSSL_INCLUDE_DIR}")
-message("-- OPENSSL_LIBRARIES: ${OPENSSL_LIBRARIES}")
-message("-- OPENSSL_ROOT_DIR: ${OPENSSL_ROOT_DIR}")
-
 message("-- Building with SSL")
 add_definitions("-DHAVE_SSL=1")
 endif()
@@ -58,26 +53,29 @@ message("-- Building with POSTGRESQL")
 add_definitions("-DHAVE_POSTGRESQL=1")
 endif()
 
-include(FindSharedPtr)
-FIND_SHARED_PTR()
-if (HAVE_SHARED_PTR_IN_STD_NAMESPACE)
+set(SHARED_PTR AUTO CACHE STRING "Define shared pointer implementation")
+set_property(CACHE SHARED_PTR PROPERTY STRINGS STD TR1)
+
+if ("${SHARED_PTR}" STREQUAL "STD")
 message("-- set HAVE_STD_SHARED_PTR")
 add_definitions("-DHAVE_STD_SHARED_PTR=1")
-elseif(HAVE_SHARED_PTR_IN_TR1_NAMESPACE)
-message("-- set HAVE_STD_TR1_SHARED_PTR")
-add_definitions("-DHAVE_STD_TR1_SHARED_PTR=1")
-elseif(HAVE_SHARED_PTR_IN_TR1_NAMESPACE_FROM_TR1_MEMORY_HEADER)
+elseif("${SHARED_PTR}" STREQUAL "TR1")
 message("-- set HAVE_STD_TR1_SHARED_PTR_FROM_TR1_MEMORY_HEADER")
 add_definitions("-DHAVE_STD_TR1_SHARED_PTR_FROM_TR1_MEMORY_HEADER=1")
 else()
-message("-- shared_ptr not found.")
+message(FATAL_ERROR "Must set SHARED_PTR")
 endif()
 
 include(FindUniquePtr)
 FIND_UNIQUE_PTR()
 if (HAVE_UNIQUE_PTR_IN_STD_NAMESPACE)
 message("-- set HAVE_STD_UNIQUE_PTR")
+
 add_definitions("-DHAVE_STD_UNIQUE_PTR=1")
+file(APPEND ${CMAKE_SOURCE_DIR}/config.h
+ "#ifndef HAVE_STD_UNIQUE_PTR\n"
+ "#define HAVE_STD_UNIQUE_PTR\n"
+ "#endif\n" )
 endif()
 
 if (HAVE_PYTHON)
@@ -91,15 +89,8 @@ find_package(PythonLibs 3 REQUIRED)
 include_directories(${PYTHON_INCLUDE_DIRS})
 endif ()
 
-if( WIN32 OR ${CMAKE_SYSTEM_NAME} STREQUAL "Linux" )
-add_subdirectory(UnitTest++)
-endif()
-
 add_subdirectory(src)
-add_subdirectory(examples)
-if( WIN32)
-add_subdirectory(test)
-endif()
+target_link_libraries(${PROJECT_NAME} ${CONAN_LIBS})
 
 install(DIRECTORY ${CMAKE_SOURCE_DIR}/spec/ DESTINATION share/quickfix
   FILES_MATCHING PATTERN "FIX*.xml")
-- 
2.25.0

