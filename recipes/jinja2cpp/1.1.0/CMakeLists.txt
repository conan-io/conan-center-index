cmake_minimum_required(VERSION 3.4.3)
project(cmake_wrapper)

include(conanbuildinfo.cmake)
conan_basic_setup()

#For debugging purposes. Will remove it
message(STATUS ">>>> BUILD_SHARED_LIBS (from outside)=${BUILD_SHARED_LIBS}")
message(STATUS ">>>> CMAKE_BUILD_TYPE (from outside)=${CMAKE_BUILD_TYPE}")
unset (BUILD_SHARED_LIBS CACHE)
if (NOT CMAKE_BUILD_TYPE)
    set (CMAKE_BUILD_TYPE ${JINJA2CPP_CONAN_BUILD_TYPE})
endif ()
message(STATUS ">>>> JINJA2CPP_CONAN_BUILD_TYPE=${JINJA2CPP_CONAN_BUILD_TYPE}")
message(STATUS ">>>> JINJA2CPP_SANITIZERS=${JINJA2CPP_SANITIZERS}")
message(STATUS ">>>> JINJA2CPP_WITH_SANITIZERS=${JINJA2CPP_WITH_SANITIZERS}")
message(STATUS ">>>> JINJA2CPP_DEPS_MODE=${JINJA2CPP_DEPS_MODE}")
message(STATUS ">>>> JINJA2CPP_BUILD_TESTS=${JINJA2CPP_BUILD_TESTS}")
message(STATUS ">>>> JINJA2CPP_STRICT_WARNINGS=${JINJA2CPP_STRICT_WARNINGS}")
message(STATUS ">>>> JINJA2CPP_BUILD_SHARED=${JINJA2CPP_BUILD_SHARED}")
message(STATUS ">>>> JINJA2CPP_PIC=${JINJA2CPP_PIC}")
message(STATUS ">>>> JINJA2CPP_MSVC_RUNTIME_TYPE=${JINJA2CPP_MSVC_RUNTIME_TYPE}")
message(STATUS ">>>> JINJA2CPP_CXX_STANDARD=${JINJA2CPP_CXX_STANDARD}")
message(STATUS ">>>> CONAN_CMAKE_POSITION_INDEPENDENT_CODE=${CONAN_CMAKE_POSITION_INDEPENDENT_CODE}")
message(STATUS ">>>> CMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}")
message(STATUS ">>>> BUILD_SHARED_LIBS (changed)=${BUILD_SHARED_LIBS}")
message(STATUS ">>>> CMAKE_BUILD_TYPE (changed)=${CMAKE_BUILD_TYPE}")

add_subdirectory(source_subfolder)
