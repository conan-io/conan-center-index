From cbcd5a641f10ed9a85bbccd93a0adf85939ea6c9 Mon Sep 17 00:00:00 2001
From: Martin Valgur <martin.valgur@gmail.com>
Date: Fri, 6 Sep 2024 17:33:25 +0300
Subject: [PATCH] Inject Conan dependencies

---
 cdk/cmake/DepFindCompression.cmake |  5 +++++
 cdk/cmake/DepFindProtobuf.cmake    | 18 ++++--------------
 cdk/cmake/DepFindRapidJSON.cmake   |  3 +++
 cdk/core/CMakeLists.txt            |  2 +-
 4 files changed, 13 insertions(+), 15 deletions(-)

diff --git a/cdk/cmake/DepFindCompression.cmake b/cdk/cmake/DepFindCompression.cmake
index 68f8e106..775e0b53 100644
--- a/cdk/cmake/DepFindCompression.cmake
+++ b/cdk/cmake/DepFindCompression.cmake
@@ -39,6 +39,11 @@
 # ext::zstd
 #
 
+find_package(ZLIB REQUIRED CONFIG)
+find_package(LZ4 REQUIRED CONFIG)
+find_package(Zstd REQUIRED CONFIG)
+return()
+
 if(TARGET ext::z)
   return()
 endif()
diff --git a/cdk/cmake/DepFindProtobuf.cmake b/cdk/cmake/DepFindProtobuf.cmake
index 1fc785e3..f371e29a 100644
--- a/cdk/cmake/DepFindProtobuf.cmake
+++ b/cdk/cmake/DepFindProtobuf.cmake
@@ -50,22 +50,12 @@ endif()
 
 message(STATUS "Setting up Protobuf.")
 
-# Setup extrnal project that builds protobuf from  bundled sources
-add_ext(protobuf google/protobuf/api.pb.h)
+find_package(Protobuf REQUIRED CONFIG GLOBAL)
 
-if(NOT PROTOBUF_FOUND)
-  message(FATAL_ERROR "Can't build without protobuf support")
+if(NOT TARGET ext::protobuf-lite)
+  add_library(ext::protobuf-lite ALIAS ext::protobuf)
 endif()
 
-# import targets from the external project
-# Note: The pb_ targets are created by protobuf/exports.cmake
-add_ext_targets(protobuf
-  LIBRARY protobuf-lite pb_libprotobuf-lite
-  LIBRARY protobuf pb_libprotobuf
-  EXECUTABLE protoc pb_protoc
-)
-
-
 # Standard PROTOBUF_GENERATE_CPP modified to our usage
 function(mysqlx_protobuf_generate_cpp SRCS HDRS)
   IF(NOT ARGN)
@@ -90,7 +80,7 @@ function(mysqlx_protobuf_generate_cpp SRCS HDRS)
       "${CMAKE_CURRENT_BINARY_DIR}/protobuf/${FIL_WE}.pb.h"
       COMMAND ${CMAKE_COMMAND}
       -E make_directory "${CMAKE_CURRENT_BINARY_DIR}/protobuf"
-      COMMAND ext::protoc
+      COMMAND protobuf::protoc
       ARGS --cpp_out "${CMAKE_CURRENT_BINARY_DIR}/protobuf"
       -I ${ABS_PATH} ${ABS_FIL}
 
diff --git a/cdk/cmake/DepFindRapidJSON.cmake b/cdk/cmake/DepFindRapidJSON.cmake
index 24f2c486..ed09e7bf 100644
--- a/cdk/cmake/DepFindRapidJSON.cmake
+++ b/cdk/cmake/DepFindRapidJSON.cmake
@@ -36,6 +36,9 @@ if(TARGET RapidJSON::rapidjson)
   return()
 endif()
 
+find_package(RapidJSON REQUIRED CONFIG)
+return()
+
 message(STATUS "Setting up RapidJSON.")
 
 # TODO: how to make it GLOBAL...
diff --git a/cdk/core/CMakeLists.txt b/cdk/core/CMakeLists.txt
index ba7ee3e0..c8242233 100644
--- a/cdk/core/CMakeLists.txt
+++ b/cdk/core/CMakeLists.txt
@@ -42,7 +42,7 @@ SET(cdk_sources
 file(GLOB HEADERS *.h)
 
 add_library(cdk STATIC ${cdk_sources} ${HEADERS})
-
+find_dep(Protobuf)
 target_link_libraries(cdk
   PUBLIC  cdk_mysqlx cdk_parser
   PRIVATE ext::protobuf-lite  # required by codecc.cc
