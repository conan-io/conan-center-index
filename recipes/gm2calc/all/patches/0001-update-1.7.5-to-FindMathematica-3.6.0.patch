diff --git a/cmake/Mathematica/FindMathematica.cmake b/cmake/Mathematica/FindMathematica.cmake
index 6e721a0..8ae7595 100644
--- a/cmake/Mathematica/FindMathematica.cmake
+++ b/cmake/Mathematica/FindMathematica.cmake
@@ -3,7 +3,7 @@
 # See the FindMathematica manual for usage hints.
 #
 #=============================================================================
-# Copyright 2010-2020 Sascha Kratky
+# Copyright 2010-2021 Sascha Kratky
 #
 # Permission is hereby granted, free of charge, to any person)
 # obtaining a copy of this software and associated documentation)
@@ -34,7 +34,7 @@ cmake_minimum_required(VERSION 2.8.12)
 cmake_policy(POP)
 
 set (Mathematica_CMAKE_MODULE_DIR "${CMAKE_CURRENT_LIST_DIR}")
-set (Mathematica_CMAKE_MODULE_VERSION "3.3.0")
+set (Mathematica_CMAKE_MODULE_VERSION "3.6.0")
 
 # activate select policies
 if (POLICY CMP0025)
@@ -242,10 +242,14 @@ endmacro()
 macro (_get_program_names _outProgramNames)
 	set (${_outProgramNames} "")
 	# Mathematica products in order of preference
-	set (_MathematicaApps "Mathematica" "Wolfram Desktop" "Wolfram Engine" "gridMathematica Server")
+	set (_MathematicaApps
+		"Mathematica" "mathematica"
+		"Wolfram Desktop" "Wolfram Engine"
+		"gridMathematica Server")
 	# Mathematica product versions in order of preference
 	set (_MathematicaVersions
-		"12.1" "12.0"
+		"13.0"
+		"12.3" "12.2" "12.1" "12.0"
 		"11.3" "11.2" "11.1" "11.0"
 		"10.4" "10.3" "10.2" "10.1" "10.0"
 		"9.0" "8.0" "7.0" "6.0" "5.2")
@@ -348,8 +352,10 @@ function (_add_launch_services_search_paths _outSearchPaths)
 		# the executable usually resides in the LaunchServices framework Support directory
 		# The LaunchServices framework is a sub-framework of the CoreServices umbrella framework
 		cmake_find_frameworks(CoreServices)
-		find_program (Mathematica_LSRegister_EXECUTABLE NAMES "lsregister" PATH_SUFFIXES "Support"
-			HINTS "${CoreServices_FRAMEWORKS}/Frameworks/LaunchServices.framework")
+		find_program (Mathematica_LSRegister_EXECUTABLE
+			NAMES "lsregister"
+			PATH_SUFFIXES "/Frameworks/LaunchServices.framework/Support"
+			HINTS ${CoreServices_FRAMEWORKS})
 		mark_as_advanced(
 			Mathematica_CoreServices_DIR
 			Mathematica_LaunchServices_DIR
@@ -361,7 +367,7 @@ function (_add_launch_services_search_paths _outSearchPaths)
 		foreach (_bundleID IN ITEMS ${ARGN})
 			execute_process(
 				COMMAND "${Mathematica_LSRegister_EXECUTABLE}" "-dump"
-				COMMAND "grep" "--before-context=20" "--after-context=20" " ${_bundleID} "
+				COMMAND "grep" "--before-context=20" "--after-context=20" "${_bundleID}"
 				COMMAND "grep" "--only-matching" "/.*\\.app"
 				TIMEOUT 10 OUTPUT_VARIABLE _queryResult ERROR_QUIET)
 			string (REPLACE ";" "\\;" _queryResult "${_queryResult}")
@@ -461,6 +467,14 @@ macro (_get_search_paths _outSearchPaths)
 				list (APPEND ${_outSearchPaths} "${_unixPath}/Wolfram Research" )
 			endif()
 		endforeach()
+		# add default installation path
+		if (IS_DIRECTORY "C:/Program Files/Wolfram Research")
+			list (APPEND ${_outSearchPaths} "C:/Program Files/Wolfram Research" )
+		endif()
+		# Windows container paths may be lowercase
+		if (IS_DIRECTORY "C:/Program Files/wolfram research")
+			list (APPEND ${_outSearchPaths} "C:/Program Files/wolfram research" )
+		endif()
 	elseif (CMAKE_HOST_APPLE)
 		# add standard Mathematica Mac OS X installation paths
 		list (APPEND ${_outSearchPaths} "~/Applications;/Applications")
@@ -500,6 +514,8 @@ macro (_systemNameToSystemID _systemName _systemProcessor _outSystemIDs)
 			set (${_outSystemIDs} "MacOSX-x86")
 		elseif ("${_systemProcessor}" STREQUAL "x86_64")
 			set (${_outSystemIDs} "MacOSX-x86-64")
+		elseif ("${_systemProcessor}" STREQUAL "arm64")
+			set (${_outSystemIDs} "MacOSX-ARM64")
 		elseif ("${_systemProcessor}" MATCHES "ppc64|powerpc64")
 			set (${_outSystemIDs} "Darwin-PowerPC64")
 		elseif ("${_systemProcessor}" MATCHES "ppc|powerpc")
@@ -648,7 +664,12 @@ macro (_get_host_system_IDs _outSystemIDs)
 endmacro()
 
 macro (_get_supported_systemIDs _version _outSystemIDs)
-	if (NOT "${_version}" VERSION_LESS "12.1")
+	if (NOT "${_version}" VERSION_LESS "12.3")
+		set (${_outSystemIDs}
+			"Windows-x86-64"
+			"Linux-x86-64" "Linux-ARM"
+			"MacOSX-x86-64" "MacOSX-ARM64")
+	elseif (NOT "${_version}" VERSION_LESS "12.1")
 		set (${_outSystemIDs}
 			"Windows-x86-64"
 			"Linux-x86-64" "Linux-ARM"
@@ -741,6 +762,19 @@ macro (_get_compatible_system_IDs _systemID _outSystemIDs)
 			else()
 				list (APPEND ${_outSystemIDs} "MacOSX-x86-64" "MacOSX-x86")
 			endif()
+		elseif ("${_systemID}" MATCHES "MacOSX-ARM64")
+			if (Mathematica_VERSION)
+				# Mathematica 12.3 added support for MacOSX-ARM64
+				if (NOT "${Mathematica_VERSION}" VERSION_LESS "12.3")
+					list (APPEND ${_outSystemIDs} "MacOSX-ARM64")
+				endif()
+				# Mathematica 6 added support for MacOSX-x86-64
+				if (NOT "${Mathematica_VERSION}" VERSION_LESS "6.0")
+					list (APPEND ${_outSystemIDs} "MacOSX-x86-64")
+				endif()
+			else()
+				list (APPEND ${_outSystemIDs} "MacOSX-ARM64" "MacOSX-x86-64")
+			endif()
 		elseif ("${_systemID}" STREQUAL "Darwin-PowerPC64")
 			if (Mathematica_VERSION)
 				if (NOT "${Mathematica_VERSION}" VERSION_LESS "5.2" AND
@@ -801,7 +835,7 @@ macro(_get_developer_kit_system_IDs _outSystemIDs)
 				set (${_outSystemIDs} "")
 			else()
 				# Mathematica versions after 9 have a system ID subdirectory
-				set (${_outSystemIDs} "MacOSX-x86-64")
+				set (${_outSystemIDs} "MacOSX-x86-64" "MacOSX-ARM64")
 			endif()
 		else()
 			_get_system_IDs(${_outSystemIDs})
@@ -819,8 +853,8 @@ macro(_get_host_developer_kit_system_IDs _outSystemIDs)
 			if ("${Mathematica_VERSION}" VERSION_LESS "9.0")
 				set (${_outSystemIDs} "")
 			else()
-				# The MacOSX-x86-64 DeveloperKit is a universal binary with architectures i386 and x86_64
-				set (${_outSystemIDs} "MacOSX-x86-64")
+				# Mathematica versions after 9 have a system ID subdirectory
+				set (${_outSystemIDs} "MacOSX-x86-64" "MacOSX-ARM64")
 			endif()
 		else()
 			_get_host_system_IDs(${_outSystemIDs})
@@ -1175,7 +1209,10 @@ macro (_append_WSTP_needed_system_libraries _outLibraries)
 			if (DEFINED Mathematica_WSTP_VERSION_MINOR)
 				if ("${Mathematica_WSTP_VERSION_MINOR}" GREATER 24)
 					# Linux WSTP API revision >= 25 has dependency on libdl and libuuid
-					list (APPEND ${_outLibraries} dl uuid)
+					list (APPEND ${_outLibraries} ${CMAKE_DL_LIBS})
+					find_library (Mathematica_uuid_LIBRARY uuid)
+					mark_as_advanced(Mathematica_uuid_LIBRARY)
+					list (APPEND ${_outLibraries} ${Mathematica_uuid_LIBRARY})
 				endif()
 			endif()
 		endif()
@@ -1262,7 +1299,7 @@ macro (_setup_mathematica_systemIDs)
 	_get_system_IDs(Mathematica_SYSTEM_IDS)
 	# default target platform system ID is first one in Mathematica_SYSTEM_IDS
 	list(GET Mathematica_SYSTEM_IDS 0 Mathematica_SYSTEM_ID)
-	if (COMMAND Mathematica_EXECUTE)
+	if (Mathematica_RUN_KERNEL_ON_CONFIGURE AND COMMAND Mathematica_EXECUTE)
 		# determine true host system ID which depends on both Mathematica version
 		# and OS variant by running Mathematica kernel
 		Mathematica_EXECUTE(
@@ -1315,7 +1352,7 @@ endmacro()
 
 # internal macro to set up Mathematica base directory variable
 macro (_setup_mathematica_base_directory)
-	if (COMMAND Mathematica_EXECUTE)
+	if (Mathematica_RUN_KERNEL_ON_CONFIGURE AND COMMAND Mathematica_EXECUTE)
 		# determine true $BaseDirectory
 		Mathematica_EXECUTE(
 			CODE "Print[StandardForm[$BaseDirectory]]"
@@ -1367,7 +1404,7 @@ endmacro()
 
 # internal macro to set up Mathematica user base directory variable
 macro (_setup_mathematica_userbase_directory)
-	if (COMMAND Mathematica_EXECUTE)
+	if (Mathematica_RUN_KERNEL_ON_CONFIGURE AND COMMAND Mathematica_EXECUTE)
 		# determine true $UserBaseDirectory
 		Mathematica_EXECUTE(
 			CODE "Print[StandardForm[$UserBaseDirectory]]"
@@ -1461,6 +1498,16 @@ macro (_setup_findmathematica_options)
 	option (Mathematica_DEBUG
 		"enable FindMathematica debugging output?"
 		${Mathematica_DEBUG_INIT})
+	if (NOT DEFINED Mathematica_RUN_KERNEL_ON_CONFIGURE_INIT)
+		if (DEFINED Mathematica_RUN_KERNEL_ON_CONFIGURE)
+			set (Mathematica_RUN_KERNEL_ON_CONFIGURE_INIT ${Mathematica_RUN_KERNEL_ON_CONFIGURE})
+		else()
+			set (Mathematica_RUN_KERNEL_ON_CONFIGURE_INIT TRUE)
+		endif()
+	endif()
+	option (Mathematica_RUN_KERNEL_ON_CONFIGURE
+		"allow FindMathematica to implicitly run the Mathematica kernel at CMake configure time?"
+		${Mathematica_RUN_KERNEL_ON_CONFIGURE_INIT})
 endmacro()
 
 # internal macro to find Mathematica installation
@@ -1940,7 +1987,7 @@ endmacro()
 
 # internal macro to find MUnit package
 macro (_find_munit_package)
-	if (COMMAND Mathematica_FIND_PACKAGE)
+	if (Mathematica_RUN_KERNEL_ON_CONFIGURE AND COMMAND Mathematica_FIND_PACKAGE)
 		Mathematica_FIND_PACKAGE(Mathematica_MUnit_PACKAGE_FILE "MUnit`MUnit`")
 		# determine enclosing MUnit package directory
 		if (Mathematica_MUnit_PACKAGE_FILE)
@@ -1954,7 +2001,7 @@ endmacro()
 
 # internal macro to find LibaryLink package
 macro (_find_librarylink_package)
-	if (COMMAND Mathematica_FIND_PACKAGE)
+	if (Mathematica_RUN_KERNEL_ON_CONFIGURE AND COMMAND Mathematica_FIND_PACKAGE)
 		Mathematica_FIND_PACKAGE(Mathematica_LibraryLink_PACKAGE_FILE "LibraryLink`LibraryLink`")
 		# determine enclosing LibraryLink package directory
 		if (Mathematica_LibraryLink_PACKAGE_FILE)
@@ -2449,6 +2496,31 @@ macro (_log_found_variables)
 			message (STATUS "MUnit not found")
 		endif()
 	endif()
+	# warn explicitly about common mistakes users make
+	if (UNIX AND NOT APPLE)
+		if (DEFINED Mathematica_uuid_LIBRARY)
+			if (Mathematica_uuid_LIBRARY MATCHES "-NOTFOUND$")
+				message (WARNING "WSTP and MathLink require libuuid. Install libuuid with the system package manager.")
+			endif()
+		endif()
+	endif()
+	if (DEFINED Mathematica_VERSION)
+		if (CMAKE_SIZEOF_VOID_P EQUAL 4)
+			if (WINDOWS)
+				if (NOT "${Mathematica_VERSION}" VERSION_LESS "12.1")
+					message (WARNING "Windows Mathematica ${Mathematica_VERSION} does not support 32-bit.")
+				endif()
+			elseif (APPLE)
+				if (NOT "${Mathematica_VERSION}" VERSION_LESS "9.0")
+					message (WARNING "Mac Mathematica ${Mathematica_VERSION} does not support 32-bit.")
+				endif()
+			elseif (UNIX)
+				if (NOT "${Mathematica_VERSION}" VERSION_LESS "11.3")
+					message (WARNING "Linux Mathematica ${Mathematica_VERSION} does not support 32-bit.")
+				endif()
+			endif()
+		endif()
+	endif()
 	if (DEFINED Mathematica_VERSION_MAJOR AND
 		DEFINED Mathematica_VERSION_MINOR AND
 		DEFINED Mathematica_SYSTEM_IDS)
@@ -3009,6 +3081,8 @@ macro (_add_launch_prefix _cmdVar _systemIDVar)
 					list (APPEND ${_cmdVar} "/usr/bin/arch" "-i386")
 				elseif("${${_systemIDVar}}" STREQUAL "MacOSX-x86-64")
 					list (APPEND ${_cmdVar} "/usr/bin/arch" "-x86_64")
+				elseif("${${_systemIDVar}}" STREQUAL "MacOSX-ARM64")
+					list (APPEND ${_cmdVar} "/usr/bin/arch" "-arm64")
 				elseif("${${_systemIDVar}}" MATCHES "Darwin|MacOSX")
 					list (APPEND ${_cmdVar} "/usr/bin/arch" "-ppc")
 				elseif("${${_systemIDVar}}" STREQUAL "Darwin-PowerPC64")
@@ -3999,7 +4073,7 @@ function (Mathematica_MathLink_ADD_EXECUTABLE _executableName _templateFile)
 	_get_mprep_output_file(${_templateFile} _outfile)
 	Mathematica_MathLink_MPREP_TARGET(${_templateFile} OUTPUT ${_outfile})
 	add_executable (${_executableName} WIN32 ${_outfile} ${ARGN})
-	target_link_libraries(${_executableName} ${Mathematica_MathLink_LIBRARIES})
+	target_link_libraries(${_executableName} PRIVATE ${Mathematica_MathLink_LIBRARIES})
 	if (Mathematica_MathLink_LINKER_FLAGS)
 		set_target_properties(${_executableName} PROPERTIES LINK_FLAGS "${Mathematica_MathLink_LINKER_FLAGS}")
 	endif()
@@ -4129,7 +4203,7 @@ function (Mathematica_WSTP_ADD_EXECUTABLE _executableName _templateFile)
 	_get_mprep_output_file("${_templateFile}" _outfile)
 	Mathematica_WSTP_WSPREP_TARGET(${_templateFile} OUTPUT ${_outfile})
 	add_executable (${_executableName} WIN32 ${_outfile} ${ARGN})
-	target_link_libraries(${_executableName} ${Mathematica_WSTP_LIBRARIES})
+	target_link_libraries(${_executableName} PRIVATE ${Mathematica_WSTP_LIBRARIES})
 	if (Mathematica_WSTP_LINKER_FLAGS)
 		set_target_properties(${_executableName} PROPERTIES LINK_FLAGS "${Mathematica_WSTP_LINKER_FLAGS}")
 	endif()
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 5741f1c..1bc7e72 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -51,7 +68,7 @@ if(Mathematica_MathLink_FOUND)
   Mathematica_MathLink_ADD_EXECUTABLE(
     gm2calc.mx
     gm2calc.tm)
-  target_link_libraries(gm2calc.mx GM2Calc::GM2Calc)
+  target_link_libraries(gm2calc.mx PRIVATE GM2Calc::GM2Calc)
   target_include_directories(gm2calc.mx
     PRIVATE ${Mathematica_MathLink_INCLUDE_DIR} ${CMAKE_CURRENT_SOURCE_DIR})
   install(
