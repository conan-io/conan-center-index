diff --git a/alg/CMakeLists.txt b/alg/CMakeLists.txt
index edf75158c7..bfae57c815 100644
--- a/alg/CMakeLists.txt
+++ b/alg/CMakeLists.txt
@@ -72,7 +72,7 @@ if (GDAL_USE_OPENCL)
   target_sources(alg PRIVATE gdalwarpkernel_opencl.h gdalwarpkernel_opencl.cpp)
 endif ()
 
-gdal_target_link_libraries(alg PRIVATE PROJ::proj)
+target_link_libraries(alg PUBLIC CONAN_PKG::proj)
 
 if (GDAL_USE_QHULL_INTERNAL)
   target_compile_definitions(alg PRIVATE -DINTERNAL_QHULL)
diff --git a/apps/CMakeLists.txt b/apps/CMakeLists.txt
index a49165d14a..0e6aecd998 100644
--- a/apps/CMakeLists.txt
+++ b/apps/CMakeLists.txt
@@ -25,7 +25,7 @@ target_include_directories(
   appslib PRIVATE $<TARGET_PROPERTY:gdal_vrt,SOURCE_DIR> $<TARGET_PROPERTY:ogrsf_generic,SOURCE_DIR>
                   $<TARGET_PROPERTY:ogr_geojson,SOURCE_DIR> $<TARGET_PROPERTY:ogr_MEM,SOURCE_DIR>)
 
-gdal_target_link_libraries(appslib PRIVATE PROJ::proj)
+target_link_libraries(appslib PUBLIC CONAN_PKG::proj)
 
 set_property(TARGET appslib PROPERTY POSITION_INDEPENDENT_CODE ${GDAL_OBJECT_LIBRARIES_POSITION_INDEPENDENT_CODE})
 if (CMAKE_VERSION VERSION_GREATER_EQUAL 3.16)
@@ -55,7 +55,7 @@ if (BUILD_APPS)
   add_executable(gdallocationinfo gdallocationinfo.cpp)
   add_executable(gdalmanage gdalmanage.cpp)
   add_executable(gdalsrsinfo gdalsrsinfo.cpp)
-  target_link_libraries(gdalsrsinfo PRIVATE PROJ::proj)
+  target_link_libraries(gdalsrsinfo PRIVATE CONAN_PKG::proj)
   add_executable(gdaltindex gdaltindex.cpp)
   add_executable(gdal_rasterize gdal_rasterize_bin.cpp)
   add_executable(gdaldem gdaldem_bin.cpp)
diff --git a/cmake/helpers/CheckDependentLibraries.cmake b/cmake/helpers/CheckDependentLibraries.cmake
index 7fa3b565c7..ca1e6202f1 100644
--- a/cmake/helpers/CheckDependentLibraries.cmake
+++ b/cmake/helpers/CheckDependentLibraries.cmake
@@ -11,7 +11,7 @@ Detect GDAL dependencies and set variable HAVE_*
 include(CheckFunctionExists)
 include(CMakeDependentOption)
 include(FeatureSummary)
-include(DefineFindPackage2)
+include(ConanFindPackage)
 include(CheckSymbolExists)
 
 option(
@@ -110,49 +110,6 @@ macro (gdal_check_package name purpose)
   set(_find_dependency "")
   set(_find_dependency_args "")
   find_package2(${name} QUIET OUT_DEPENDENCY _find_dependency)
-  if (NOT DEFINED ${key}_FOUND)
-    set(_find_package_args)
-    if (_GCP_VERSION)
-      list(APPEND _find_package_args ${_GCP_VERSION})
-    endif ()
-    if (_GCP_CONFIG)
-      list(APPEND _find_package_args CONFIG)
-    endif ()
-    if (_GCP_COMPONENTS)
-      list(APPEND _find_package_args COMPONENTS ${_GCP_COMPONENTS})
-    endif ()
-    if (_GCP_PATHS)
-      list(APPEND _find_package_args PATHS ${_GCP_PATHS})
-    endif ()
-    if (_GCP_NAMES)
-      set(GDAL_CHECK_PACKAGE_${name}_NAMES "${_GCP_NAMES}" CACHE STRING "Config file name for ${name}")
-      mark_as_advanced(GDAL_CHECK_PACKAGE_${name}_NAMES)
-    endif ()
-    if (_GCP_TARGETS)
-      set(GDAL_CHECK_PACKAGE_${name}_TARGETS "${_GCP_TARGETS}" CACHE STRING "Target name candidates for ${name}")
-      mark_as_advanced(GDAL_CHECK_PACKAGE_${name}_TARGETS)
-    endif ()
-    if (GDAL_CHECK_PACKAGE_${name}_NAMES)
-      find_package(${name} NAMES ${GDAL_CHECK_PACKAGE_${name}_NAMES} ${_find_package_args})
-      gdal_check_package_target(${name} ${GDAL_CHECK_PACKAGE_${name}_TARGETS} REQUIRED)
-      if (${name}_FOUND)
-        get_filename_component(_find_dependency_args "${${name}_CONFIG}" NAME)
-        string(REPLACE ";" " " _find_dependency_args "${name} NAMES ${GDAL_CHECK_PACKAGE_${name}_NAMES} CONFIGS ${_find_dependency_args} ${_find_package_args}")
-      endif ()
-    endif ()
-    if (NOT ${name}_FOUND)
-      find_package(${name} ${_find_package_args})
-      if (${name}_FOUND)
-        gdal_check_package_target(${name} ${GDAL_CHECK_PACKAGE_${name}_TARGETS})
-      elseif (${key}_FOUND) # Some find modules do not set <Pkg>_FOUND
-        gdal_check_package_target(${key} ${GDAL_CHECK_PACKAGE_${name}_TARGETS})
-        set(${name}_FOUND "${key}_FOUND")
-      endif ()
-      if (${name}_FOUND)
-        string(REPLACE ";" " " _find_dependency_args "${name} ${_find_package_args}")
-      endif()
-    endif ()
-  endif ()
   if (${key}_FOUND OR ${name}_FOUND)
     set(HAVE_${key} ON)
   else ()
@@ -321,14 +278,15 @@ if (GDAL_USE_CRYPTOPP)
 endif ()
 
 # First check with CMake config files (starting at version 8, due to issues with earlier ones), and then fallback to the FindPROJ module.
-find_package(PROJ 9 CONFIG QUIET)
-if (NOT PROJ_FOUND)
-  find_package(PROJ 8 CONFIG QUIET)
-endif()
+find_package2(PROJ)
+target_include_directories(CONAN_PKG::proj INTERFACE ${PROJ_INCLUDE_DIRS})
+#if (NOT PROJ_FOUND)
+#  find_package(proj 8 CONFIG QUIET)
+#endif()
 if (PROJ_FOUND)
   string(APPEND GDAL_IMPORT_DEPENDENCIES "find_dependency(PROJ ${PROJ_VERSION_MAJOR} CONFIG)\n")
 else()
-  find_package(PROJ 6.0 REQUIRED)
+  find_package(proj 6.0 REQUIRED)
   string(APPEND GDAL_IMPORT_DEPENDENCIES "find_dependency(PROJ 6.0)\n")
 endif ()
 
@@ -379,15 +337,10 @@ gdal_check_package(JSONC "json-c library (external)" CAN_DISABLE
   TARGETS json-c::json-c JSONC::JSONC
 )
 gdal_internal_library(JSONC REQUIRED)
-if(TARGET json-c::json-c)
-  get_target_property(include_dirs json-c::json-c INTERFACE_INCLUDE_DIRECTORIES)
-  find_path(GDAL_JSON_INCLUDE_DIR NAMES json.h PATHS ${include_dirs} PATH_SUFFIXES json-c NO_DEFAULT_PATH)
-  list(APPEND include_dirs "${GDAL_JSON_INCLUDE_DIR}")
-  list(REMOVE_DUPLICATES include_dirs)
-  set_target_properties(json-c::json-c PROPERTIES
-    INTERFACE_INCLUDE_DIRECTORIES "${GDAL_JSON_INCLUDE_DIR}"
-  )
-endif()
+get_target_property(include_dirs CONAN_PKG::json-c INTERFACE_INCLUDE_DIRECTORIES)
+list(APPEND include_dirs "${JSONC_INCLUDE_DIRS}/json-c")
+set_target_properties(CONAN_PKG::json-c PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${include_dirs}")
+message("Setting include for json-c: ${include_dirs}")
 
 gdal_check_package(OpenCAD "libopencad (external, used by OpenCAD driver)" CAN_DISABLE)
 gdal_internal_library(OPENCAD)
diff --git a/cmake/helpers/ConanFindPackage.cmake b/cmake/helpers/ConanFindPackage.cmake
new file mode 100644
index 0000000000..4fe1c7aee8
--- /dev/null
+++ b/cmake/helpers/ConanFindPackage.cmake
@@ -0,0 +1,40 @@
+
+function(define_find_package2 pkgname include_file library_name)
+endfunction()
+
+function(find_package2 pkgname)
+    set(_options QUIET REQUIRED)
+    set(_oneValueArgs OUT_DEPENDENCY)
+    set(_multiValueArgs)
+    cmake_parse_arguments(arg "${_options}" "${_oneValueArgs}" "${_multiValueArgs}" ${ARGN})
+    if(arg_QUIET)
+        set(${pkgname}_FIND_QUIETLY TRUE)
+    endif()
+    if(arg_REQUIRED)
+        set(${pkgname}_FIND_REQUIRED TRUE)
+    endif()
+
+    string(TOUPPER ${pkgname} key)
+
+    set(docstring "Configured for conan package ${GDAL_CONAN_PACKAGE_FOR_${key}}")
+    if (DEFINED GDAL_CONAN_PACKAGE_FOR_${key})
+        message("Using conan package ${GDAL_CONAN_PACKAGE_FOR_${key}} for dependency ${pkgname}")
+        set(conan_package ${GDAL_CONAN_PACKAGE_FOR_${key}})
+        string(TOUPPER ${conan_package} conan_package_upper)
+
+        set(${key}_INCLUDE_DIRS "${CONAN_INCLUDE_DIRS_${conan_package_upper}}" CACHE STRING ${docstring})
+        set(${key}_LIBRARIES "CONAN_PKG::${conan_package}" CACHE STRING ${docstring})
+        set(${key}_LIBRARY "CONAN_PKG::${conan_package}" CACHE STRING ${docstring})
+        set(${key}_TARGET "CONAN_PKG::${conan_package}" CACHE STRING ${docstring})
+        set(${pkgname}_INCLUDE_DIRS "CONAN_INCLUDE_DIRS_${conan_package_upper}" CACHE STRING ${docstring})
+        set(${pkgname}_LIBRARIES "CONAN_PKG::${conan_package}" CACHE STRING ${docstring})
+        set(${pkgname}_LIBRARY "CONAN_PKG::${conan_package}" CACHE STRING ${docstring})
+        set(${pkgname}_TARGET "CONAN_PKG::${conan_package}" CACHE STRING ${docstring})
+        set(${key}_FOUND TRUE CACHE BOOL ${docstring})
+
+    else ()
+        message("dependency ${pkgname} has no conan package")
+        set(${key}_FOUND FALSE CACHE BOOL ${docstring})
+    endif()
+
+endfunction()
diff --git a/cmake/modules/packages/FindBRUNSLI.cmake b/cmake/modules/packages/FindBRUNSLI.cmake
deleted file mode 100644
index a272fb4043..0000000000
--- a/cmake/modules/packages/FindBRUNSLI.cmake
+++ /dev/null
@@ -1,74 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying file COPYING-CMAKE-SCRIPTS or
-# https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindBRUNSLI
---------
-
-Find the BRUNSLI libraries
-
-Brunsli encode and decode libraries are built with CMake. 
-Unfortunately Brunsli does not export cmake config files yet, thus this find module
-
-IMPORTED targets
-^^^^^^^^^^^^^^^^
-
-This module defines the following 
-:prop_tgt:`IMPORTED` target: ``BRUNSLI::ENCODE``
-:prop_tgt:`IMPORTED` target: ``BRUNSLI::DECODE``
-
-Result variables
-^^^^^^^^^^^^^^^^
-
-This module will set the following variables if found:
-
-``BRUNSLI_INCLUDE_DIR`` - where to find encode.h, decode.h, etc.
-``BRUNSLI_ENC_LIB`` - the library to link against to encode Brunsli.
-``BRUNSLI_DEC_LIB`` - the library to link against to decode Brunsli.
-``BRUNSLI_FOUND`` - TRUE if found
-
-#]=======================================================================]
-
-set(BRUNSLI_NAME BRUNSLI)
-
-find_path(BRUNSLI_INCLUDE_DIR brunsli/encode.h
-    HINTS ${BRUNSLI_ROOT}
-    PATH_SUFFIXES ${BRUNSLI_NAME}/include include
-)
-
-find_library(BRUNSLI_ENC_LIB 
-    NAMES brunslienc-c
-    HINTS ${BRUNSLI_ROOT}
-    PATH_SUFFIXES ${BRUNSLI_NAME}/lib lib
-)
-
-find_library(BRUNSLI_DEC_LIB 
-    NAMES brunslidec-c
-    HINTS ${BRUNSLI_ROOT}
-    PATH_SUFFIXES ${BRUNSLI_NAME}/lib lib
-)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(BRUNSLI
-    REQUIRED_VARS   BRUNSLI_ENC_LIB BRUNSLI_DEC_LIB BRUNSLI_INCLUDE_DIR
-)
-mark_as_advanced(BRUNSLI_INCLUDE_DIR BRUNSLI_ENC_LIB BRUNSLI_DEC_LIB)
-
-if(BRUNSLI_FOUND)
-    if(NOT TARGET BRUNSLI::ENCODE)
-        add_library(BRUNSLI::ENCODE UNKNOWN IMPORTED)
-        set_target_properties(BRUNSLI::ENCODE PROPERTIES
-            INTERFACE_INCLUDE_DIRECTORIES ${BRUNSLI_INCLUDE_DIR}
-            IMPORTED_LINK_INTERFACE_LANGUAGES C
-            IMPORTED_LOCATION ${BRUNSLI_ENC_LIB}
-        )
-    endif()
-    if(NOT TARGET BRUNSLI::DECODE)
-        add_library(BRUNSLI::DECODE UNKNOWN IMPORTED)
-        set_target_properties(BRUNSLI::DECODE PROPERTIES
-            INTERFACE_INCLUDE_DIRECTORIES ${BRUNSLI_INCLUDE_DIR}
-            IMPORTED_LINK_INTERFACE_LANGUAGES C
-            IMPORTED_LOCATION ${BRUNSLI_DEC_LIB}
-        )
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindBlosc.cmake b/cmake/modules/packages/FindBlosc.cmake
deleted file mode 100644
index ca6f0a7816..0000000000
--- a/cmake/modules/packages/FindBlosc.cmake
+++ /dev/null
@@ -1,74 +0,0 @@
-#------------------------------------------------------------------------------#
-# Distributed under the OSI-approved Apache License, Version 2.0.  See
-# accompanying file Copyright.txt for details.
-#------------------------------------------------------------------------------#
-#
-# FindBLOSC
-# -----------
-#
-# Try to find the BLOSC library
-#
-# This module defines the following variables:
-#
-#   BLOSC_FOUND        - System has BLOSC
-#   BLOSC_INCLUDE_DIRS - The BLOSC include directory
-#   BLOSC_LIBRARIES    - Link these to use BLOSC
-#   BLOSC_VERSION      - Version of the BLOSC library to support
-#
-# and the following imported targets:
-#   Blosc::Blosc - The core BLOSC library
-#
-# You can also set the following variable to help guide the search:
-#   BLOSC_ROOT - The install prefix for BLOSC containing the
-#                     include and lib folders
-#                     Note: this can be set as a CMake variable or an
-#                           environment variable.  If specified as a CMake
-#                           variable, it will override any setting specified
-#                           as an environment variable.
-
-if(NOT BLOSC_FOUND)
-  if((NOT BLOSC_ROOT) AND (NOT (ENV{BLOSC_ROOT} STREQUAL "")))
-    set(BLOSC_ROOT "$ENV{BLOSC_ROOT}")
-  endif()
-  if(BLOSC_ROOT)
-    set(BLOSC_INCLUDE_OPTS HINTS ${BLOSC_ROOT}/include NO_DEFAULT_PATHS)
-    set(BLOSC_LIBRARY_OPTS
-      HINTS ${BLOSC_ROOT}/lib ${BLOSC_ROOT}/lib64
-      NO_DEFAULT_PATHS
-    )
-  endif()
-
-  find_path(BLOSC_INCLUDE_DIR blosc.h ${BLOSC_INCLUDE_OPTS})
-  find_library(BLOSC_LIBRARY blosc ${BLOSC_LIBRARY_OPTS})
-  mark_as_advanced(BLOSC_INCLUDE_DIR BLOSC_LIBRARY)
-  if(BLOSC_INCLUDE_DIR)
-    file(STRINGS ${BLOSC_INCLUDE_DIR}/blosc.h _ver_strings
-      REGEX "BLOSC_VERSION_[^ ]* [0-9]+"
-    )
-    foreach(v IN LISTS _ver_strings)
-      string(REGEX MATCH "BLOSC_VERSION_([^ ]+) ([0-9]+)" v "${v}")
-      set(BLOSC_VERSION_${CMAKE_MATCH_1} ${CMAKE_MATCH_2})
-    endforeach()
-    set(BLOSC_VERSION
-      ${BLOSC_VERSION_MAJOR}.${BLOSC_VERSION_MINOR}.${BLOSC_VERSION_PATCH}
-    )
-  endif()
-
-  include(FindPackageHandleStandardArgs)
-  find_package_handle_standard_args(Blosc
-    FOUND_VAR BLOSC_FOUND
-    VERSION_VAR BLOSC_VERSION
-    REQUIRED_VARS BLOSC_LIBRARY BLOSC_INCLUDE_DIR
-  )
-  if(BLOSC_FOUND)
-    set(BLOSC_INCLUDE_DIRS ${BLOSC_INCLUDE_DIR})
-    set(BLOSC_LIBRARIES ${BLOSC_LIBRARY})
-    if(BLOSC_FOUND AND NOT TARGET Blosc::Blosc)
-      add_library(Blosc::Blosc UNKNOWN IMPORTED)
-      set_target_properties(Blosc::Blosc PROPERTIES
-        IMPORTED_LOCATION             "${BLOSC_LIBRARY}"
-        INTERFACE_INCLUDE_DIRECTORIES "${BLOSC_INCLUDE_DIR}"
-      )
-    endif()
-  endif()
-endif()
diff --git a/cmake/modules/packages/FindCryptoPP.cmake b/cmake/modules/packages/FindCryptoPP.cmake
deleted file mode 100644
index a97330fe81..0000000000
--- a/cmake/modules/packages/FindCryptoPP.cmake
+++ /dev/null
@@ -1,84 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#.rst:
-# FindCryptoPP
-# --------
-#
-# Find Crypto++ library
-#
-# ::
-#
-#  Following variables are set.
-#
-#   CRYPTOPP_FOUND
-#     Indicates whether the library has been found.
-#
-#   CRYPTOPP_INCLUDE_DIRS
-#     Points to the CryptoPP include directory.
-#
-#   CRYPTOPP_LIBRARIES
-#     Points to the CryptoPP libraries that should be passed to
-#     target_link_libararies.
-#
-
-if(CMAKE_VERSION VERSION_LESS 3.12)
-    if(CRYPTOPP_ROOT)
-        set(CRYPTOPP_HINTPATH ${CRYPTOPP_ROOT})
-    endif()
-endif()
-
-find_path(CRYPTOPP_INCLUDE_DIR NAMES cryptopp/aes.h HINTS ${CRYPTOPP_HINTPATH}/include)
-
-if(CRYPTOPP_INCLUDE_DIR)
-    if(BUILD_SHARED_LIBS)
-        find_library(CRYPTOPP_LIBRARY_RELEASE NAMES cryptolib cryptopp HINTS ${CRYPTOPP_HINTPATH}/lib)
-        find_library(CRYPTOPP_LIBRARY_DEBUG NAMES cryptolibd cryptoppd HINTS ${CRYPTOPP_HINTPATH}/debug)
-    else()
-        find_library(CRYPTOPP_LIBRARY_RELEASE NAMES cryptopp HINTS ${CRYPTOPP_HINTPATH}/lib)
-        find_library(CRYPTOPP_LIBRARY_DEBUG NAMES cryptoppd HINTS ${CRYPTOPP_HINTPATH}/debug)
-    endif()
-    mark_as_advanced(CRYPTOPP_LIBRARY_RELEASE CRYPTOPP_LIBRARY_DEBUG)
-    include(SelectLibraryConfigurations)
-    select_library_configurations(CRYPTOPP)
-
-    if(EXISTS ${_CRYPTOPP_VERSION_HEADER})
-        file(STRINGS "${CRYPTOPP_INCLUDE_DIR}/cryptopp/config.h" cryptopp_version_str REGEX "^#define CRYPTOPP_VERSION[ \t]+[0-9]+$")
-        string(REGEX REPLACE "^#define CRYPTOPP_VERSION[ \t]+([0-9]+)" "\\1" CRYPTOPP_VERSION_STRING "${cryptopp_version_str}")
-        unset(cryptopp_version_str)
-    endif()
-endif()
-
-if(NOT CMAKE_CXX_COMPILER_LOADED)
-    message(AUTHOR_WARNING "CXX language not enabled: Skipping detection of issue with clang++.")
-    set(CRYPTOPP_TEST_KNOWNBUG TRUE)
-elseif(CRYPTOPP_INCLUDE_DIR AND CRYPTOPP_LIBRARY)
-    include(CMakePushCheckState)
-    include(CheckCXXSourceCompiles)
-    cmake_push_check_state(RESET)
-    set(CMAKE_REQUIRED_LIBRARIES ${CRYPTOPP_LIBRARY})
-    set(CMAKE_REQUIRED_INCLUDES ${CRYPTOPP_INCLUDE_DIR})
-    # Catch issue with clang++ (https://groups.google.com/forum/#!topic/cryptopp-users/DfWHy3bT0KI)
-    check_cxx_source_compiles("#include <cryptopp/osrng.h>
-        int main(int argc, char** argv) { CryptoPP::AES::Encryption oEnc; return 0; }" CRYPTOPP_TEST_KNOWNBUG)
-    cmake_pop_check_state()
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(CryptoPP
-                                  FOUND_VAR CRYPTOPP_FOUND
-                                  REQUIRED_VARS CRYPTOPP_LIBRARY CRYPTOPP_TEST_KNOWNBUG CRYPTOPP_INCLUDE_DIR
-                                  VERSION_VAR CRYPTOPP_VERSION_STRING)
-mark_as_advanced(CRYPTOPP_LIBRARY CRYPTOPP_INCLUDE_DIR)
-
-if(CRYPTOPP_FOUND)
-    set(CRYPTOPP_LIBRARIES ${CRYPTOPP_LIBRARY})
-    set(CRYPTOPP_INCLUDE_DIRS ${CRYPTOPP_INCLUDE_DIR})
-    if(NOT TARGET CRYPTOPP::CRYPTOPP)
-        add_library(CRYPTOPP::CRYPTOPP UNKNOWN IMPORTED)
-        set_target_properties(CRYPTOPP::CRYPTOPP PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${CRYPTOPP_INCLUDE_DIR}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "CXX"
-                              IMPORTED_LOCATION ${CRYPTOPP_LIBRARY})
-   endif()
-endif()
diff --git a/cmake/modules/packages/FindDB2.cmake b/cmake/modules/packages/FindDB2.cmake
deleted file mode 100644
index 2fd2324b4a..0000000000
--- a/cmake/modules/packages/FindDB2.cmake
+++ /dev/null
@@ -1,103 +0,0 @@
-###############################################################################
-# CMake module to search for DB2 client library
-#
-# On success, the macro sets the following variables:
-# DB2_FOUND = if the library found
-# DB2_LIBRARY = full path to the library
-# DB2_LIBRARIES = full path to the library
-# DB2_INCLUDE_DIR = where to find the library headers
-#
-# Copyright (c) 2013 Denis Chapligin
-#
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-#
-###############################################################################
-
-if(UNIX)
-    set(DB2_INSTALL_PATHS
-        /opt/ibm/db2/V10.1
-        /opt/ibm/db2/V9.7
-        /opt/ibm/db2/V9.5
-        /opt/ibm/db2/V9.1
-        /opt/ibm/clidriver
-        /opt/clidriver)
-
-    if(CMAKE_SIZEOF_VOID_P EQUAL 4)
-        set(DB2_LIBDIRS "lib32" "lib")
-    else()
-        set(DB2_LIBDIRS "lib64" "lib")
-    endif()
-
-    set(DB2_FIND_INCLUDE_PATHS)
-    set(DB2_FIND_LIB_PATHS)
-    foreach(db2_install_path ${DB2_INSTALL_PATHS})
-        if (IS_DIRECTORY ${db2_install_path}/include)
-            set(DB2_FIND_INCLUDE_PATHS
-                ${DB2_FIND_INCLUDE_PATHS}
-                ${db2_install_path}/include)
-        endif()
-        foreach(db2_libdir ${DB2_LIBDIRS})
-            if (IS_DIRECTORY ${db2_install_path}/${db2_libdir})
-                set(DB2_FIND_LIB_PATHS
-                    ${DB2_FIND_LIB_PATHS}
-                    ${db2_install_path}/${db2_libdir})
-            endif()
-        endforeach(db2_libdir)
-    endforeach(db2_install_path)
-elseif(WIN32)
-    if (CMAKE_CL_64) # 64-bit build, DB2 64-bit installed
-        set(DB2_FIND_INCLUDE_PATHS $ENV{ProgramW6432}/IBM/SQLLIB/include)
-        set(DB2_FIND_LIB_PATHS     $ENV{ProgramW6432}/IBM/SQLLIB/lib)
-    else() # 32-bit build, DB2 64-bit or DB2 32-bit installed
-
-        if(EXISTS "$ENV{ProgramW6432}/IBM/SQLLIB/lib")
-            # On 64-bit Windows with DB2 64-bit installed:
-            # LIB environment points to {DB2}/IBM/SQLLIB/lib with64-bit db2api.lib,
-            # this flag prevents checking paths in LIB, so Win32 version can be detected
-            set(DB2_FIND_LIB_NO_LIB NO_SYSTEM_ENVIRONMENT_PATH)
-
-        endif()
-
-        set(DB2_FIND_INCLUDE_PATHS
-            $ENV{ProgramW6432}/IBM/SQLLIB/include
-            $ENV{ProgramFiles}/IBM/SQLLIB/include)
-        set(DB2_FIND_LIB_PATHS
-            $ENV{ProgramFiles}/IBM/SQLLIB/lib
-            $ENV{ProgramFiles}/IBM/SQLLIB/lib/win32
-            $ENV{ProgramW6432}/IBM/SQLLIB/lib/win32)
-    endif()
-endif()
-
-find_path(DB2_INCLUDE_DIR sqlcli1.h
-          $ENV{DB2_INCLUDE_DIR}
-          $ENV{DB2_DIR}/include
-          $ENV{DB2_HOME}
-          $ENV{IBM_DB_INCLUDE}
-          ${DB2_FIND_INCLUDE_PATHS})
-
-find_library(DB2_LIBRARY
-             NAMES db2 db2api
-             PATHS
-             $ENV{DB2LIB}
-             $ENV{IBM_DB_LIB}
-             ${DB2_FIND_LIB_PATHS}
-             ${DB2_FIND_LIB_NO_LIB})
-
-if(DB2_LIBRARY)
-    get_filename_component(DB2_LIBRARY_DIR ${DB2_LIBRARY} PATH)
-endif()
-
-if(DB2_INCLUDE_DIR AND DB2_LIBRARY_DIR)
-    set(DB2_FOUND TRUE)
-endif()
-
-set(DB2_LIBRARIES ${DB2_LIBRARY})
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(DB2
-                                  DEFAULT_MSG
-                                  DB2_INCLUDE_DIR
-                                  DB2_LIBRARIES)
-
-mark_as_advanced(DB2_INCLUDE_DIR DB2_LIBRARIES)
diff --git a/cmake/modules/packages/FindDeflate.cmake b/cmake/modules/packages/FindDeflate.cmake
deleted file mode 100644
index ef6a57654e..0000000000
--- a/cmake/modules/packages/FindDeflate.cmake
+++ /dev/null
@@ -1,116 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindDeflate
---------
-
-Find the native Deflate includes and library.
-
-IMPORTED Targets
-^^^^^^^^^^^^^^^^
-
-This module defines :prop_tgt:`IMPORTED` target ``Deflate::Deflate``, if
-Deflate has been found.
-
-Result Variables
-^^^^^^^^^^^^^^^^
-
-This module defines the following variables:
-
-::
-
-  Deflate_INCLUDE_DIRS   - where to find deflate.h, etc.
-  Deflate_LIBRARIES      - List of libraries when using deflate.
-  Deflate_FOUND          - True if deflate found.
-
-::
-
-  Deflate_VERSION_STRING - The version of deflate found (x.y.z)
-  Deflate_VERSION_MAJOR  - The major version of deflate
-  Deflate_VERSION_MINOR  - The minor version of deflate
-
-  Debug and Release variants are found separately.
-#]=======================================================================]
-
-# Standard names to search for
-set(Deflate_NAMES deflate deflatestatic)
-set(Deflate_NAMES_DEBUG deflated deflatestaticd)
-
-find_path(Deflate_INCLUDE_DIR
-          NAMES libdeflate.h
-          PATH_SUFFIXES include)
-
-set(Deflate_OLD_FIND_LIBRARY_PREFIXES "${CMAKE_FIND_LIBRARY_PREFIXES}")
-# Library has a "lib" prefix even on Windows.
-set(CMAKE_FIND_LIBRARY_PREFIXES "lib" "")
-
-# Allow Deflate_LIBRARY to be set manually, as the location of the deflate library
-if(NOT Deflate_LIBRARY)
-  find_library(Deflate_LIBRARY_RELEASE
-               NAMES ${Deflate_NAMES}
-               PATH_SUFFIXES lib)
-  find_library(Deflate_LIBRARY_DEBUG
-               NAMES ${Deflate_NAMES_DEBUG}
-               PATH_SUFFIXES lib)
-
-  include(SelectLibraryConfigurations)
-  select_library_configurations(Deflate)
-endif()
-
-set(CMAKE_FIND_LIBRARY_PREFIXES "${Deflate_OLD_FIND_LIBRARY_PREFIXES}")
-
-unset(Deflate_NAMES)
-unset(Deflate_NAMES_DEBUG)
-unset(Deflate_OLD_FIND_LIBRARY_PREFIXES)
-
-mark_as_advanced(Deflate_INCLUDE_DIR)
-
-if(Deflate_INCLUDE_DIR AND EXISTS "${Deflate_INCLUDE_DIR}/deflate.h")
-    file(STRINGS "${Deflate_INCLUDE_DIR}/libdeflate.h" Deflate_H REGEX "^#define LIBDEFLATE_VERSION_STRING\s+\"[^\"]*\"$")
-
-    string(REGEX REPLACE "^.*Deflate_VERSION \"([0-9]+).*$" "\\1" Deflate_MAJOR_VERSION "${Deflate_H}")
-    string(REGEX REPLACE "^.*Deflate_VERSION \"[0-9]+\\.([0-9]+).*$" "\\1" Deflate_MINOR_VERSION  "${Deflate_H}")
-    set(Deflate_VERSION_STRING "${Deflate_MAJOR_VERSION}.${Deflate_MINOR_VERSION}")
-
-    set(Deflate_MAJOR_VERSION "${Deflate_VERSION_MAJOR}")
-    set(Deflate_MINOR_VERSION "${Deflate_VERSION_MINOR}")
-endif()
-
-include(FindPackageHandleStandardArgs)
-FIND_PACKAGE_HANDLE_STANDARD_ARGS(Deflate
-        REQUIRED_VARS Deflate_LIBRARY Deflate_INCLUDE_DIR
-        VERSION_VAR Deflate_VERSION_STRING)
-
-if(Deflate_FOUND)
-    set(Deflate_INCLUDE_DIRS ${Deflate_INCLUDE_DIR})
-
-    if(NOT Deflate_LIBRARIES)
-        set(Deflate_LIBRARIES ${Deflate_LIBRARY})
-    endif()
-
-    if(NOT TARGET Deflate::Deflate)
-        add_library(Deflate::Deflate UNKNOWN IMPORTED)
-        set_target_properties(Deflate::Deflate PROPERTIES
-                INTERFACE_INCLUDE_DIRECTORIES "${Deflate_INCLUDE_DIRS}")
-
-        if(Deflate_LIBRARY_RELEASE)
-            set_property(TARGET Deflate::Deflate APPEND PROPERTY
-                    IMPORTED_CONFIGURATIONS RELEASE)
-            set_target_properties(Deflate::Deflate PROPERTIES
-                    IMPORTED_LOCATION_RELEASE "${Deflate_LIBRARY_RELEASE}")
-        endif()
-
-        if(Deflate_LIBRARY_DEBUG)
-            set_property(TARGET Deflate::Deflate APPEND PROPERTY
-                    IMPORTED_CONFIGURATIONS DEBUG)
-            set_target_properties(Deflate::Deflate PROPERTIES
-                    IMPORTED_LOCATION_DEBUG "${Deflate_LIBRARY_DEBUG}")
-        endif()
-
-        if(NOT Deflate_LIBRARY_RELEASE AND NOT Deflate_LIBRARY_DEBUG)
-            set_target_properties(Deflate::Deflate PROPERTIES
-                    IMPORTED_LOCATION_RELEASE "${Deflate_LIBRARY}")
-        endif()
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindECW.cmake b/cmake/modules/packages/FindECW.cmake
deleted file mode 100644
index 30cbce3e1f..0000000000
--- a/cmake/modules/packages/FindECW.cmake
+++ /dev/null
@@ -1,139 +0,0 @@
-###############################################################################
-# CMake module to search for ECW library - Enhanced Compression Wavelets for JPEG2000.
-#
-# Sets
-#   ECW_FOUND.  If false, don't try to use ecw
-#   ECW_INCLUDE_DIR
-#   ECW_LIBRARY
-#   ECW_VERSION
-#
-#   Imported target
-#   ECW::ECW_ALL
-#
-# Author:   Alexander Lisovenko, alexander.lisovenko@gmail.com
-# Author:   Dmitry Baryshnikov, bishop.dev@gmail.com, Hiroshi Miura
-# Copyright (C) 2016, NextGIS <info@nextgis.com>
-# Copyright (C) 2017,2018 Hiroshi Miura
-################################################################################
-
-if(NOT ECW_ROOT AND DEFINED ENV{ECW_ROOT})
-  set(ECW_ROOT "$ENV{ECW_ROOT}")
-endif()
-
-find_path(ECW_INCLUDE_DIR NCSECWClient.h)
-mark_as_advanced(ECW_INCLUDE_DIR)
-
-if (ECW_INCLUDE_DIR)
-    set(MAJOR_VERSION 0)
-    set(MINOR_VERSION 0)
-    set(SRV_VERSION 0)
-    set(BLD_VERSION 0)
-
-    if (EXISTS "${ECW_INCLUDE_DIR}/ECWJP2BuildNumber.h")
-        file(READ "${ECW_INCLUDE_DIR}/ECWJP2BuildNumber.h" VERSION_H_CONTENTS)
-        string(REGEX MATCH "_VER_MAJOR[ \t]+([0-9]+)" MAJOR_VERSION ${VERSION_H_CONTENTS})
-        string(REGEX MATCH "([0-9]+)" MAJOR_VERSION ${MAJOR_VERSION})
-        string(REGEX MATCH "_VER_MINOR[ \t]+([0-9]+)" MINOR_VERSION ${VERSION_H_CONTENTS})
-        string(REGEX MATCH "([0-9]+)" MINOR_VERSION ${MINOR_VERSION})
-        string(REGEX MATCH "_VER_SERVICE[ \t]+([0-9]+)" SRV_VERSION ${VERSION_H_CONTENTS})
-        string(REGEX MATCH "([0-9]+)" SRV_VERSION ${SRV_VERSION})
-        string(REGEX MATCH "_VER_SERVICE[ \t]+([0-9]+)" BLD_VERSION ${VERSION_H_CONTENTS})
-        string(REGEX MATCH "([0-9]+)" BLD_VERSION ${BLD_VERSION})
-        set(ECW_VERSION_STRING "${MAJOR_VERSION}.${MINOR_VERSION}")
-        unset(VERSION_H_CONTENTS)
-    endif()
-
-    if(EXISTS "${ECW_INCLUDE_DIR}/NCSBuildNumber.h")
-        file(READ "${ECW_INCLUDE_DIR}/NCSBuildNumber.h" VERSION_H_CONTENTS)
-        string(REGEX MATCH "NCS_VERSION_NUMBER[ \t]+([0-9,]+)" ECW_VERSION_NUMBER ${VERSION_H_CONTENTS})
-        string(REGEX MATCH "([0-9]+),[0-9]+,[0-9]+,[0-9]+" MAJOR_VERSION ${ECW_VERSION_NUMBER})
-        string(REGEX MATCH "[0-9]+,([0-9]+),[0-9]+,[0-9]+" MINOR_VERSION ${ECW_VERSION_NUMBER})
-        string(REGEX MATCH "[0-9]+,[0-9]+,([0-9]+),[0-9]+" SRV_VERSION ${ECW_VERSION_NUMBER})
-        string(REGEX MATCH "[0-9]+,[0-9]+,[0-9]+,([0-9]+)" BLD_VERSION ${ECW_VERSION_NUMBER})
-        string(REGEX REPLACE "," "." ECW_VERSION_STRING ${ECW_VERSION_NUMBER})
-        string(REGEX MATCH "NCS_ECWSDK_VERSION_NUMBER[ \t]+([0-9.]+)" ECWSDK_VERSION_NUMBER ${VERSION_H_CONTENTS})
-        unset(VERSION_H_CONTENTS)
-    endif()
-endif()
-
-include(FindPackageHandleStandardArgs)
-
-if (ECW_VERSION_STRING VERSION_GREATER_EQUAL 5.5)
-    if("${CMAKE_SYSTEM_PROCESSOR}" MATCHES "(x86_64|AMD64)")
-        set(ECW_ARCH x64)
-    else()
-        if(WIN32)
-            set(ECW_ARCH Win32)
-        else()
-            set(ECW_ARCH x86)
-        endif()
-    endif()
-
-    find_library(ECW_LIBRARY NCSEcw
-                 HINTS ${ECW_ROOT}/lib/cpp11abi/${ECW_ARCH}/release
-                       ${ECW_ROOT}/lib/vc141/${ECW_ARCH})
-    mark_as_advanced(ECW_LIBRARY)
-    find_package_handle_standard_args(ECW
-                                      REQUIRED_VARS ECW_LIBRARY ECW_INCLUDE_DIR
-                                      VERSION_VAR ECW_VERSION_STRING)
-    if(ECW_FOUND)
-        set(ECW_LIBRARIES ${ECW_LIBRARY})
-        set(ECW_INCLUDE_DIRS ${ECW_INCLUDE_DIR})
-        if(NOT TARGET ECW::ECW_ALL)
-            add_library(ECW::ECW_ALL UNKNOWN IMPORTED)
-            set_target_properties(ECW::ECW_ALL PROPERTIES
-                                INTERFACE_INCLUDE_DIRECTORIES "${ECW_INCLUDE_DIRS}"
-                                INTERFACE_COMPILE_DEFINITIONS "HAVE_COMPRESS"
-                                IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                                IMPORTED_LOCATION "${ECW_LIBRARY}")
-        endif()
-    endif()
-elseif(ECW_VERSION_STRING VERSION_GREATER_EQUAL 4.0)
-    # We could likely handle other versions, but not done currently
-    message(FATAL_ERROR "Only ECW SDK 3.3 and >= 5.5 are supported")
-else()
-    # Case of ECW SDK 3.3. We need to find extra libraries than the base NCSEcw.
-    find_library(ECW_LIBRARY NCSEcw)
-    find_library(ECWnet_LIBRARY NCSCnet)
-    find_library(ECWC_LIBRARY NCSEcwC)
-    find_library(NCSUtil_LIBRARY NCSUtil)
-    mark_as_advanced(ECW_LIBRARY ECWnet_LIBRARY ECWC_LIBRARY NCSUtil_LIBRARY)
-    find_package_handle_standard_args(ECW
-                                      REQUIRED_VARS ECW_LIBRARY ECWnet_LIBRARY ECWC_LIBRARY NCSUtil_LIBRARY ECW_INCLUDE_DIR
-                                      VERSION_VAR ECW_VERSION_STRING)
-    if(ECW_FOUND)
-        set(ECW_LIBRARIES ${ECW_LIBRARY} ${ECWnet_LIBRARY} ${ECWC_LIBRARY} ${NCSUtil_LIBRARY})
-        set(ECW_INCLUDE_DIRS ${ECW_INCLUDE_DIR})
-        if(NOT TARGET ECW::ECW)
-            add_library(ECW::ECW UNKNOWN IMPORTED)
-            set_target_properties(ECW::ECW PROPERTIES
-                                INTERFACE_INCLUDE_DIRECTORIES "${ECW_INCLUDE_DIRS}"
-                                IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                                IMPORTED_LOCATION "${ECW_LIBRARY}")
-        endif()
-        if(NOT TARGET ECW::ECWC)
-            add_library(ECW::ECWC UNKNOWN IMPORTED)
-            set_target_properties(ECW::ECWC PROPERTIES
-                                  IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                                  IMPORTED_LOCATION "${ECWC_LIBRARY}")
-        endif()
-        if(NOT TARGET ECW::ECWnet)
-            add_library(ECW::ECWnet UNKNOWN IMPORTED)
-            set_target_properties(ECW::ECWnet PROPERTIES
-                                  IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                                  IMPORTED_LOCATION "${ECWnet_LIBRARY}")
-        endif()
-        if(NOT TARGET ECW::NCSUtil)
-            add_library(ECW::NCSUtil UNKNOWN IMPORTED)
-            set_target_properties(ECW::NCSUtil PROPERTIES
-                                  IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                                  IMPORTED_LOCATION "${NCSUtil_LIBRARY}")
-        endif()
-        if(NOT TARGET ECW::ECW_ALL)
-            add_library(ECW::ECW_ALL INTERFACE IMPORTED)
-            set_target_properties(ECW::ECW_ALL PROPERTIES
-                         INTERFACE_INCLUDE_DIRECTORIES "${ECW_INCLUDE_DIRS}"
-                         INTERFACE_LINK_LIBRARIES "ECW::ECW;ECW::ECWC;ECW::ECWnet;ECW::NCSUtil")
-        endif()
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindFYBA.cmake b/cmake/modules/packages/FindFYBA.cmake
deleted file mode 100644
index 3596a0a432..0000000000
--- a/cmake/modules/packages/FindFYBA.cmake
+++ /dev/null
@@ -1,38 +0,0 @@
-# - Try to find the FYBA library
-#
-# Once done this will define
-#
-#  FYBA_FOUND - System has libgta
-#  FYBA_INCLUDE_DIR - The libgta include directory
-#  FYBA_LIBRARIES - The libraries needed to use libgta
-
-find_path(FYBA_INCLUDE_DIR
-          NAMES fyba.h
-          PATH_SUFFIXES fyba)
-find_library(FYBA_FYBA_LIBRARY NAMES fyba)
-find_library(FYBA_FYGM_LIBRARY NAMES fygm)
-find_library(FYBA_FYUT_LIBRARY NAMES fyut)
-mark_as_advanced(FYBA_INCLUDE_DIR FYBA_FYBA_LIBRARY FYBA_FYGM_LIBRARY FYBA_FYUT_LIBRARY)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(FYBA
-                                  REQUIRED_VARS FYBA_FYBA_LIBRARY FYBA_FYGM_LIBRARY FYBA_FYUT_LIBRARY FYBA_INCLUDE_DIR)
-if(FYBA_FOUND)
-    set(FYBA_LIBRARIES ${FYBA_FYBA_LIBRARY} ${FYBA_FYGM_LIBRARY} ${FYBA_FYUT_LIBRARY})
-    set(FYBA_INCLUDE_DIRS ${FYBA_INCLUDE_DIR})
-    if(NOT TARGET FYBA::FYBA)
-        add_library(FYBA::FYBA UNKNOWN IMPORTED)
-        set_target_properties(FYBA::FYBA PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${FYBA_INCLUDE_DIR}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES C
-                              IMPORTED_LOCATION ${FYBA_FYBA_LIBRARY})
-        add_library(FYBA::FYGM UNKNOWN IMPORTED)
-        set_target_properties(FYBA::FYGM PROPERTIES
-                              IMPORTED_LINK_INTERFACE_LANGUAGES C
-                              IMPORTED_LOCATION ${FYBA_FYGM_LIBRARY})
-        add_library(FYBA::FYUT UNKNOWN IMPORTED)
-        set_target_properties(FYBA::FYUT PROPERTIES
-                              IMPORTED_LINK_INTERFACE_LANGUAGES C
-                              IMPORTED_LOCATION ${FYBA_FYUT_LIBRARY})
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindFileGDB.cmake b/cmake/modules/packages/FindFileGDB.cmake
deleted file mode 100644
index 1545e58af6..0000000000
--- a/cmake/modules/packages/FindFileGDB.cmake
+++ /dev/null
@@ -1,96 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#.rst:
-# Find FGDB - ESRI File Geodatabaselibrary
-# ~~~~~~~~~
-#
-# Copyright (c) 2017,2018 Hiroshi Miura <miurahr@linux.com>
-#
-# ::
-#
-# If it's found it sets FileGDB_FOUND to TRUE
-# and following variables are set:
-#    FileGDB_INCLUDE_DIR
-#    FileGDB_LIBRARY
-#    FileGDB_VERSION
-#
-# Select a FGDB API to use, or disable driver.
-
-if(CMAKE_VERSION VERSION_LESS 3.13)
-    set(FileGDB_ROOT CACHE PATH "")
-endif()
-
-find_path(FileGDB_INCLUDE_DIR NAMES FileGDBAPI.h
-          PATHS /usr/local/filegdb/include "${FileGDB_ROOT}/include")
-mark_as_advanced(FileGDB_INCLUDE_DIR)
-
-if(FileGDB_INCLUDE_DIR)
-    if(WIN32)
-        if(NOT FileGDB_LIBRARY)
-          find_library(FileGDB_LIBRARY_RELEASE NAMES
-              FileGDBAPI
-              PATHS "${FileGDB_ROOT}/lib" "${FileGDB_ROOT}/lib64"
-          )
-          mark_as_advanced(FileGDB_LIBRARY_RELEASE)
-
-          find_library(FileGDB_LIBRARY_DEBUG NAMES
-              FileGDBAPID
-              PATHS "${FileGDB_ROOT}/lib" "${FileGDB_ROOT}/lib64"
-          )
-          mark_as_advanced(FileGDB_LIBRARY_DEBUG)
-
-          include(SelectLibraryConfigurations)
-          select_library_configurations(FileGDB)
-        endif()
-    else()
-        mark_as_advanced(FileGDB_LIBRARY)
-
-        find_library(FileGDB_LIBRARY NAMES FileGDBAPI PATHS "${FileGDB_ROOT}/lib" "${FileGDB_ROOT}/lib64")
-        include(CheckCXXSourceCompiles)
-        cmake_push_check_state(RESET)
-        check_cxx_source_compiles("#include <FileGDBAPI.h>\nusing namespace FileGDBAPI;\n
-                int main() { Geodatabase oDB; std::wstring osStr; ::OpenGeodatabase(osStr, oDB); return 0; }" TEST_FileGDB_COMPILE)
-        cmake_pop_check_state()
-        if(NOT TEST_FileGDB_COMPILE)
-            set(FileGDB_FOUND FALSE)
-        endif()
-    endif()
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(FileGDB
-                                  FOUND_VAR FileGDB_FOUND
-                                  REQUIRED_VARS FileGDB_LIBRARY FileGDB_INCLUDE_DIR)
-
-if(FileGDB_FOUND)
-    set(FileGDB_INCLUDE_DIRS ${FileGDB_INCLUDE_DIR})
-    set(FileGDB_LIBRARIES ${FileGDB_LIBRARY})
-    if(NOT TARGET FILEGDB::FileGDB)
-        add_library(FILEGDB::FileGDB UNKNOWN IMPORTED)
-        set_target_properties(FILEGDB::FileGDB PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES "${FileGDB_INCLUDE_DIR}"
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C")
-
-        if(EXISTS "${FileGDB_LIBRARY}")
-          set_target_properties(FILEGDB::FileGDB PROPERTIES
-            IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-            IMPORTED_LOCATION "${FileGDB_LIBRARY}")
-        endif()
-        if(FileGDB_LIBRARY_RELEASE)
-          set_property(TARGET FILEGDB::FileGDB APPEND PROPERTY
-            IMPORTED_CONFIGURATIONS RELEASE)
-          set_target_properties(FILEGDB::FileGDB PROPERTIES
-            IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-            IMPORTED_LOCATION_RELEASE "${FileGDB_LIBRARY_RELEASE}")
-        endif()
-        if(FileGDB_LIBRARY_DEBUG)
-          set_property(TARGET FILEGDB::FileGDB APPEND PROPERTY
-            IMPORTED_CONFIGURATIONS DEBUG)
-          set_target_properties(FILEGDB::FileGDB PROPERTIES
-            IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-            IMPORTED_LOCATION_DEBUG "${FileGDB_LIBRARY_DEBUG}")
-        endif()
-
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindFreeXL.cmake b/cmake/modules/packages/FindFreeXL.cmake
deleted file mode 100644
index 6c86fb8eb9..0000000000
--- a/cmake/modules/packages/FindFreeXL.cmake
+++ /dev/null
@@ -1,66 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindFreeXL
-----------
-
-Find the FreeXL includes and get all installed freexl library settings
-
-The following vars are set if freexl is found.
-
-.. variable:: FREEXL_FOUND
-
-  True if found, otherwise all other vars are undefined
-
-.. variable:: FREEXL_INCLUDE_DIR
-
-  The include dir for main *.h files
-
-.. variable:: FREEXL_VERSION_STRING
-
-  full version (e.g. 4.2.0)
-
-.. variable:: FREEXL_VERSION_MAJOR
-
-  major part of version (e.g. 4)
-
-.. variable:: FREEXL_VERSION_MINOR
-
-  minor part (e.g. 2)
-
-#]=======================================================================]
-
-
-include(FindPackageHandleStandardArgs)
-include(SelectLibraryConfigurations)
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-    pkg_check_modules(PC_FREEXL QUIET freexl)
-endif()
-
-find_path(FREEXL_INCLUDE_DIR
-          NAMES freexl.h
-          HINTS ${PC_FREEXL_INCLUDE_DIRS})
-find_library(FREEXL_LIBRARY
-             NAMES freexl_i freexl
-             HINTS ${PC_FREEXL_LIBRARY_DIRS})
-
-mark_as_advanced(FREEXL_INCLUDE_DIR FREEXL_LIBRARY)
-find_package_handle_standard_args(FreeXL
-                                  FOUND_VAR FREEXL_FOUND
-                                  REQUIRED_VARS FREEXL_LIBRARY FREEXL_INCLUDE_DIR)
-
-if(FREEXL_FOUND)
-    set(FREEXL_LIBRARIES ${FREEXL_LIBRARY})
-    set(FREEXL_INCLUDE_DIRS ${FREEXL_INCLUDE_DIR})
-
-    if(NOT TARGET FREEXL::freexl)
-        add_library(FREEXL::freexl UNKNOWN IMPORTED)
-        set_target_properties(FREEXL::freexl PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES "${FREEXL_INCLUDE_DIR}"
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION "${FREEXL_LIBRARY}")
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindGEOS.cmake b/cmake/modules/packages/FindGEOS.cmake
deleted file mode 100644
index cb98a85ca3..0000000000
--- a/cmake/modules/packages/FindGEOS.cmake
+++ /dev/null
@@ -1,48 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#.rst:
-# FindGEOS
-# -----------
-#
-# CMake module to search for GEOS library
-#
-# Copyright (C) 2017-2018, Hiroshi Miura
-# Copyright (c) 2008, Mateusz Loskot <mateusz@loskot.net>
-# (based on FindGDAL.cmake by Magnus Homann)
-#
-# If it's found it sets GEOS_FOUND to TRUE
-# and following variables are set:
-#    GEOS_INCLUDE_DIR
-#    GEOS_LIBRARY
-#
-
-find_program(GEOS_CONFIG geos-config)
-if(GEOS_CONFIG)
-    exec_program(${GEOS_CONFIG} ARGS --version OUTPUT_VARIABLE GEOS_VERSION)
-    exec_program(${GEOS_CONFIG} ARGS --prefix OUTPUT_VARIABLE GEOS_PREFIX)
-endif()
-
-find_path(GEOS_INCLUDE_DIR NAMES geos_c.h
-          HINTS ${GEOS_PREFIX}/include)
-find_library(GEOS_LIBRARY NAMES geos_c
-             HINTS ${GEOS_PREFIX}/lib)
-mark_as_advanced(GEOS_INCLUDE_DIR GEOS_LIBRARY)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(GEOS FOUND_VAR GEOS_FOUND
-                                  REQUIRED_VARS GEOS_LIBRARY GEOS_INCLUDE_DIR)
-
-if(GEOS_FOUND)
-    set(GEOS_LIBRARIES ${GEOS_LIBRARY})
-    set(GEOS_INCLUDE_DIRS ${GEOS_INCLUDE_DIR})
-    set(GEOS_TARGET GEOS::GEOS)
-
-    if(NOT TARGET ${GEOS_TARGET})
-        add_library(${GEOS_TARGET} UNKNOWN IMPORTED)
-        set_target_properties(${GEOS_TARGET} PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES "${GEOS_INCLUDE_DIR}"
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION "${GEOS_LIBRARY}")
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindGIF.cmake b/cmake/modules/packages/FindGIF.cmake
deleted file mode 100644
index 8ee88f41e4..0000000000
--- a/cmake/modules/packages/FindGIF.cmake
+++ /dev/null
@@ -1,96 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#.rst:
-# FindGIF
-# -------
-#
-# This finds the GIF library (giflib)
-#
-# The module defines the following variables:
-#
-# ``GIF_FOUND``
-#   True if giflib was found
-# ``GIF_LIBRARIES``
-#   Libraries to link to in order to use giflib
-# ``GIF_INCLUDE_DIR``
-#   where to find the headers
-# ``GIF_VERSION``
-#   3, 4 or a full version string (eg 5.1.4) for versions >= 4.1.6
-#
-# The minimum required version of giflib can be specified using the
-# standard syntax, e.g.  find_package(GIF 4)
-#
-
-# Created by Eric Wing.
-# Modifications by Alexander Neundorf, Ben Campbell
-
-find_path(GIF_INCLUDE_DIR gif_lib.h
-  HINTS ${GIF_ROOT}
-  PATH_SUFFIXES include)
-
-# the gif library can have many names :-/
-set(POTENTIAL_GIF_LIBS gif libgif ungif libungif giflib giflib4)
-
-find_library(GIF_LIBRARY
-  NAMES ${POTENTIAL_GIF_LIBS}
-  HINTS ${GIF_ROOT}
-  PATH_SUFFIXES lib)
-
-# see readme.txt
-set(GIF_LIBRARIES ${GIF_LIBRARY})
-
-# Very basic version detection.
-# The GIF_LIB_VERSION string in gif_lib.h seems to be unreliable, since it seems
-# to be always " Version 2.0, " in versions 3.x of giflib.
-# In version 4 the member UserData was added to GifFileType, so we check for this
-# one.
-# Versions after 4.1.6 define GIFLIB_MAJOR, GIFLIB_MINOR, and GIFLIB_RELEASE
-# see http://giflib.sourceforge.net/gif_lib.html#compatibility
-if(GIF_INCLUDE_DIR)
-  include(CMakePushCheckState)
-  include(CheckStructHasMember)
-  CMAKE_PUSH_CHECK_STATE()
-  set(CMAKE_REQUIRED_QUIET ${GIF_FIND_QUIETLY})
-  set(CMAKE_REQUIRED_INCLUDES "${GIF_INCLUDE_DIR}")
-
-  # Check for the specific version defines (>=4.1.6 only)
-  file(STRINGS ${GIF_INCLUDE_DIR}/gif_lib.h _GIF_DEFS REGEX "^[ \t]*#define[ \t]+GIFLIB_(MAJOR|MINOR|RELEASE)")
-  if(_GIF_DEFS)
-    # yay - got exact version info
-    string(REGEX REPLACE ".*GIFLIB_MAJOR ([0-9]+).*" "\\1" _GIF_MAJ "${_GIF_DEFS}")
-    string(REGEX REPLACE ".*GIFLIB_MINOR ([0-9]+).*" "\\1" _GIF_MIN "${_GIF_DEFS}")
-    string(REGEX REPLACE ".*GIFLIB_RELEASE ([0-9]+).*" "\\1" _GIF_REL "${_GIF_DEFS}")
-    set(GIF_VERSION "${_GIF_MAJ}.${_GIF_MIN}.${_GIF_REL}")
-  else()
-    # use UserData field to sniff version instead
-    CHECK_STRUCT_HAS_MEMBER(GifFileType UserData gif_lib.h GIF_GifFileType_UserData )
-    if(GIF_GifFileType_UserData)
-      set(GIF_VERSION 4)
-    else()
-      set(GIF_VERSION 3)
-    endif()
-  endif()
-
-  unset(_GIF_MAJ)
-  unset(_GIF_MIN)
-  unset(_GIF_REL)
-  unset(_GIF_DEFS)
-  CMAKE_POP_CHECK_STATE()
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(GIF  REQUIRED_VARS  GIF_LIBRARY  GIF_INCLUDE_DIR
-                                       VERSION_VAR GIF_VERSION )
-
-mark_as_advanced(GIF_INCLUDE_DIR GIF_LIBRARY)
-
-if(GIF_FOUND)
-  if(NOT TARGET GIF::GIF)
-    add_library(GIF::GIF UNKNOWN IMPORTED)
-    set_target_properties(GIF::GIF PROPERTIES
-                          INTERFACE_INCLUDE_DIRECTORIES ${GIF_INCLUDE_DIR}
-                          IMPORTED_LINK_INTERFACE_LANGUAGES C
-                          IMPORTED_LOCATION ${GIF_LIBRARY})
-  endif()
-endif()
\ No newline at end of file
diff --git a/cmake/modules/packages/FindGeoTIFF.cmake b/cmake/modules/packages/FindGeoTIFF.cmake
deleted file mode 100644
index a0c491b9c0..0000000000
--- a/cmake/modules/packages/FindGeoTIFF.cmake
+++ /dev/null
@@ -1,104 +0,0 @@
-###############################################################################
-#
-# CMake module to search for GeoTIFF library
-#
-# On success, the macro sets the following variables:
-# GEOTIFF_FOUND       = if the library found
-# GEOTIFF_LIBRARIES   = full path to the library
-# GEOTIFF_INCLUDE_DIR = where to find the library headers
-# also defined, but not for general use are
-# GEOTIFF_LIBRARY
-#
-# Copyright (c) 2009 Mateusz Loskot <mateusz@loskot.net>
-# Copyright (c) 2016 NextGIS <info@nextgis.com>
-# Copyright (C) 2017,2018 Hiroshi Miura
-#
-# Origin from
-# https://svn.osgeo.org/metacrs/geotiff/trunk/libgeotiff/cmake/FindGeoTIFF.cmake
-# Module source: http://github.com/mloskot/workshop/tree/master/cmake/
-#
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-#
-###############################################################################
-
-find_path(GEOTIFF_INCLUDE_DIR geotiff.h PATH_SUFFIXES geotiff libgeotiff)
-
-set(GEOTIFF_NAMES ${GEOTIFF_NAMES} geotiff geotiff_i)
-set(GEOTIFF_NAMES_DEBUG ${GEOTIFF_NAMES_DEBUG} geotiffd geotiff_d geotiff_d_i)
-
-if(NOT GEOTIFF_LIBRARY)
-  find_library(GEOTIFF_LIBRARY_RELEASE NAMES ${GEOTIFF_NAMES})
-  find_library(GEOTIFF_LIBRARY_DEBUG NAMES ${GEOTIFF_NAMES_DEBUG})
-  include(SelectLibraryConfigurations)
-  select_library_configurations(GEOTIFF)
-  mark_as_advanced(GEOTIFF_LIBRARY_RELEASE GEOTIFF_LIBRARY_DEBUG)
-endif()
-
-unset(GEOTIFF_NAMES)
-unset(GEOTIFF_NAMES_DEBUG)
-
-
-if(GEOTIFF_INCLUDE_DIR)
-    set(GEOTIFF_MAJOR_VERSION 0)
-    set(GEOTIFF_MINOR_VERSION 0)
-    set(GEOTIFF_PATCH_VERSION 0)
-    set(GEOTIFF_REVISION_VERSION 0)
-
-    if(EXISTS "${GEOTIFF_INCLUDE_DIR}/geotiff.h")
-        file(READ "${GEOTIFF_INCLUDE_DIR}/geotiff.h" GEOTIFF_H_CONTENTS)
-    string(REGEX MATCH "LIBGEOTIFF_VERSION[ \t]+([0-9]+)"
-      LIBGEOTIFF_VERSION ${GEOTIFF_H_CONTENTS})
-    string (REGEX MATCH "([0-9]+)"
-      LIBGEOTIFF_VERSION ${LIBGEOTIFF_VERSION})
-
-    string(SUBSTRING ${LIBGEOTIFF_VERSION} 0 1 GEOTIFF_MAJOR_VERSION)
-    string(SUBSTRING ${LIBGEOTIFF_VERSION} 1 1 GEOTIFF_MINOR_VERSION)
-    string(SUBSTRING ${LIBGEOTIFF_VERSION} 2 1 GEOTIFF_PATCH_VERSION)
-    string(SUBSTRING ${LIBGEOTIFF_VERSION} 3 1 GEOTIFF_REVISION_VERSION)
-
-    unset(GEOTIFF_H_CONTENTS)
-    endif()
-
-    set(GEOTIFF_VERSION_STRING "${GEOTIFF_MAJOR_VERSION}.${GEOTIFF_MINOR_VERSION}.${GEOTIFF_PATCH_VERSION}.${GEOTIFF_REVISION_VERSION}")
-
-endif()
-mark_as_advanced(GEOTIFF_LIBRARY GEOTIFF_INCLUDE_DIR)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(GeoTIFF
-                                  FOUND_VAR GEOTIFF_FOUND
-                                  REQUIRED_VARS GEOTIFF_LIBRARY GEOTIFF_INCLUDE_DIR
-                                  VERSION_VAR GEOTIFF_VERSION_STRING)
-
-if(GEOTIFF_FOUND)
-    set(GEOTIFF_LIBRARIES ${GEOTIFF_LIBRARY})
-    set(GEOTIFF_INCLUDE_DIRS ${GEOTIFF_INCLUDE_DIR})
-    set(GeoTIFF_TARGET GEOTIFF::GEOTIFF)
-    if(NOT TARGET ${GeoTIFF_TARGET})
-        add_library(${GeoTIFF_TARGET} UNKNOWN IMPORTED)
-        set_target_properties(${GeoTIFF_TARGET} PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${GEOTIFF_INCLUDE_DIR}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES C)
-        if(EXISTS "${GEOTIFF_LIBRARY}")
-          set_target_properties(${GeoTIFF_TARGET} PROPERTIES
-            IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-            IMPORTED_LOCATION "${GEOTIFF_LIBRARY}")
-        endif()
-        if(EXISTS "${GEOTIFF_LIBRARY_RELEASE}")
-          set_property(TARGET ${GeoTIFF_TARGET} APPEND PROPERTY
-            IMPORTED_CONFIGURATIONS RELEASE)
-          set_target_properties(${GeoTIFF_TARGET} PROPERTIES
-            IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
-            IMPORTED_LOCATION_RELEASE "${GEOTIFF_LIBRARY_RELEASE}")
-        endif()
-        if(EXISTS "${GEOTIFF_LIBRARY_DEBUG}")
-          set_property(TARGET ${GeoTIFF_TARGET} APPEND PROPERTY
-            IMPORTED_CONFIGURATIONS DEBUG)
-          set_target_properties(${GeoTIFF_TARGET} PROPERTIES
-            IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "C"
-            IMPORTED_LOCATION_DEBUG "${GEOTIFF_LIBRARY_DEBUG}")
-        endif()
-    endif()
-endif()
-
diff --git a/cmake/modules/packages/FindHDF4.cmake b/cmake/modules/packages/FindHDF4.cmake
deleted file mode 100644
index 063030ed38..0000000000
--- a/cmake/modules/packages/FindHDF4.cmake
+++ /dev/null
@@ -1,130 +0,0 @@
-#
-# To be used by projects that make use of CMakeified hdf-4.2
-#
-
-#[=======================================================================[.rst:
-FindHDF4
----------
-
-Find the HDF4 includes and get all installed hdf4 library settings
-
-The following vars are set if hdf4 is found.
-
-.. variable:: HDF4_FOUND
-
-  True if found, otherwise all other vars are undefined
-
-IMPORTED targets
-^^^^^^^^^^^^^^^^
-This module defines the following :prop_tgt:`IMPORTED` target:
-``HDF4::HDF4``
-#
-#]=======================================================================]
-#
-
-
-include(SelectLibraryConfigurations)
-
-set(HDF4_PATHS
-    /usr/lib/hdf4
-    /usr/local/hdf4
-    )
-
-find_path(HDF4_INCLUDE_DIR hdf.h
-          PATHS ${HDF4_PATHS}
-          PATH_SUFFIXES
-          include
-          Include
-          hdf
-          hdf4
-          )
-mark_as_advanced(HDF4_INCLUDE_DIR)
-
-if(HDF4_INCLUDE_DIR AND EXISTS "${HDF4_INCLUDE_DIR}/hfile.h")
-    file(STRINGS "${HDF4_INCLUDE_DIR}/hfile.h" hdf4_version_string
-         REGEX "^#define[\t ]+LIBVER.*")
-    string(REGEX MATCH "LIBVER_MAJOR[ \t]+([0-9]+)" HDF4_VERSION_MAJOR "${hdf4_version_string}")
-    string(REGEX MATCH "([0-9]+)" HDF4_VERSION_MAJOR ${HDF4_VERSION_MAJOR})
-    string(REGEX MATCH "LIBVER_MINOR[ \t]+([0-9]+)" HDF4_VERSION_MINOR "${hdf4_version_string}")
-    string(REGEX MATCH "([0-9]+)" HDF4_VERSION_MINOR ${HDF4_VERSION_MINOR})
-    string(REGEX MATCH "LIBVER_RELEASE[ \t]+([0-9]+)" HDF4_VERSION_RELEASE "${hdf4_version_string}")
-    string(REGEX MATCH "([0-9]+)" HDF4_VERSION_RELEASE ${HDF4_VERSION_RELEASE})
-    string(REGEX MATCH "LIBVER_SUBRELEASE[ \t]+([0-9A-Za-z]+)" HDF4_VERSION_SUBRELEASE "${hdf4_version_string}")
-    unset(hdf4_version_string)
-    if(NOT HDF4_VERSION_SUBRELEASE STREQUAL "")
-        string(REGEX MATCH "([0-9A-Za-z]+)" LIBVER_SUBRELEASE ${LIBVER_SUBRELEASE})
-        set(HDF4_VERSION_STRING "${HDF4_VERSION_MAJOR}.${HDF4_VERSION_MINOR}.${HDF4_VERSION_RELEASE}_${HDF4_VERSION_SUBRELEASE}")
-    else()
-        set(HDF4_VERSION_STRING "${HDF4_VERSION_MAJOR}.${HDF4_VERSION_MINOR}.${HDF4_VERSION_RELEASE}")
-    endif()
-endif()
-
-if(NOT DEFINED HDF4_COMPONENTS)
-  set(HDF4_COMPONENTS df mfhdf xdr szip)
-endif()
-
-if(HDF4_INCLUDE_DIR)
-    # Debian supplies the HDF4 library which does not conflict with NetCDF.
-    # Test for Debian flavor first. Hint: install the libhdf4-alt-dev package.
-    foreach(tgt IN LISTS HDF4_COMPONENTS)
-        if(tgt STREQUAL "df")
-          # hdf.lib (dynamic) used by conda, but libhdf.lib (static) also present
-          set(_names_debug  ${tgt}altd ${tgt}d hdfd libhdfd)
-          set(_names_release ${tgt}alt ${tgt} hdf libhdf)
-        else()
-          set(_names_debug  ${tgt}altd ${tgt}d)
-          set(_names_release ${tgt}alt ${tgt})
-        endif()
-        find_library(HDF4_${tgt}_LIBRARY_DEBUG
-                     NAMES ${_names_debug}
-                     PATHS ${HDF4_PATHS}/lib)
-        find_library(HDF4_${tgt}_LIBRARY_RELEASE
-                     NAMES ${_names_release}
-                     PATHS ${HDF4_PATHS}/lib)
-        select_library_configurations(HDF4_${tgt})
-        mark_as_advanced(HDF4_${tgt}_LIBRARY HDF4_${tgt}_LIBRARY_RELEASE HDF4_${tgt}_LIBRARY_DEBUG )
-    endforeach()
-
-    set(HDF4_LIBRARIES)
-    foreach(_comp IN LISTS HDF4_COMPONENTS)
-        if(HDF4_${_comp}_LIBRARY)
-            list(APPEND HDF4_LIBRARIES "${HDF4_${_comp}_LIBRARY}")
-        endif()
-    endforeach()
-
-    if(WIN32)
-        find_library(WS2_32_LIBRARY ws2_32)
-        if(WS2_32_LIBRARY)
-          list(APPEND HDF4_LIBRARIES ${WS2_32_LIBRARY})
-        endif()
-    endif()
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(HDF4
-                                  FOUND_VAR HDF4_FOUND
-                                  REQUIRED_VARS HDF4_df_LIBRARY HDF4_mfhdf_LIBRARY HDF4_INCLUDE_DIR
-                                  VERSION_VAR HDF4_VERSION_STRING
-                                  HANDLE_COMPONENTS
-                                  )
-
-# set output variables
-if(HDF4_FOUND)
-  if(NOT TARGET HDF4::HDF4)
-      set(INCR 1)
-      set(HDF4_TARGETS)
-      foreach(_lib IN LISTS HDF4_LIBRARIES)
-          add_library(HDF4::HDF4_${INCR} UNKNOWN IMPORTED)
-          set_target_properties(HDF4::HDF4_${INCR} PROPERTIES
-                                IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                                IMPORTED_LOCATION "${_lib}")
-          list(APPEND HDF4_TARGETS HDF4::HDF4_${INCR})
-          math(EXPR INCR "${INCR}+1")
-      endforeach()
-
-      add_library(HDF4::HDF4 INTERFACE IMPORTED)
-      set_target_properties(HDF4::HDF4 PROPERTIES
-                            INTERFACE_INCLUDE_DIRECTORIES ${HDF4_INCLUDE_DIR}
-                            INTERFACE_LINK_LIBRARIES "${HDF4_TARGETS}")
-  endif()
-endif()
diff --git a/cmake/modules/packages/FindHDFS.cmake b/cmake/modules/packages/FindHDFS.cmake
deleted file mode 100644
index 9688e79a24..0000000000
--- a/cmake/modules/packages/FindHDFS.cmake
+++ /dev/null
@@ -1,54 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindHDFS
---------
-
-The following vars are set if HDFS (the native library provided with Hadoop) is found.
-
-.. variable:: HDFS_FOUND
-
-  True if found, otherwise all other vars are undefined
-
-.. variable:: HDFS_INCLUDE_DIR
-
-  The include dir for hdfs.h
-
-.. variable:: HDFS_LIBRARY
-
-  The library file
-
-#]=======================================================================]
-
-
-include(FindPackageHandleStandardArgs)
-
-find_package(JNI)
-if(JNI_FOUND)
-    add_library(HDFS::JVM UNKNOWN IMPORTED)
-    set_target_properties(HDFS::JVM PROPERTIES
-                          IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                          IMPORTED_LOCATION "${JAVA_JVM_LIBRARY}")
-endif()
-
-find_path(HDFS_INCLUDE_DIR NAMES hdfs.h)
-find_library(HDFS_LIBRARY NAMES hdfs PATH_SUFFIXES native)
-
-mark_as_advanced(HDFS_INCLUDE_DIR HDFS_LIBRARY)
-find_package_handle_standard_args(HDFS
-                                  FOUND_VAR HDFS_FOUND
-                                  REQUIRED_VARS HDFS_LIBRARY HDFS_INCLUDE_DIR)
-
-if(HDFS_FOUND)
-    set(HDFS_LIBRARIES ${HDFS_LIBRARY})
-    set(HDFS_INCLUDE_DIRS ${HDFS_INCLUDE_DIR})
-
-    if(NOT TARGET HDFS::HDFS)
-        add_library(HDFS::HDFS UNKNOWN IMPORTED)
-        set_target_properties(HDFS::HDFS PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES "${HDFS_INCLUDE_DIR}"
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION "${HDFS_LIBRARY}")
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindIDB.cmake b/cmake/modules/packages/FindIDB.cmake
deleted file mode 100644
index 555689f883..0000000000
--- a/cmake/modules/packages/FindIDB.cmake
+++ /dev/null
@@ -1,45 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-find_path(IDB_INCLUDE_DIR c++/it.h PATHS ${IDB_ROOT} PATH_SUFFIXES incl)
-# following libs are what is needed with ibm.csdk.4.50.FC7.LNX.tar
-find_library(IDB_IFCPP_LIBRARY NAMES ifc++ PATHS ${IDB_ROOT} PATH_SUFFIXES lib/c++)
-find_library(IDB_IFDMI_LIBRARY NAMES ifdmi PATHS ${IDB_ROOT} PATH_SUFFIXES lib/dmi)
-find_library(IDB_IFSQL_LIBRARY NAMES ifsql PATHS ${IDB_ROOT} PATH_SUFFIXES lib/esql)
-find_library(IDB_IFCLI_LIBRARY NAMES ifcli PATHS ${IDB_ROOT} PATH_SUFFIXES lib/cli)
-mark_as_advanced(IDB_INCLUDE_DIR IDB_IFCPP_LIBRARY IDB_IFDMI_LIBRARY IDB_IFSQL_LIBRARY IDB_IFCLI_LIBRARY)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(IDB
-                                  FOUND_VAR IDB_FOUND
-                                  REQUIRED_VARS IDB_INCLUDE_DIR
-                                                IDB_IFCPP_LIBRARY
-                                                IDB_IFDMI_LIBRARY
-                                                IDB_IFSQL_LIBRARY
-                                                IDB_IFCLI_LIBRARY)
-
-### Import targets ############################################################
-if(IDB_FOUND)
-  set(IDB_INCLUDE_DIRS "${IDB_INCLUDE_DIR}/dmi;${IDB_INCLUDE_DIR}/c++")
-  set(IDB_LIBRARIES "${IDB_IFCPP_LIBRARY};${IDB_IFDMI_LIBRARY};${IDB_IFSQL_LIBRARY};${IDB_IFCLI_LIBRARY}")
-  if(NOT TARGET IDB::IDB)
-    add_library(IDB::IDB UNKNOWN IMPORTED)
-                set_target_properties(IDB::IDB PROPERTIES
-                IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                IMPORTED_LOCATION "${IDB_IFCPP_LIBRARY}"
-                INTERFACE_INCLUDE_DIRECTORIES "${IDB_INCLUDE_DIRS}")
-
-    set(IDB_TARGETS)
-    set(IDB_LIBRARIES IDB_IFDMI_LIBRARY IDB_IFSQL_LIBRARY IDB_IFCLI_LIBRARY)
-    foreach(_IDB_LIBRARY_VARNAME IN LISTS IDB_LIBRARIES)
-        add_library(IDB::IDB_${_IDB_LIBRARY_VARNAME} UNKNOWN IMPORTED)
-        set_target_properties(IDB::IDB_${_IDB_LIBRARY_VARNAME} PROPERTIES
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION "${${_IDB_LIBRARY_VARNAME}}")
-        list(APPEND IDB_TARGETS IDB::IDB_${_IDB_LIBRARY_VARNAME})
-    endforeach()
-
-    set_property(TARGET IDB::IDB APPEND PROPERTY
-        INTERFACE_LINK_LIBRARIES "${IDB_TARGETS}")
-  endif()
-endif()
diff --git a/cmake/modules/packages/FindIconv.cmake b/cmake/modules/packages/FindIconv.cmake
deleted file mode 100644
index cffe73f71c..0000000000
--- a/cmake/modules/packages/FindIconv.cmake
+++ /dev/null
@@ -1,143 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindIconv
----------
-
-This module finds the ``iconv()`` POSIX.1 functions on the system.
-These functions might be provided in the regular C library or externally
-in the form of an additional library.
-
-The following variables are provided to indicate iconv support:
-
-.. variable:: Iconv_FOUND
-
-  Variable indicating if the iconv support was found.
-
-.. variable:: Iconv_INCLUDE_DIRS
-
-  The directories containing the iconv headers.
-
-.. variable:: Iconv_LIBRARIES
-
-  The iconv libraries to be linked.
-
-.. variable:: Iconv_IS_BUILT_IN
-
-  A variable indicating whether iconv support is stemming from the
-  C library or not. Even if the C library provides `iconv()`, the presence of
-  an external `libiconv` implementation might lead to this being false.
-
-Additionally, the following :prop_tgt:`IMPORTED` target is being provided:
-
-.. variable:: Iconv::Iconv
-
-  Imported target for using iconv.
-
-The following cache variables may also be set:
-
-.. variable:: Iconv_INCLUDE_DIR
-
-  The directory containing the iconv headers.
-
-.. variable:: Iconv_LIBRARY
-
-  The iconv library (if not implicitly given in the C library).
-
-.. note::
-  On POSIX platforms, iconv might be part of the C library and the cache
-  variables ``Iconv_INCLUDE_DIR`` and ``Iconv_LIBRARY`` might be empty.
-
-#]=======================================================================]
-
-include(CMakePushCheckState)
-if(CMAKE_C_COMPILER_LOADED)
-  include(CheckCSourceCompiles)
-elseif(CMAKE_CXX_COMPILER_LOADED)
-  include(CheckCXXSourceCompiles)
-else()
-  # If neither C nor CXX are loaded, implicit iconv makes no sense.
-  set(Iconv_IS_BUILT_IN FALSE)
-endif()
-
-# iconv can only be provided in libc on a POSIX system.
-# If any cache variable is already set, we'll skip this test.
-if(NOT DEFINED Iconv_IS_BUILT_IN)
-  if(UNIX AND NOT DEFINED Iconv_INCLUDE_DIR AND NOT DEFINED Iconv_LIBRARY)
-    cmake_push_check_state(RESET)
-    # We always suppress the message here: Otherwise on supported systems
-    # not having iconv in their C library (e.g. those using libiconv)
-    # would always display a confusing "Looking for iconv - not found" message
-    set(CMAKE_FIND_QUIETLY TRUE)
-    # The following code will not work, but it's sufficient to see if it compiles.
-    # Note: libiconv will define the iconv functions as macros, so CheckSymbolExists
-    # will not yield correct results.
-    set(Iconv_IMPLICIT_TEST_CODE
-      "
-      #include <stddef.h>
-      #include <iconv.h>
-      int main() {
-        char *a, *b;
-        size_t i, j;
-        iconv_t ic;
-        ic = iconv_open(\"to\", \"from\");
-        iconv(ic, &a, &i, &b, &j);
-        iconv_close(ic);
-      }
-      "
-    )
-    if(CMAKE_C_COMPILER_LOADED)
-      check_c_source_compiles("${Iconv_IMPLICIT_TEST_CODE}" Iconv_IS_BUILT_IN)
-    else()
-      check_cxx_source_compiles("${Iconv_IMPLICIT_TEST_CODE}" Iconv_IS_BUILT_IN)
-    endif()
-    cmake_pop_check_state()
-  else()
-    set(Iconv_IS_BUILT_IN FALSE)
-  endif()
-endif()
-
-if(NOT Iconv_IS_BUILT_IN)
-  find_path(Iconv_INCLUDE_DIR
-    NAMES "iconv.h"
-    DOC "iconv include directory")
-  set(Iconv_LIBRARY_NAMES "iconv" "libiconv")
-else()
-  set(Iconv_INCLUDE_DIR "" CACHE FILEPATH "iconv include directory")
-  set(Iconv_LIBRARY_NAMES "c")
-endif()
-
-find_library(Iconv_LIBRARY
-  NAMES ${Iconv_LIBRARY_NAMES}
-  DOC "iconv library (potentially the C library)")
-find_library(Iconv_CHARSET_LIBRARY
-             NAMES charset libcharset
-             DOC "iconv on windows has individual libcharset")
-mark_as_advanced(Iconv_INCLUDE_DIR)
-mark_as_advanced(Iconv_LIBRARY Iconv_CHARSET_LIBRARY)
-
-include(FindPackageHandleStandardArgs)
-if(NOT Iconv_IS_BUILT_IN)
-  if(WIN32)
-    find_package_handle_standard_args(Iconv REQUIRED_VARS Iconv_LIBRARY Iconv_CHARSET_LIBRARY Iconv_INCLUDE_DIR)
-  else()
-    find_package_handle_standard_args(Iconv REQUIRED_VARS Iconv_LIBRARY Iconv_INCLUDE_DIR)
-  endif()
-else()
-  find_package_handle_standard_args(Iconv REQUIRED_VARS Iconv_LIBRARY)
-endif()
-
-if(Iconv_FOUND)
-  set(Iconv_INCLUDE_DIRS "${Iconv_INCLUDE_DIR}")
-  if(WIN32)
-    set(Iconv_LIBRARIES "${Iconv_LIBRARY}" "${Iconv_CHARSET_LIBRARY}")
-  else()
-    set(Iconv_LIBRARIES "${Iconv_LIBRARY}")
-  endif()
-  if(NOT TARGET Iconv::Iconv)
-    add_library(Iconv::Iconv INTERFACE IMPORTED)
-  endif()
-  set_property(TARGET Iconv::Iconv PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${Iconv_INCLUDE_DIRS}")
-  set_property(TARGET Iconv::Iconv PROPERTY INTERFACE_LINK_LIBRARIES "${Iconv_LIBRARIES}")
-endif()
diff --git a/cmake/modules/packages/FindJPEG12.cmake b/cmake/modules/packages/FindJPEG12.cmake
deleted file mode 100644
index 0b92c28b41..0000000000
--- a/cmake/modules/packages/FindJPEG12.cmake
+++ /dev/null
@@ -1,30 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#.rst:
-# FindJPEG12
-# --------
-#
-# Find the JPEG12 includes and library
-#
-# ::
-#
-#   JPEG12_INCLUDE_DIR, where to find jpeglib.h, etc.
-#   JPEG12_LIBRARIES, the libraries needed to use JPEG.
-#   JPEG12_FOUND, If false, do not try to use JPEG.
-#
-
-find_path(JPEG12_INCLUDE_DIR jpeglib.h)
-
-set(JPEG12_NAMES ${JPEG12_NAMES} jpeg12 libjpeg12)
-find_library(JPEG12_LIBRARY NAMES ${JPEG12_NAMES} )
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(JPEG12 DEFAULT_MSG JPEG12_LIBRARY JPEG12_INCLUDE_DIR)
-
-if(JPEG12_FOUND)
-  set(JPEG12_LIBRARIES ${JPEG12_LIBRARY})
-  set(JPEG12_INCLUDE_DIRS ${JPEG12_INCLUDE_DIR})
-endif()
-
-mark_as_advanced(JPEG12_LIBRARY JPEG12_INCLUDE_DIR )
diff --git a/cmake/modules/packages/FindJSONC.cmake b/cmake/modules/packages/FindJSONC.cmake
deleted file mode 100644
index 06487e38e2..0000000000
--- a/cmake/modules/packages/FindJSONC.cmake
+++ /dev/null
@@ -1,47 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#.rst
-# FindJSONC
-# ~~~~~~~~~
-# Copyright (C) 2017-2018, Hiroshi Miura
-# Copyright (c) 2012, Dmitry Baryshnikov <polimax at mail.ru>
-#
-# CMake module to search for jsonc library
-#
-# If it's found it sets JSONC_FOUND to TRUE
-# and following variables are set:
-#    JSONC_INCLUDE_DIR
-#    JSONC_LIBRARY
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-  pkg_check_modules(PC_JSONC QUIET json-c)
-endif()
-
-find_path(JSONC_INCLUDE_DIR
-          NAMES json.h
-          HINTS ${PC_JSONC_INCLUDE_DIRS}
-                ${JSONC_ROOT}/include
-          PATH_SUFFIXES json-c json)
-find_library(JSONC_LIBRARY
-             NAMES json-c json
-             HINTS ${PC_JSONC_LIBRARY_DIRS}
-                   ${JSONC_ROOT}/lib)
-mark_as_advanced(JSONC_LIBRARY JSONC_INCLUDE_DIR)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(JSONC DEFAULT_MSG JSONC_LIBRARY JSONC_INCLUDE_DIR)
-
-if(JSONC_FOUND)
-  set(JSONC_INCLUDE_DIRS ${JSONC_INCLUDE_DIR})
-  set(JSONC_LIBRARIES ${JSONC_LIBRARY})
-  set(JSONC_TARGET JSONC::JSONC)
-  if(NOT TARGET ${JSONC_TARGET})
-      add_library(${JSONC_TARGET} UNKNOWN IMPORTED)
-      set_target_properties(${JSONC_TARGET} PROPERTIES
-                            INTERFACE_INCLUDE_DIRECTORIES "${JSONC_INCLUDE_DIRS}"
-                            IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                            IMPORTED_LOCATION "${JSONC_LIBRARY}")
-  endif()
-endif()
diff --git a/cmake/modules/packages/FindKDU.cmake b/cmake/modules/packages/FindKDU.cmake
deleted file mode 100644
index 4fa0dbc43f..0000000000
--- a/cmake/modules/packages/FindKDU.cmake
+++ /dev/null
@@ -1,88 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#.rst:
-# FindKDU
-# -----------
-#
-# CMake module to search for KAKADU library
-#
-# Copyright (C) 2017-2018, Hiroshi Miura
-#
-# If it's found it sets KDU_FOUND to TRUE
-# and following variables are set:
-#    KDU_INCLUDE_DIRS
-#    KDU_LIBRARIES
-# and it defines the KDU::KDU target
-
-if(CMAKE_VERSION VERSION_LESS 3.13)
-    set(KDU_ROOT CACHE PATH "KAKADU library base directory")
-endif()
-
-if(KDU_ROOT AND EXISTS "${KDU_ROOT}/coresys")
-    if("${CMAKE_SYSTEM_PROCESSOR}" MATCHES "x86_64" AND "${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
-        file(READ "${KDU_ROOT}/coresys/make/Makefile-Linux-x86-64-gcc" CORESYS_MAKEFILE_CONTENTS)
-        string(REGEX REPLACE ".*SHARED_LIB_NAME[ \t]*=[ \t]*([^.]*)(\.so).*" "\\1\\2" KDU_SHARED_LIB_NAME ${CORESYS_MAKEFILE_CONTENTS})
-        file(READ "${KDU_ROOT}/managed/make/Makefile-Linux-x86-64-gcc" MANAGED_MAKEFILE_CONTENTS)
-        string(REGEX REPLACE ".*AUX_SHARED_LIB_NAME[ \t]*=[ \t]*([^.]*)(\.so).*" "\\1\\2" KDU_AUX_SHARED_LIB_NAME ${MANAGED_MAKEFILE_CONTENTS})
-
-        find_library(KDU_LIBRARY ${KDU_SHARED_LIB_NAME}
-                     PATH ${KDU_ROOT}/lib/Linux-x86-64-gcc)
-        find_library(KDU_AUX_LIBRARY ${KDU_AUX_SHARED_LIB_NAME}
-                     PATH ${KDU_ROOT}/lib/Linux-x86-64-gcc)
-
-    elseif("${CMAKE_SYSTEM_PROCESSOR}" MATCHES "x86_64" AND "${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
-        file(READ "${KDU_ROOT}/coresys/make/Makefile-Mac-x86-64-gcc" CORESYS_MAKEFILE_CONTENTS)
-        string(REGEX REPLACE ".*SHARED_LIB_NAME[ \t]*=[ \t]*([^.]*)(\.so).*" "\\1\\2" KDU_SHARED_LIB_NAME ${CORESYS_MAKEFILE_CONTENTS})
-        file(READ "${KDU_ROOT}/managed/make/Makefile-Mac-x86-64-gcc" MANAGED_MAKEFILE_CONTENTS)
-        string(REGEX REPLACE ".*AUX_SHARED_LIB_NAME[ \t]*=[ \t]*([^.]*)(\.so).*" "\\1\\2" KDU_AUX_SHARED_LIB_NAME ${MANAGED_MAKEFILE_CONTENTS})
-
-        find_library(KDU_LIBRARY ${KDU_SHARED_LIB_NAME}
-                     PATH ${KDU_ROOT}/lib/Mac-x86-64-gcc)
-        find_library(KDU_AUX_LIBRARY ${KDU_AUX_SHARED_LIB_NAME}
-                     PATH ${KDU_ROOT}/lib/Mac-x86-64-gcc)
-
-     elseif("${CMAKE_SYSTEM_PROCESSOR}" MATCHES "AMD64" AND "${CMAKE_SYSTEM_NAME}" STREQUAL "Windows")
-        file(READ "${KDU_ROOT}/coresys/coresys_2019.vcxproj" CORESYS_MAKEFILE_CONTENTS)
-        string(REGEX REPLACE [[.*<ImportLibrary>([^l]*)(lib_x64\\)([^R]*R)(\.lib).*]] "\\1\\2\\3\\4" KDU_SHARED_LIB_NAME ${CORESYS_MAKEFILE_CONTENTS})
-        file(READ "${KDU_ROOT}/managed/kdu_aux/kdu_aux_2019.vcxproj" MANAGED_MAKEFILE_CONTENTS)
-        string(REGEX REPLACE [[.*<ImportLibrary>([^l]*)(lib_x64\\)([^R]*R)(\.lib).*]] "\\1\\2\\3\\4" KDU_AUX_SHARED_LIB_NAME ${MANAGED_MAKEFILE_CONTENTS})
-
-        find_library(KDU_LIBRARY ${KDU_SHARED_LIB_NAME}
-                     PATH ${KDU_ROOT})
-
-        find_library(KDU_AUX_LIBRARY ${KDU_AUX_SHARED_LIB_NAME}
-                     PATH ${KDU_ROOT})
-    endif()
-endif()
-
-find_path(KDU_INCLUDE_DIR coresys/common/kdu_elementary.h
-          PATH ${KDU_ROOT})
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(KDU
-                                  REQUIRED_VARS KDU_INCLUDE_DIR KDU_LIBRARY KDU_AUX_LIBRARY)
-mark_as_advanced(KDU_INCLUDE_DIR KDU_LIBRARY KDU_AUX_LIBRARY)
-
-if(KDU_FOUND)
-    set(KDU_INCLUDE_DIRS ${KDU_INCLUDE_DIR})
-    set(KDU_LIBRARIES ${KDU_LIBRARY} ${KDU_AUX_LIBRARY})
-    if(NOT TARGET KDU::KDU)
-        add_library(KDU::KDU_MAIN UNKNOWN IMPORTED)
-        set_target_properties(KDU::KDU_MAIN PROPERTIES
-                            INTERFACE_INCLUDE_DIRECTORIES "${KDU_INCLUDE_DIR}/coresys/common"
-                            IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                            IMPORTED_LOCATION "${KDU_LIBRARY}")
-
-        add_library(KDU::KDU_AUX UNKNOWN IMPORTED)
-        set_target_properties(KDU::KDU_AUX PROPERTIES
-                            INTERFACE_INCLUDE_DIRECTORIES "${KDU_INCLUDE_DIR}/apps/compressed_io;${KDU_INCLUDE_DIR}/apps/jp2;${KDU_INCLUDE_DIR}/apps/image;${KDU_INCLUDE_DIR}/apps/args;${KDU_INCLUDE_DIR}/apps/support;${KDU_INCLUDE_DIR}/apps/kdu_compress"
-                            IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                            IMPORTED_LOCATION "${KDU_AUX_LIBRARY}")
-
-        add_library(KDU::KDU INTERFACE IMPORTED)
-        set_target_properties(KDU::KDU PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES "${KDU_INCLUDE_DIR}/coresys/common;${KDU_INCLUDE_DIR}/apps/compressed_io;${KDU_INCLUDE_DIR}/apps/jp2;${KDU_INCLUDE_DIR}/apps/image;${KDU_INCLUDE_DIR}/apps/args;${KDU_INCLUDE_DIR}/apps/support;${KDU_INCLUDE_DIR}/apps/kdu_compress"
-                              INTERFACE_LINK_LIBRARIES "KDU::KDU_MAIN;KDU::KDU_AUX")
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindLERC.cmake b/cmake/modules/packages/FindLERC.cmake
deleted file mode 100644
index b279addaa4..0000000000
--- a/cmake/modules/packages/FindLERC.cmake
+++ /dev/null
@@ -1,46 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindLERC
---------
-
-The following vars are set if LERC is found.
-
-.. variable:: LERC_FOUND
-
-  True if found, otherwise all other vars are undefined
-
-.. variable:: LERC_INCLUDE_DIR
-
-  The include dir for main *.h files
-
-.. variable:: LERC_LIBRARY
-
-  The library file
-
-#]=======================================================================]
-
-
-include(FindPackageHandleStandardArgs)
-
-find_path(LERC_INCLUDE_DIR NAMES Lerc_c_api.h)
-find_library(LERC_LIBRARY NAMES Lerc lerc)
-
-mark_as_advanced(LERC_INCLUDE_DIR LERC_LIBRARY)
-find_package_handle_standard_args(LERC
-                                  FOUND_VAR LERC_FOUND
-                                  REQUIRED_VARS LERC_LIBRARY LERC_INCLUDE_DIR)
-
-if(LERC_FOUND)
-    set(LERC_LIBRARIES ${LERC_LIBRARY})
-    set(LERC_INCLUDE_DIRS ${LERC_INCLUDE_DIR})
-
-    if(NOT TARGET LERC::LERC)
-        add_library(LERC::LERC UNKNOWN IMPORTED)
-        set_target_properties(LERC::LERC PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES "${LERC_INCLUDE_DIR}"
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION "${LERC_LIBRARY}")
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindLURATECH.cmake b/cmake/modules/packages/FindLURATECH.cmake
deleted file mode 100644
index cb5f2928d1..0000000000
--- a/cmake/modules/packages/FindLURATECH.cmake
+++ /dev/null
@@ -1,39 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-# - Try to find the LURATECH library
-#
-# Once done this will define
-#
-#  LURATECH_FOUND - System has Luratech
-#  LURATECH_INCLUDE_DIR - The Luratech include directory
-#  LURATECH_LIBRARIES - The libraries needed to use Luratech
-
-if(CMAKE_VERSION VERSION_LESS 3.13)
-    set(LURATECH_ROOT CACHE PATH "Root directory of Luratech SDK")
-endif()
-
-find_path(LURATECH_INCLUDE_DIR lwf_jp2.h HINTS ${LURATECH_ROOT}/include)
-
-find_library(LURATECH_LIBRARY NAMES _lwf_jp2 lwf_jp2 PATH_SUFFIXES library HINTS ${LURATECH_ROOT}/library)
-
-mark_as_advanced(LURATECH_INCLUDE_DIR LURATECH_LIBRARY)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(LURATECH
-                                  FOUND_VAR LURATECH_FOUND
-                                  REQUIRED_VARS LURATECH_LIBRARY LURATECH_INCLUDE_DIR
-                                  VERSION_VAR LURATECH_VERSION_STRING
-)
-
-if(LURATECH_FOUND)
-    set(LURATECH_LIBRARIES ${LURATECH_LIBRARY})
-    set(LURATECH_INCLUDE_DIRS ${LURATECH_INCLUDE_DIR})
-    if(NOT TARGET LURATECH::LURATECH)
-        add_library(LURATECH::LURATECH UNKNOWN IMPORTED)
-        set_target_properties(LURATECH::LURATECH PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${LURATECH_INCLUDE_DIRS}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION ${LURATECH_LIBRARIES})
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindLZ4.cmake b/cmake/modules/packages/FindLZ4.cmake
deleted file mode 100644
index 880ac795fd..0000000000
--- a/cmake/modules/packages/FindLZ4.cmake
+++ /dev/null
@@ -1,130 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindLZ4
--------
-
-Find the LZ4 include directory and library.
-
-Use this module by invoking find_package with the form::
-
-.. code-block:: cmake
-
-  find_package(LZ4
-    [version]              # Minimum version e.g. 1.8.0
-    [REQUIRED]             # Fail with error if LZ4 is not found
-  )
-
-Imported targets
-^^^^^^^^^^^^^^^^
-
-This module defines the following :prop_tgt:`IMPORTED` targets:
-
-.. variable:: LZ4::LZ4
-
-  Imported target for using the LZ4 library, if found.
-
-Result variables
-^^^^^^^^^^^^^^^^
-
-.. variable:: LZ4_FOUND
-
-  Set to true if LZ4 library found, otherwise false or undefined.
-
-.. variable:: LZ4_INCLUDE_DIRS
-
-  Paths to include directories listed in one variable for use by LZ4 client.
-
-.. variable:: LZ4_LIBRARIES
-
-  Paths to libraries to linked against to use LZ4.
-
-.. variable:: LZ4_VERSION
-
-  The version string of LZ4 found.
-
-Cache variables
-^^^^^^^^^^^^^^^
-
-For users who wish to edit and control the module behavior, this module
-reads hints about search locations from the following variables::
-
-.. variable:: LZ4_INCLUDE_DIR
-
-  Path to LZ4 include directory with ``lz4.h`` header.
-
-.. variable:: LZ4_LIBRARY
-
-  Path to LZ4 library to be linked.
-
-NOTE: The variables above should not usually be used in CMakeLists.txt files!
-
-#]=======================================================================]
-
-### Find library ##############################################################
-
-if(NOT LZ4_LIBRARY)
-  find_library(LZ4_LIBRARY_RELEASE NAMES lz4 liblz4)
-  find_library(LZ4_LIBRARY_DEBUG NAMES lz4d)
-
-  include(SelectLibraryConfigurations)
-  select_library_configurations(LZ4)
-else()
-  file(TO_CMAKE_PATH "${LZ4_LIBRARY}" LZ4_LIBRARY)
-endif()
-
-### Find include directory ####################################################
-find_path(LZ4_INCLUDE_DIR NAMES lz4.h)
-
-if(LZ4_INCLUDE_DIR AND EXISTS "${LZ4_INCLUDE_DIR}/lz4.h")
-    file(STRINGS "${LZ4_INCLUDE_DIR}/lz4.h" _lz4_h_contents
-      REGEX "#define LZ4_VERSION_[A-Z]+[ ]+[0-9]+")
-    string(REGEX REPLACE "#define LZ4_VERSION_MAJOR[ ]+([0-9]+).+" "\\1"
-      LZ4_VERSION_MAJOR "${_lz4_h_contents}")
-    string(REGEX REPLACE ".+#define LZ4_VERSION_MINOR[ ]+([0-9]+).+" "\\1"
-      LZ4_VERSION_MINOR "${_lz4_h_contents}")
-    string(REGEX REPLACE ".+#define LZ4_VERSION_RELEASE[ ]+([0-9]+).*" "\\1"
-      LZ4_VERSION_RELEASE "${_lz4_h_contents}")
-    set(LZ4_VERSION "${LZ4_VERSION_MAJOR}.${LZ4_VERSION_MINOR}.${LZ4_VERSION_RELEASE}")
-    unset(_lz4_h_contents)
-endif()
-
-### Set result variables ######################################################
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(LZ4 DEFAULT_MSG
-    LZ4_LIBRARY LZ4_INCLUDE_DIR LZ4_VERSION)
-
-mark_as_advanced(LZ4_INCLUDE_DIR LZ4_LIBRARY)
-
-set(LZ4_LIBRARIES ${LZ4_LIBRARY})
-set(LZ4_INCLUDE_DIRS ${LZ4_INCLUDE_DIR})
-
-### Import targets ############################################################
-if(LZ4_FOUND)
-  if(NOT TARGET LZ4::LZ4)
-    add_library(LZ4::LZ4 UNKNOWN IMPORTED)
-    set_target_properties(LZ4::LZ4 PROPERTIES
-      IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-      INTERFACE_INCLUDE_DIRECTORIES "${LZ4_INCLUDE_DIR}")
-
-    if(LZ4_LIBRARY_RELEASE)
-      set_property(TARGET LZ4::LZ4 APPEND PROPERTY
-        IMPORTED_CONFIGURATIONS RELEASE)
-      set_target_properties(LZ4::LZ4 PROPERTIES
-        IMPORTED_LOCATION_RELEASE "${LZ4_LIBRARY_RELEASE}")
-      endif()
-
-    if(LZ4_LIBRARY_DEBUG)
-      set_property(TARGET LZ4::LZ4 APPEND PROPERTY
-        IMPORTED_CONFIGURATIONS DEBUG)
-      set_target_properties(LZ4::LZ4 PROPERTIES
-        IMPORTED_LOCATION_DEBUG "${LZ4_LIBRARY_DEBUG}")
-    endif()
-
-    if(NOT LZ4_LIBRARY_RELEASE AND NOT LZ4_LIBRARY_DEBUG)
-      set_property(TARGET LZ4::LZ4 APPEND PROPERTY
-        IMPORTED_LOCATION "${LZ4_LIBRARY}")
-    endif()
-  endif()
-endif()
diff --git a/cmake/modules/packages/FindLibKML.cmake b/cmake/modules/packages/FindLibKML.cmake
deleted file mode 100644
index e4367f5d1b..0000000000
--- a/cmake/modules/packages/FindLibKML.cmake
+++ /dev/null
@@ -1,111 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindLibKML
-----------
-
-Find the LibKML headers and libraries.
-
-This module accept optional COMPONENTS to check supported sub modules::
-
-    LIBKML_BASE_LIBRARY
-    LIBKML_DOM_LIBRARY
-    LIBKML_ENGINE_LIBRARY
-    LIBKML_CONVENIENCE_LIBRARY
-    LIBKML_XSD_LIBRARY
-
-
-IMPORTED Targets
-^^^^^^^^^^^^^^^^
-
-This module defines :prop_tgt:`IMPORTED` target ``LIBKML::LibKML``, if found.
-
-Result Variables
-^^^^^^^^^^^^^^^^
-
-This module defines the following variables:
-
-``LIBKML_FOUND``
-  True if libkml found.
-
-``LIBKML_INCLUDE_DIRS``
-  where to find header files.
-
-``LIBKML_LIBRARIES``
-  List of libraries when using libkml.
-
-``LIBKML_VERSION_STRING``
-  The version of libkml found.
-#]=======================================================================]
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-  pkg_check_modules(PC_LIBKML QUIET libkml)
-  if(PC_LIBKML_VERSION)
-  endif()
-endif()
-
-find_path(LIBKML_INCLUDE_DIR
-          NAMES kml/engine.h kml/dom.h
-          HINTS ${PC_LIBKML_INCLUDE_DIRS})
-mark_as_advanced(LIBKML_INCLUDE_DIR)
-
-find_library(LIBKML_BASE_LIBRARY
-             NAMES kmlbase libkmlbase
-             HINTS ${PC_LIBKML_LIBRARY_DIRS} )
-mark_as_advanced(LIBKML_BASE_LIBRARY)
-
-set(libkml_known_components DOM CONVENIENCE ENGINE REGIONATOR)
-foreach(_comp IN LISTS libkml_known_components)
-  if(${_comp} IN_LIST LibKML_FIND_COMPONENTS)
-    string(TOLOWER ${_comp} _name)
-    find_library(LIBKML_${_comp}_LIBRARY
-                 NAMES kml${_name} libkml${_name}
-                 HINTS ${PC_LIBKML_LIBRARY_DIRS} )
-    mark_as_advanced(LIBKML_${_comp}_LIBRARY)
-  endif()
-endforeach()
-
-if(LIBKML_INCLUDE_DIR AND NOT LIBKML_VERSION)
-  file(STRINGS ${LIBKML_INCLUDE_DIR}/kml/base/version.h libkml_version_h_string
-       REGEX "^#define[\t ]+LIBKML_(MAJOR|MINOR|MICRO)_VERSION[\t ]+[0-9]+")
-  string(REGEX REPLACE ".*LIBKML_MAJOR_VERSION[\t ]+([0-9]+).*" "\\1" LIBKML_VERSION_MAJOR "${libkml_version_h_string}")
-  string(REGEX REPLACE ".*LIBKML_MINOR_VERSION[\t ]+([0-9]+).*" "\\1" LIBKML_VERSION_MINOR "${libkml_version_h_string}")
-  string(REGEX REPLACE ".*LIBKML_MICRO_VERSION[\t ]+([0-9]+).*" "\\1" LIBKML_VERSION_MICRO "${libkml_version_h_string}")
-  set(LIBKML_VERSION_STRING "${LIBKML_VERSION_MAJOR}.${LIBKML_VERSION_MINOR}.${LIBKML_VERSION_MICRO}")
-endif()
-
-set(libkml_required_vars LIBKML_BASE_LIBRARY LIBKML_INCLUDE_DIR)
-foreach(_comp IN LISTS LibKML_FIND_COMPONENTS)
-  set(libkml_required_vars ${libkml_required_vars} "LIBKML_${_comp}_LIBRARY")
-endforeach()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(LibKML
-                                  FOUND_VAR LIBKML_FOUND
-                                  REQUIRED_VARS ${libkml_required_vars}
-                                  VERSION_VAR LIBKML_VERSION_STRING)
-
-if(LIBKML_FOUND)
-  set(LIBKML_INCLUDE_DIRS ${LIBKML_INCLUDE_DIR})
-  set(LIBKML_LIBRARIES ${LIBKML_BASE_LIBRARY})
-  if(NOT TARGET LIBKML::LibKML)
-    add_library(LIBKML::LibKML UNKNOWN IMPORTED)
-    set_target_properties(LIBKML::LibKML PROPERTIES
-                          INTERFACE_INCLUDE_DIRECTORIES ${LIBKML_INCLUDE_DIR}
-                          IMPORTED_LINK_INTERFACE_LANGUAGES "C++"
-                          IMPORTED_LOCATION ${LIBKML_BASE_LIBRARY})
-  endif()
-  foreach(_comp IN LISTS libkml_known_components)
-    if(${_comp} IN_LIST LibKML_FIND_COMPONENTS)
-      list(APPEND LIBKML_LIBRARIES "${LIBKML_${_comp}_LIBRARY}")
-      if(NOT TARGET LIBKML::${_comp})
-        add_library(LIBKML::${_comp} UNKNOWN IMPORTED)
-        set_target_properties(LIBKML::${_comp} PROPERTIES
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C++"
-                              IMPORTED_LOCATION "${LIBKML_${_comp}_LIBRARY}")
-      endif()
-    endif()
-  endforeach()
-endif()
diff --git a/cmake/modules/packages/FindMONGOCXX.cmake b/cmake/modules/packages/FindMONGOCXX.cmake
deleted file mode 100644
index 13d4e8d0d0..0000000000
--- a/cmake/modules/packages/FindMONGOCXX.cmake
+++ /dev/null
@@ -1,56 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#.rst:
-# FindMONGOCXX
-# -----------
-#
-# Find the MONGOCXX library
-#
-# Once done this will define
-#
-#  MONGOCXX_FOUND - System has MONGOCXX
-#  MONGOCXX_INCLUDE_DIR - The MONGOCXX include directory
-#  MONGOCXX_LIBRARIES - The libraries needed to use MONGOCXX
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-    pkg_check_modules(PC_MONGOCXX QUIET libmongocxx)
-    set(MONGOCXX_VERSION_STRING ${PC_MONGOCXX_VERSION})
-endif()
-
-find_path(MONGOCXX_INCLUDE_DIR mongocxx/client.hpp
-          HINTS ${PC_MONGOCXX_INCLUDE_DIRS}
-          PATH_SUFFIXES mongocxx/v_noabi)
-find_path(BSONCXX_INCLUDE_DIR bsoncxx/config/version.hpp
-          HINTS ${PC_MONGOCXX_INCLUDE_DIRS}
-          PATH_SUFFIXES bsoncxx/v_noabi)
-find_library(MONGOCXX_LIBRARY NAMES mongocxx
-             HINTS ${PC_MONGOCXX_LIBRARY_DIRS})
-find_library(BSONCXX_LIBRARY NAMES bsoncxx
-             HINTS ${PC_MONGOCXX_LIBRARY_DIRS})
-mark_as_advanced(MONGOCXX_INCLUDE_DIR BSONCXX_INCLUDE_DIR MONGOCXX_LIBRARY BSONCXX_LIBRARY)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(MONGOCXX
-                                  REQUIRED_VARS MONGOCXX_INCLUDE_DIR BSONCXX_INCLUDE_DIR MONGOCXX_LIBRARY BSONCXX_LIBRARY
-                                  VERSION_VAR MONGOCXX_VERSION_STRING)
-
-if(MONGOCXX_FOUND)
-    set(MONGOCXX_LIBRARIES ${MONGOCXX_LIBRARY} ${BSONCXX_LIBRARY})
-    set(MONGOCXX_INCLUDE_DIRS ${MONGOCXX_INCLUDE_DIR} ${BSONCXX_INCLUDE_DIR})
-    if(NOT TARGET MONGOCXX::MONGOCXX)
-        add_library(MONGOCXX::MONGOCXX UNKNOWN IMPORTED)
-        set_target_properties(MONGOCXX::MONGOCXX PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${MONGOCXX_INCLUDE_DIR}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION ${MONGOCXX_LIBRARY})
-    endif()
-    if(NOT TARGET MONGOCXX::BSONCXX)
-        add_library(MONGOCXX::BSONCXX UNKNOWN IMPORTED)
-        set_target_properties(MONGOCXX::BSONCXX PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${BSONCXX_INCLUDE_DIR}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION ${BSONCXX_LIBRARY})
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindMRSID.cmake b/cmake/modules/packages/FindMRSID.cmake
deleted file mode 100644
index 0004ca57c2..0000000000
--- a/cmake/modules/packages/FindMRSID.cmake
+++ /dev/null
@@ -1,66 +0,0 @@
-# Distributed under the GDAL/OGR MIT style License.  See accompanying
-# file LICENSE.TXT.
-
-#[=======================================================================[.rst:
-configure
----------
-
-#]=======================================================================]
-# Find the MRSID library - Multi-resolution Seamless Image Database.
-#
-# Copyright (C) 2017,2018 Hiroshi Miura
-# Copyright (c) 2015 NextGIS <info@nextgis.com>
-#
-# Sets
-#   MRSID_FOUND.
-#   MRSID_INCLUDE_DIRS
-#   MRSID_LIBRARIES
-#
-
-find_path(MRSID_INCLUDE_DIR NAMES lt_base.h)
-
-if( MRSID_INCLUDE_DIR )
-  find_library( MRSID_LIBRARY NAMES lti_dsdk ltidsdk)
-endif()
-
-if(MRSID_INCLUDE_DIR AND MRSID_LIBRARY)
-  set(MAJOR_VERSION 0)
-  set(MINOR_VERSION 0)
-  set(SRV_VERSION 0)
-  set(BLD_VERSION 0)
-  if(EXISTS "${MRSID_INCLUDE_DIR}/lti_version.h")
-    file(READ "${MRSID_INCLUDE_DIR}/lti_version.h" VERSION_H_CONTENTS)
-    string(REGEX MATCH "LTI_SDK_MAJOR[ \t]+([0-9]+)"
-      MAJOR_VERSION ${VERSION_H_CONTENTS})
-    string (REGEX MATCH "([0-9]+)"
-      MAJOR_VERSION ${MAJOR_VERSION})
-    string(REGEX MATCH "LTI_SDK_MINOR[ \t]+([0-9]+)"
-      MINOR_VERSION ${VERSION_H_CONTENTS})
-    string (REGEX MATCH "([0-9]+)"
-      MINOR_VERSION ${MINOR_VERSION})
-    string(REGEX MATCH "LTI_SDK_REV[ \t]+([0-9]+)"
-      REV_VERSION ${VERSION_H_CONTENTS})
-    string (REGEX MATCH "([0-9]+)"
-      REV_VERSION ${REV_VERSION})
-    unset(VERSION_H_CONTENTS)
-  endif()
-  set(MRSID_VERSION_STRING "${MAJOR_VERSION}.${MINOR_VERSION}.${REV_VERSION}")
-endif()
-mark_as_advanced(MRSID_INCLUDE_DIR MRSID_LIBRARY MRSID_VERSION_STRING)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(MRSID FOUND_VAR MRSID_FOUND
-                                  REQUIRED_VARS MRSID_LIBRARY MRSID_INCLUDE_DIR
-                                  VERSION_VAR MRSID_VERSION_STRING)
-
-# Copy the results to the output variables.
-if(MRSID_FOUND)
-  set(MRSID_LIBRARIES ${MRSID_LIBRARY})
-  set(MRSID_INCLUDE_DIRS ${MRSID_INCLUDE_DIR})
-  if(NOT TARGET MRSID::MRSID)
-    add_library(MRSID::MRSID UNKNOWN IMPORTED)
-    set_target_properties(MRSID::MRSID PROPERTIES
-                          INTERFACE_INCLUDE_DIRECTORIES "${MRSID_INCLUDE_DIR}"
-                          IMPORTED_LOCATION "${MRSID_LIBRARY}")
-  endif()
-endif()
diff --git a/cmake/modules/packages/FindMSSQL_NCLI.cmake b/cmake/modules/packages/FindMSSQL_NCLI.cmake
deleted file mode 100644
index 52a1dd6aad..0000000000
--- a/cmake/modules/packages/FindMSSQL_NCLI.cmake
+++ /dev/null
@@ -1,86 +0,0 @@
-# Find MSSQL Native Client
-# ~~~~~~~~~~~~~~~~~~~~~~~~
-#
-# Copyright (c) 2021 Even Rouault <even.rouault@spatialys.com>
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-#
-
-#[=======================================================================[.rst:
-FindMSSQL_NCLI
---------------
-
-Find the MSSQL Native Client includes and library.
-
-IMPORTED Targets
-^^^^^^^^^^^^^^^^
-
-This module defines :prop_tgt:`IMPORTED` target ``MSSQL_NCLI::MSSQL_NCLI``, if
-MSSQL_NCLI has been found.
-
-Result Variables
-^^^^^^^^^^^^^^^^
-
-This module defines the following variables:
-
-::
-
-  MSSQL_NCLI_INCLUDE_DIRS   - where to find sqlncli.h, etc.
-  MSSQL_NCLI_LIBRARIES      - List of libraries when using MSSQL_NCLI.
-  MSSQL_NCLI_FOUND          - True if MSSQL_NCLI found.
-  MSSQL_NCLI_VERSION        - Major Version (11, 10, ...). Can be a input variable too
-
-#]=======================================================================]
-
-if(NOT WIN32)
-    return()
-endif()
-
-if(NOT DEFINED MSSQL_NCLI_VERSION)
-    set(MSSQL_NCLI_VERSION_CANDIDATES 11 10)
-    foreach(_vers IN LISTS MSSQL_NCLI_VERSION_CANDIDATES)
-      set(_dir "C:/Program Files/Microsoft SQL Server/${_vers}0/SDK")
-      if(EXISTS "${_dir}")
-        set(MSSQL_NCLI_VERSION "${_vers}")
-        break()
-      endif()
-    endforeach()
-endif()
-
-if(NOT DEFINED MSSQL_NCLI_ROOT)
-    set(MSSQL_NCLI_ROOT "C:/Program Files/Microsoft SQL Server/${MSSQL_NCLI_VERSION}0/SDK")
-endif()
-
-find_path(MSSQL_NCLI_INCLUDE_DIR NAMES sqlncli.h
-          PATHS "${MSSQL_NCLI_ROOT}/Include")
-mark_as_advanced(MSSQL_NCLI_INCLUDE_DIR)
-
-if("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
-    set(MSSQL_NCLI_DIR_ARCH x64)
-else()
-    set(MSSQL_NCLI_DIR_ARCH x86)
-endif()
-
-find_library(MSSQL_NCLI_LIBRARY NAMES "sqlncli${MSSQL_NCLI_VERSION}.lib"
-             PATHS "${MSSQL_NCLI_ROOT}/Lib/${MSSQL_NCLI_DIR_ARCH}")
-mark_as_advanced(MSSQL_NCLI_LIBRARY)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(MSSQL_NCLI
-                                  FOUND_VAR MSSQL_NCLI_FOUND
-                                  VERSION_VAR MSSQL_NCLI_VERSION
-                                  REQUIRED_VARS MSSQL_NCLI_LIBRARY MSSQL_NCLI_INCLUDE_DIR MSSQL_NCLI_VERSION)
-
-if(MSSQL_NCLI_FOUND)
-    set(MSSQL_NCLI_LIBRARIES ${MSSQL_NCLI_LIBRARY})
-    set(MSSQL_NCLI_INCLUDE_DIRS ${MSSQL_NCLI_INCLUDE_DIR})
-    if(NOT TARGET MSSQL_NCLI::MSSQL_NCLI)
-        add_library(MSSQL_NCLI::MSSQL_NCLI UNKNOWN IMPORTED)
-        set_target_properties(MSSQL_NCLI::MSSQL_NCLI PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES "${MSSQL_NCLI_INCLUDE_DIRS}"
-                              INTERFACE_COMPILE_DEFINITIONS "SQLNCLI_VERSION=${MSSQL_NCLI_VERSION};MSSQL_BCP_SUPPORTED=1"
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION "${MSSQL_NCLI_LIBRARY}")
-    endif()
-endif()
-
diff --git a/cmake/modules/packages/FindMSSQL_ODBC.cmake b/cmake/modules/packages/FindMSSQL_ODBC.cmake
deleted file mode 100644
index 22196a0bfe..0000000000
--- a/cmake/modules/packages/FindMSSQL_ODBC.cmake
+++ /dev/null
@@ -1,113 +0,0 @@
-# Find MSSQL ODBC driver
-# ~~~~~~~~~~~~~~~~~~~~~~
-#
-# Copyright (c) 2021 Even Rouault <even.rouault@spatialys.com>
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-#
-
-#[=======================================================================[.rst:
-FindMSSQL_ODBC
---------------
-
-Find the MSSQL ODBC driver includes and library.
-
-IMPORTED Targets
-^^^^^^^^^^^^^^^^
-
-This module defines :prop_tgt:`IMPORTED` target ``MSSQL_ODBC::MSSQL_ODBC``, if
-MSSQL_ODBC has been found.
-
-Result Variables
-^^^^^^^^^^^^^^^^
-
-This module defines the following variables:
-
-::
-
-  MSSQL_ODBC_INCLUDE_DIRS   - where to find msodbcsql.h, etc.
-  MSSQL_ODBC_LIBRARIES      - List of libraries when using MSSQL_ODBC.
-  MSSQL_ODBC_FOUND          - True if MSSQL_ODBC found.
-  MSSQL_ODBC_VERSION        - Major Version (17, 13, ...). Can be a input variable too
-
-#]=======================================================================]
-
-if(NOT DEFINED MSSQL_ODBC_ROOT AND DEFINED CMAKE_FIND_USE_CMAKE_SYSTEM_PATH AND NOT CMAKE_FIND_USE_CMAKE_SYSTEM_PATH)
-    return()
-endif()
-
-if(WIN32)
-    if(NOT DEFINED MSSQL_ODBC_VERSION)
-        set(MSSQL_ODBC_VERSION_CANDIDATES 17 13)
-        foreach(_vers IN LISTS MSSQL_ODBC_VERSION_CANDIDATES)
-          set(_dir "C:/Program Files/Microsoft SQL Server/Client SDK/ODBC/${_vers}0/SDK")
-          if(EXISTS "${_dir}")
-            set(MSSQL_ODBC_VERSION "${_vers}")
-            break()
-          endif()
-        endforeach()
-    endif()
-
-    if(NOT DEFINED MSSQL_ODBC_ROOT)
-        set(MSSQL_ODBC_ROOT "C:/Program Files/Microsoft SQL Server/Client SDK/ODBC/${MSSQL_ODBC_VERSION}0/SDK")
-    endif()
-
-    find_path(MSSQL_ODBC_INCLUDE_DIR NAMES msodbcsql.h
-              PATHS "${MSSQL_ODBC_ROOT}/Include")
-    mark_as_advanced(MSSQL_ODBC_INCLUDE_DIR)
-
-    if("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
-        set(MSSQL_ODBC_DIR_ARCH x64)
-    else()
-        set(MSSQL_ODBC_DIR_ARCH x86)
-    endif()
-
-    find_library(MSSQL_ODBC_LIBRARY NAMES "msodbcsql${MSSQL_ODBC_VERSION}.lib"
-                 PATHS "${MSSQL_ODBC_ROOT}/Lib/${MSSQL_ODBC_DIR_ARCH}")
-    mark_as_advanced(MSSQL_ODBC_LIBRARY)
-else()
-    if(NOT DEFINED MSSQL_ODBC_VERSION)
-        set(MSSQL_ODBC_VERSION_CANDIDATES 17 13)
-        foreach(_vers IN LISTS MSSQL_ODBC_VERSION_CANDIDATES)
-          set(_dir "/opt/microsoft/msodbcsql${_vers}")
-          if(EXISTS "${_dir}")
-            set(MSSQL_ODBC_VERSION "${_vers}")
-            break()
-          endif()
-        endforeach()
-    endif()
-
-    if(NOT DEFINED MSSQL_ODBC_ROOT)
-        set(MSSQL_ODBC_ROOT "/opt/microsoft/msodbcsql${MSSQL_ODBC_VERSION}")
-    endif()
-
-    find_path(MSSQL_ODBC_INCLUDE_DIR NAMES msodbcsql.h
-              PATHS "${MSSQL_ODBC_ROOT}/include")
-    mark_as_advanced(MSSQL_ODBC_INCLUDE_DIR)
-
-    file(GLOB _libs "${MSSQL_ODBC_ROOT}/lib*/libmsodbc*")
-    list(LENGTH _libs _libs_length)
-    if(_libs_length EQUAL "1")
-        set(MSSQL_ODBC_LIBRARY ${_libs})
-    endif()
-    mark_as_advanced(MSSQL_ODBC_LIBRARY)
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(MSSQL_ODBC
-                                  FOUND_VAR MSSQL_ODBC_FOUND
-                                  VERSION_VAR MSSQL_ODBC_VERSION
-                                  REQUIRED_VARS MSSQL_ODBC_LIBRARY MSSQL_ODBC_INCLUDE_DIR MSSQL_ODBC_VERSION)
-
-if(MSSQL_ODBC_FOUND)
-    set(MSSQL_ODBC_LIBRARIES ${MSSQL_ODBC_LIBRARY})
-    set(MSSQL_ODBC_INCLUDE_DIRS ${MSSQL_ODBC_INCLUDE_DIR})
-    if(NOT TARGET MSSQL_ODBC::MSSQL_ODBC)
-        add_library(MSSQL_ODBC::MSSQL_ODBC UNKNOWN IMPORTED)
-        set_target_properties(MSSQL_ODBC::MSSQL_ODBC PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES "${MSSQL_ODBC_INCLUDE_DIRS}"
-                              INTERFACE_COMPILE_DEFINITIONS "MSODBCSQL_VERSION=${MSSQL_ODBC_VERSION};MSSQL_BCP_SUPPORTED=1"
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION "${MSSQL_ODBC_LIBRARY}")
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindMySQL.cmake b/cmake/modules/packages/FindMySQL.cmake
deleted file mode 100644
index 99d1c61e2a..0000000000
--- a/cmake/modules/packages/FindMySQL.cmake
+++ /dev/null
@@ -1,83 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#.rst
-# Get from http://www.cmake.org/Wiki/CMakeUserFindMySQL
-# - Find mysqlclient
-# Find the native MySQL includes and library
-#
-#  MYSQL_INCLUDE_DIRS- where to find mysql.h, etc.
-#  MYSQL_LIBRARIES   - List of libraries when using MySQL.
-#  MYSQL_FOUND       - True if MySQL found.
-
-find_path(MYSQL_INCLUDE_DIR
-          NAMES mysql.h
-          PATH_SUFFIXES mysql
-          DOC "MySQL Client library includes")
-
-if( MYSQL_INCLUDE_DIR AND EXISTS "${MYSQL_INCLUDE_DIR}/mysql_version.h" )
-    file( STRINGS "${MYSQL_INCLUDE_DIR}/mysql_version.h"
-          MYSQL_VERSION_H REGEX "^#define[ \t]+MYSQL_SERVER_VERSION[ \t]+\"[^\"]+\".*$" )
-    string( REGEX REPLACE
-            "^.*MYSQL_SERVER_VERSION[ \t]+\"([^\"]+)\".*$" "\\1" MYSQL_VERSION_STRING
-            "${MYSQL_VERSION_H}" )
-endif()
-
-find_library(MYSQL_LIBRARY NAMES mysqlclient mysqlclient_r)
-
-if( NOT CMAKE_C_COMPILER_LOADED )
-    message(AUTHOR_WARNING "C language not enabled: Skipping detection of extra link libraries.")
-elseif( MYSQL_INCLUDE_DIR AND MYSQL_LIBRARY )
-    # On Conda, mysqlclient is a static lib that requires explicit linking to zlib and zstd
-    function(check_mysql_test_program_links)
-        include(CheckCSourceCompiles)
-        include(CMakePushCheckState)
-        cmake_push_check_state(RESET)
-        set(CMAKE_REQUIRED_QUIET "yes")
-        set(CMAKE_REQUIRED_INCLUDES ${MYSQL_INCLUDE_DIR})
-        set(CMAKE_REQUIRED_LIBRARIES ${MYSQL_LIBRARY})
-        check_c_source_compiles("#include <mysql.h>\n; int main () {mysql_library_end (); return 0;}" MYSQL_TEST_PROGRAM_LINKS)
-        cmake_pop_check_state()
-    endfunction()
-
-    check_mysql_test_program_links()
-    if(NOT MYSQL_TEST_PROGRAM_LINKS)
-       find_library(_MYSQL_ZLIB_LIBRARY NAMES zlib)
-       find_library(_MYSQL_ZSTD_LIBRARY NAMES zstd)
-       if(_MYSQL_ZLIB_LIBRARY AND _MYSQL_ZSTD_LIBRARY)
-            function(check_mysql_test_program_links_with_zlib_and_zstd)
-                include(CheckCSourceCompiles)
-                include(CMakePushCheckState)
-                cmake_push_check_state(RESET)
-                set(CMAKE_REQUIRED_QUIET "yes")
-                set(CMAKE_REQUIRED_INCLUDES ${MYSQL_INCLUDE_DIR})
-                set(CMAKE_REQUIRED_LIBRARIES ${MYSQL_LIBRARY} ${_MYSQL_ZSTD_LIBRARY} ${_MYSQL_ZLIB_LIBRARY})
-                check_c_source_compiles("#include <mysql.h>\n;int main () {mysql_library_end (); return 0;}" MYSQL_TEST_PROGRAM_LINKS_WITH_ZLIB_AND_ZSTD)
-                cmake_pop_check_state()
-            endfunction()
-
-            check_mysql_test_program_links_with_zlib_and_zstd()
-            if(MYSQL_TEST_PROGRAM_LINKS_WITH_ZLIB_AND_ZSTD)
-              set(MYSQL_ZSTD_LIBRARY ${_MYSQL_ZSTD_LIBRARY})
-              set(MYSQL_ZLIB_LIBRARY ${_MYSQL_ZLIB_LIBRARY})
-            endif()
-       endif()
-    endif()
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(MySQL
-                                  FOUND_VAR MYSQL_FOUND
-                                  REQUIRED_VARS MYSQL_LIBRARY MYSQL_INCLUDE_DIR
-                                  VERSION_VAR MYSQL_VERSION_STRING)
-include(FeatureSummary)
-set_package_properties(MYSQL PROPERTIES
-                       DESCRIPTION "MySQL Client library"
-                       URL "https://dev.mysql.com/downloads/c-api/"
-                       )
-
-mark_as_advanced(MYSQL_LIBRARY MYSQL_INCLUDE_DIR)
-
-set(MYSQL_LIBRARIES ${MYSQL_LIBRARY} ${MYSQL_ZSTD_LIBRARY} ${MYSQL_ZLIB_LIBRARY})
-set(MYSQL_INCLUDE_DIRS ${MYSQL_INCLUDE_DIR})
-
diff --git a/cmake/modules/packages/FindNetCDF.cmake b/cmake/modules/packages/FindNetCDF.cmake
deleted file mode 100644
index a528a44068..0000000000
--- a/cmake/modules/packages/FindNetCDF.cmake
+++ /dev/null
@@ -1,207 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#.rst:
-# FindNetCDF
-# ---------
-#
-# Find the native NetCDF includes and library
-#
-#  NETCDF_INCLUDE_DIR  - user modifiable choice of where netcdf headers are
-#  NETCDF_LIBRARY      - user modifiable choice of where netcdf libraries are
-#
-# Your package can require certain interfaces to be FOUND by setting these
-#
-#  NETCDF_CXX         - require the C++ interface and link the C++ library
-#  NETCDF_F77         - require the F77 interface and link the fortran library
-#  NETCDF_F90         - require the F90 interface and link the fortran library
-#
-# Or equivalently by calling FindNetCDF with a COMPONENTS argument containing one or
-# more of "CXX;F77;F90".
-#
-# When interfaces are requested the user has access to interface specific hints:
-#
-#  NETCDF_${LANG}_INCLUDE_DIR - where to search for interface header files
-#  NETCDF_${LANG}_LIBRARY     - where to search for interface libraries
-#
-# This module returns these variables for the rest of the project to use.
-#
-#  NETCDF_FOUND          - True if NetCDF found including required interfaces (see below)
-#  NETCDF_LIBRARIES      - All netcdf related libraries.
-#  NETCDF_INCLUDE_DIRS   - All directories to include.
-#  NETCDF_HAS_INTERFACES - Whether requested interfaces were found or not.
-#  NETCDF_${LANG}_INCLUDE_DIRS/NETCDF_${LANG}_LIBRARIES - C/C++/F70/F90 only interface
-#
-# Normal usage would be:
-#  set (NETCDF_F90 "YES")
-#  find_package (NetCDF REQUIRED)
-#  target_link_libraries (uses_everthing ${NETCDF_LIBRARIES})
-#  target_link_libraries (only_uses_f90 ${NETCDF_F90_LIBRARIES})
-#
-# It detect NetCDF configurations and set configurations in variable
-#
-# NETCDF_HAS_NC2
-# NETCDF_HAS_NC4
-# NETCDF_HAS_HDF4
-# NETCDF_HAS_HDF5
-# NETCDF_HAS_DAP
-# NETCDF_HAS_MEM
-#
-
-#search starting from user editable cache var
-if (NETCDF_INCLUDE_DIR AND NETCDF_LIBRARY)
-    # Already in cache, be silent
-    set (NETCDF_FIND_QUIETLY TRUE)
-endif ()
-find_program(NC_CONFIG NAMES nc-config DOC "NetCDF config command")
-mark_as_advanced(NC_CONFIG)
-
-if(NC_CONFIG)
-    execute_process(COMMAND ${NC_CONFIG} --includedir
-                    RESULT_VARIABLE nc_res
-                    OUTPUT_VARIABLE NETCDF_INCLUDE_PATH
-                    ERROR_QUIET
-                    OUTPUT_STRIP_TRAILING_WHITESPACE)
-    execute_process(COMMAND ${NC_CONFIG} --prefix
-                    RESULT_VARIABLE nc_res
-                    OUTPUT_VARIABLE NETCDF_PREFIX_DIR
-                    ERROR_QUIET
-                    OUTPUT_STRIP_TRAILING_WHITESPACE)
-endif()
-
-find_path(NETCDF_INCLUDE_DIR netcdf.h
-          PATHS "${NETCDF_DIR}/include"
-          HINTS ${NETCDF_INCLUDE_PATH})
-
-find_library (NETCDF_LIBRARY NAMES netcdf
-        PATHS "${NETCDF_DIR}/lib"
-              "${NETCDF_INCLUDE_DIR}/../lib"
-        HINTS "${NETCDF_PREFIX_DIR}/lib")
-
-if(NETCDF_INCLUDE_DIR AND NETCDF_LIBRARY)
-    set (NETCDF_C_INCLUDE_DIRS ${NETCDF_INCLUDE_DIR})
-    set (NETCDF_C_LIBRARIES ${NETCDF_LIBRARY})
-
-    find_file(NETCDF_MEM_H
-             NAMES "netcdf_mem.h"
-             HINTS ${NETCDF_INCLUDE_DIR})
-    mark_as_advanced(NETCDF_MEM_H)
-    if(NETCDF_MEM_H)
-        set(NETCDF_HAS_MEM ON)
-    endif()
-
-    function(GET_NC_CONFIG _conf)
-        if(_conf STREQUAL "c++")
-            set(_key "CXX")
-        else()
-            string(TOUPPER ${_conf} _key)
-        endif()
-        execute_process(COMMAND ${NC_CONFIG} --has-${_conf}
-                        RESULT_VARIABLE nc_res
-                        OUTPUT_VARIABLE nc_has_${_conf}
-                        ERROR_QUIET
-                        OUTPUT_STRIP_TRAILING_WHITESPACE)
-        if(nc_has_${_conf} STREQUAL "yes")
-            set(NETCDF_HAS_${_key} ON  PARENT_SCOPE)
-        else()
-            set(NETCDF_HAS_${_key} OFF PARENT_SCOPE)
-        endif()
-    endfunction()
-
-    if(NC_CONFIG AND NOT WIN32)
-        GET_NC_CONFIG(dap)
-        GET_NC_CONFIG(nc2)
-        GET_NC_CONFIG(nc4)
-        GET_NC_CONFIG(hdf4)
-        GET_NC_CONFIG(hdf5)
-    else()
-        # Detect internal NC4_create symbol as a hint that NC4 support is enabled
-        # Fragile...
-        function(detect_NC4_create)
-            include(CheckCSourceCompiles)
-            include(CMakePushCheckState)
-            cmake_push_check_state(RESET)
-            set(CMAKE_REQUIRED_QUIET "yes")
-            set(CMAKE_REQUIRED_LIBRARIES ${NETCDF_LIBRARY})
-            check_c_source_compiles("int NC4_create ();int main () {return NC4_create ();}" HAVE_NC4_CREATE)
-            cmake_pop_check_state()
-        endfunction()
-
-        detect_NC4_create()
-        if(HAVE_NC4_CREATE)
-            set(NETCDF_HAS_NC4 ON)
-        endif()
-    endif()
-
-    macro(NetCDF_DETECT_COMPONENT _comp)
-        list (FIND NetCDF_FIND_COMPONENTS "${_comp}" _nextcomp)
-        if (_nextcomp GREATER -1)
-            set (NETCDF_${_comp} 1)
-        endif ()
-    endmacro()
-    NetCDF_DETECT_COMPONENT("CXX")
-    NetCDF_DETECT_COMPONENT("F77")
-    NetCDF_DETECT_COMPONENT("F90")
-
-    #start finding requested language components
-    set (NetCDF_libs "")
-    set (NetCDF_includes "${NETCDF_INCLUDE_DIR}")
-    get_filename_component (NetCDF_lib_dirs "${NETCDF_LIBRARY}" PATH)
-    set (NETCDF_HAS_INTERFACES "YES") # will be set to NO if we're missing any interfaces
-    macro (NetCDF_check_interface lang header libs)
-        if (NETCDF_${lang})
-            #search starting from user modifiable cache var
-            find_path (NETCDF_${lang}_INCLUDE_DIR NAMES ${header}
-                    HINTS "${NETCDF_INCLUDE_DIR}"
-                    HINTS "${NETCDF_${lang}_ROOT}/include"
-                    ${USE_DEFAULT_PATHS})
-
-            find_library (NETCDF_${lang}_LIBRARY NAMES ${libs}
-                    HINTS "${NetCDF_lib_dirs}"
-                    HINTS "${NETCDF_${lang}_ROOT}/lib"
-                    ${USE_DEFAULT_PATHS})
-
-            mark_as_advanced (NETCDF_${lang}_INCLUDE_DIR NETCDF_${lang}_LIBRARY)
-
-            #export to internal varS that rest of project can use directly
-            set (NETCDF_${lang}_LIBRARIES ${NETCDF_${lang}_LIBRARY})
-            set (NETCDF_${lang}_INCLUDE_DIRS ${NETCDF_${lang}_INCLUDE_DIR})
-
-            if (NETCDF_${lang}_INCLUDE_DIR AND NETCDF_${lang}_LIBRARY)
-                list (APPEND NetCDF_libs ${NETCDF_${lang}_LIBRARY})
-                list (APPEND NetCDF_includes ${NETCDF_${lang}_INCLUDE_DIR})
-            else ()
-                set (NETCDF_HAS_INTERFACES "NO")
-                message (STATUS "Failed to find NetCDF interface for ${lang}")
-            endif ()
-        endif ()
-    endmacro ()
-
-    NetCDF_check_interface (CXX netcdfcpp.h netcdf_c++)
-    NetCDF_check_interface (F77 netcdf.inc  netcdff)
-    NetCDF_check_interface (F90 netcdf.mod  netcdff)
-
-    #export accumulated results to internal vars that rest of project can depend on
-    list (APPEND NetCDF_libs "${NETCDF_C_LIBRARIES}")
-    set (NETCDF_LIBRARIES ${NetCDF_libs})
-    set (NETCDF_INCLUDE_DIRS ${NetCDF_includes})
-endif()
-mark_as_advanced(NETCDF_LIBRARY NETCDF_INCLUDE_DIR)
-
-include (FindPackageHandleStandardArgs)
-find_package_handle_standard_args (NetCDF
-                                   FOUND_VAR NETCDF_FOUND
-                                   REQUIRED_VARS NETCDF_LIBRARY NETCDF_INCLUDE_DIR
-                                   VERSION_VAR NETCDF_VERSION
-                                   )
-
-if(NETCDF_FOUND)
-    if(NOT TARGET NETCDF::netCDF)
-        add_library(NETCDF::netCDF UNKNOWN IMPORTED)
-        set_target_properties(NETCDF::netCDF PROPERTIES
-            INTERFACE_INCLUDE_DIRECTORIES "${NETCDF_INCLUDE_DIRS}")
-        set_target_properties(NETCDF::netCDF PROPERTIES
-            IMPORTED_LINK_INTERFACE_LANGUAGES "C;CXX"
-            IMPORTED_LOCATION "${NETCDF_LIBRARIES}")
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindODBC.cmake b/cmake/modules/packages/FindODBC.cmake
deleted file mode 100644
index c9d0f68f65..0000000000
--- a/cmake/modules/packages/FindODBC.cmake
+++ /dev/null
@@ -1,258 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindODBC
---------
-
-Find an Open Database Connectivity (ODBC) include directory and library.
-
-On Windows, when building with Visual Studio, this module assumes the ODBC
-library is provided by the available Windows SDK.
-
-On Unix, this module allows to search for ODBC library provided by
-unixODBC or iODBC implementations of ODBC API.
-This module reads hint about location of the config program:
-
-.. variable:: ODBC_CONFIG
-
-  Location of odbc_config or iodbc-config program
-
-Otherwise, this module tries to find the config program,
-first from unixODBC, then from iODBC.
-If no config program found, this module searches for ODBC header
-and library in list of known locations.
-
-Imported targets
-^^^^^^^^^^^^^^^^
-
-This module defines the following :prop_tgt:`IMPORTED` targets:
-
-.. variable:: ODBC::ODBC
-
-  Imported target for using the ODBC library, if found.
-
-Result variables
-^^^^^^^^^^^^^^^^
-
-.. variable:: ODBC_FOUND
-
-  Set to true if ODBC library found, otherwise false or undefined.
-
-.. variable:: ODBC_INCLUDE_DIRS
-
-  Paths to include directories listed in one variable for use by ODBC client.
-  May be empty on Windows, where the include directory corresponding to the
-  expected Windows SDK is already available in the compilation environment.
-
-.. variable:: ODBC_LIBRARIES
-
-  Paths to libraries to linked against to use ODBC.
-  May just a library name on Windows, where the library directory corresponding
-  to the expected Windows SDK is already available in the compilation environment.
-
-.. variable:: ODBC_CONFIG
-
-  Path to unixODBC or iODBC config program, if found or specified.
-
-Cache variables
-^^^^^^^^^^^^^^^
-
-For users who wish to edit and control the module behavior, this module
-reads hints about search locations from the following variables:
-
-.. variable:: ODBC_INCLUDE_DIR
-
-  Path to ODBC include directory with ``sql.h`` header.
-
-.. variable:: ODBC_LIBRARY
-
-  Path to ODBC library to be linked.
-
-These variables should not be used directly by project code.
-
-Limitations
-^^^^^^^^^^^
-
-On Windows, this module does not search for iODBC.
-On Unix, there is no way to prefer unixODBC over iODBC, or vice versa,
-other than providing the config program location using the ``ODBC_CONFIG``.
-This module does not allow to search for a specific ODBC driver.
-
-#]=======================================================================]
-
-# Define lists used internally
-set(_odbc_include_paths)
-set(_odbc_lib_paths)
-set(_odbc_lib_names)
-set(_odbc_required_libs_names)
-
-### Try Windows Kits ##########################################################
-if(WIN32)
-  # List names of ODBC libraries on Windows
-  if(NOT MINGW AND NOT CYGWIN)
-    set(ODBC_LIBRARY odbc32.lib)
-  endif()
-  set(_odbc_lib_names odbc32;)
-
-  # List additional libraries required to use ODBC library
-  if(MSVC OR CMAKE_CXX_COMPILER_ID MATCHES "Intel")
-    set(_odbc_required_libs_names odbccp32;ws2_32)
-  elseif(MINGW)
-    set(_odbc_required_libs_names odbccp32)
-  endif()
-endif()
-
-### Try unixODBC or iODBC config program ######################################
-if (UNIX)
-  find_program(ODBC_CONFIG
-    NAMES odbc_config iodbc-config
-    DOC "Path to unixODBC or iODBC config program")
-  mark_as_advanced(ODBC_CONFIG)
-endif()
-
-if (UNIX AND ODBC_CONFIG)
-  # unixODBC and iODBC accept unified command line options
-  execute_process(COMMAND ${ODBC_CONFIG} --cflags
-    OUTPUT_VARIABLE _cflags OUTPUT_STRIP_TRAILING_WHITESPACE)
-  execute_process(COMMAND ${ODBC_CONFIG} --libs
-    OUTPUT_VARIABLE _libs OUTPUT_STRIP_TRAILING_WHITESPACE)
-
-  # Collect paths of include directories from CFLAGS
-  separate_arguments(_cflags NATIVE_COMMAND "${_cflags}")
-  foreach(arg IN LISTS _cflags)
-    if("${arg}" MATCHES "^-I(.*)$")
-      list(APPEND _odbc_include_paths "${CMAKE_MATCH_1}")
-    endif()
-  endforeach()
-  unset(_cflags)
-
-  # Collect paths of library names and directories from LIBS
-  separate_arguments(_libs NATIVE_COMMAND "${_libs}")
-  foreach(arg IN LISTS _libs)
-    if("${arg}" MATCHES "^-L(.*)$")
-      list(APPEND _odbc_lib_paths "${CMAKE_MATCH_1}")
-    elseif("${arg}" MATCHES "^-l(.*)$")
-      set(_lib_name ${CMAKE_MATCH_1})
-      string(REGEX MATCH "odbc" _is_odbc ${_lib_name})
-      if(_is_odbc)
-        list(APPEND _odbc_lib_names ${_lib_name})
-      else()
-        list(APPEND _odbc_required_libs_names ${_lib_name})
-      endif()
-      unset(_lib_name)
-    endif()
-  endforeach()
-  unset(_libs)
-endif()
-
-### Try unixODBC or iODBC in include/lib filesystems ##########################
-if (UNIX AND NOT ODBC_CONFIG)
-  # List names of both ODBC libraries, unixODBC and iODBC
-  set(_odbc_lib_names odbc;iodbc;unixodbc;)
-endif()
-
-### Find include directories ##################################################
-find_path(ODBC_INCLUDE_DIR
-  NAMES sql.h
-  PATHS ${_odbc_include_paths})
-
-if(NOT ODBC_INCLUDE_DIR AND WIN32)
-  set(ODBC_INCLUDE_DIR "")
-endif()
-
-### Find libraries ############################################################
-
-  find_library(ODBC_LIBRARY
-    NAMES ${_odbc_lib_names}
-    PATHS ${_odbc_lib_paths}
-    PATH_SUFFIXES odbc)
-
-  foreach(_lib IN LISTS _odbc_required_libs_names)
-    find_library(_lib_path
-      NAMES ${_lib}
-      PATHS ${_odbc_lib_paths} # system parths or collected from ODBC_CONFIG
-      PATH_SUFFIXES odbc)
-    if(_lib_path)
-      list(APPEND _odbc_required_libs_paths ${_lib_path})
-    endif()
-    unset(_lib_path CACHE)
-  endforeach()
-
-
-# Unset internal lists as no longer used
-unset(_odbc_include_paths)
-unset(_odbc_lib_paths)
-unset(_odbc_lib_names)
-unset(_odbc_required_libs_names)
-
-### Set result variables ######################################################
-set(_odbc_required_vars ODBC_LIBRARY)
-if(NOT WIN32)
-  list(APPEND _odbc_required_vars ODBC_INCLUDE_DIR)
-endif()
-
-
-foreach(component IN LISTS ODBC_FIND_COMPONENTS)
-  set(ODBC_${component}_FOUND FALSE)
-endforeach()
-
-if(ODBCINST IN_LIST ODBC_FIND_COMPONENTS)
-  find_library(ODBC_ODBCINST_LIBRARY
-               NAMES odbcinst
-               PATHS ${_odbc_lib_paths})
-  mark_as_advanced(ODBC_ODBCINST_LIBRARY)
-  if(ODBC_ODBCINST_LIBRARY)
-    set(ODBC_ODBCINST_FOUND TRUE)
-  endif()
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(ODBC
-                                  REQUIRED_VARS ${_odbc_required_vars}
-                                  HANDLE_COMPONENTS)
-
-unset(_odbc_required_vars)
-
-mark_as_advanced(ODBC_LIBRARY ODBC_INCLUDE_DIR)
-
-if(MSVC)
-  # legacy_stdio_definitions.lib : https://connect.microsoft.com/VisualStudio/feedback/details/1134693/vs-2015-ctp-5-c-vsnwprintf-s-and-other-functions-are-not-exported-in-appcrt140-dll-breaking-linkage-of-static-libraries
-  list(APPEND _odbc_required_libs_paths "legacy_stdio_definitions.lib;odbccp32.lib")
-endif()
-
-set(ODBC_INCLUDE_DIRS ${ODBC_INCLUDE_DIR})
-list(APPEND ODBC_LIBRARIES ${ODBC_LIBRARY})
-list(APPEND ODBC_LIBRARIES ${_odbc_required_libs_paths})
-set(ODBC_ODBCINST_LIBRARIES ${ODBC_ODBCINST_LIBRARY})
-
-### Import targets ############################################################
-if(ODBC_FOUND)
-  if(NOT TARGET ODBC::ODBC)
-    if(IS_ABSOLUTE "${ODBC_LIBRARY}")
-      add_library(ODBC::ODBC UNKNOWN IMPORTED)
-      set_target_properties(ODBC::ODBC PROPERTIES
-        IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-        IMPORTED_LOCATION "${ODBC_LIBRARY}")
-    else()
-      add_library(ODBC::ODBC INTERFACE IMPORTED)
-      set_target_properties(ODBC::ODBC PROPERTIES
-        IMPORTED_LIBNAME "${ODBC_LIBRARY}")
-    endif()
-    set_target_properties(ODBC::ODBC PROPERTIES
-      INTERFACE_INCLUDE_DIRECTORIES "${ODBC_INCLUDE_DIR}")
-
-    if(_odbc_required_libs_paths)
-      set_property(TARGET ODBC::ODBC APPEND PROPERTY
-        INTERFACE_LINK_LIBRARIES "${_odbc_required_libs_paths}")
-    endif()
-    if(ODBCINST IN_LIST ODBC_FIND_COMPONENTS)
-      add_library(ODBC::ODBCINST UNKNOWN IMPORTED)
-      set_target_properties(ODBC::ODBCINST PROPERTIES
-                            IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                            IMPORTED_LOCATION ${ODBC_ODBCINST_LIBRARY})
-    endif()
-  endif()
-endif()
-
-unset(_odbc_required_libs_paths)
diff --git a/cmake/modules/packages/FindODBCCPP.cmake b/cmake/modules/packages/FindODBCCPP.cmake
deleted file mode 100644
index b04632233d..0000000000
--- a/cmake/modules/packages/FindODBCCPP.cmake
+++ /dev/null
@@ -1,72 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindODBCCPP
---------------
-
-Find the odbc-cpp-wrapper includes and library.
-
-IMPORTED Targets
-^^^^^^^^^^^^^^^^
-
-This module defines :prop_tgt:`IMPORTED` target ``ODBCCPP::ODBCCPP``, if
-the odbc-cpp-wrapper has been found.
-
-Result Variables
-^^^^^^^^^^^^^^^^
-
-This module defines the following variables:
-
-::
-
-  ODBCCPP_INCLUDE_DIRS - where to find the odbc-cpp-wrapper headers.
-  ODBCCPP_LIBRARIES    - List of libraries when using the odbc-cpp-wrapper.
-  ODBCCPP_FOUND        - True if the odbc-cpp-wrapper found.
-
-#]=======================================================================]
-
-if(NOT ODBCCPP_INCLUDE_DIR)
-  find_path(ODBCCPP_INCLUDE_DIR odbc/Environment.h
-    PATHS
-     /usr/include
-     /usr/local/include
-     c:/msys/local/include
-     "$ENV{LIB_DIR}/include"
-     "$ENV{INCLUDE}"
-     "$ENV{ODBCCPP_PATH}/include")
-endif(NOT ODBCCPP_INCLUDE_DIR)
-
-if(NOT ODBCCPP_LIBRARY)
-  find_library(ODBCCPP_LIBRARY odbccpp
-    PATHS
-     /usr/lib
-     /usr/local/lib
-     c:/msys/local/lib
-     "$ENV{LIB_DIR}/lib"
-     "$ENV{LIB}"
-     "$ENV{ODBCCPP_PATH}/lib")
-endif(NOT ODBCCPP_LIBRARY)
-
-if(ODBCCPP_INCLUDE_DIR AND ODBCCPP_LIBRARY)
-   set(ODBCCPP_FOUND TRUE)
-endif(ODBCCPP_INCLUDE_DIR AND ODBCCPP_LIBRARY)
-
-mark_as_advanced(ODBCCPP_LIBRARY ODBCCPP_INCLUDE_DIR)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(ODBCCPP
-                                  FOUND_VAR ODBCCPP_FOUND
-                                  REQUIRED_VARS ODBCCPP_LIBRARY ODBCCPP_INCLUDE_DIR)
-
-if(ODBCCPP_FOUND)
-  set(ODBCCPP_INCLUDE_DIRS ${ODBCCPP_INCLUDE_DIR})
-  set(ODBCCPP_LIBRARIES ${ODBCCPP_LIBRARY})
-  if(NOT TARGET ODBCCPP::ODBCCPP)
-      add_library(ODBCCPP::ODBCCPP UNKNOWN IMPORTED)
-      set_target_properties(ODBCCPP::ODBCCPP PROPERTIES
-                            INTERFACE_INCLUDE_DIRECTORIES "${ODBCCPP_INCLUDE_DIRS}"
-                            IMPORTED_LINK_INTERFACE_LANGUAGES "CXX"
-                            IMPORTED_LOCATION "${ODBCCPP_LIBRARY}")
-  endif()
-endif()
diff --git a/cmake/modules/packages/FindOGDI.cmake b/cmake/modules/packages/FindOGDI.cmake
deleted file mode 100644
index f39e62596e..0000000000
--- a/cmake/modules/packages/FindOGDI.cmake
+++ /dev/null
@@ -1,63 +0,0 @@
-# FindOGDI
-# ~~~~~~~~~
-#
-# Copyright (c) 2017, Hiroshi Miura <miurahr@linux.com>
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-#
-# If it's found it sets OGDI_FOUND to TRUE
-# and following variables are set:
-#    OGDI_INCLUDE_DIRS
-#    OGDI_LIBRARIES
-#    OGDI_VERSION
-#
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-  pkg_check_modules(PC_OGDI QUIET ogdi)
-  set(OGDI_VERSION_STRING ${PC_OGDI_VERSION})
-  set(OGDI_INCLUDE_DIRS ${PC_OGDI_INCLUDE_DIRS})
-endif()
-
-find_path(OGDI_INCLUDE_DIR ecs.h
-          HINTS ${PC_OGDI_INCLUDE_DIRS}
-          PATH_SUFFIXES ogdi)
-mark_as_advanced(OGDI_INCLUDE_DIR)
-
-find_library(OGDI_LIBRARY NAMES ogdi libogdi)
-mark_as_advanced(OGDI_LIBRARY)
-
-if(OGDI_INCLUDE_DIR AND OGDI_LIBRARY)
-  find_program(OGDI_CONFIG_EXE ogdi-config)
-  mark_as_advanced(OGDI_CONFIG_EXE)
-  execute_process(COMMAND ${OGDI_CONFIG_EXE} --version
-    OUTPUT_VARIABLE OGDI_VERSION
-    OUTPUT_STRIP_TRAILING_WHITESPACE
-    )
-  execute_process(COMMAND ${OGDI_CONFIG_EXE} --cflags
-    OUTPUT_VARIABLE _cflags OUTPUT_STRIP_TRAILING_WHITESPACE
-    )
-  # Collect paths of include directories from CFLAGS
-  separate_arguments(_cflags NATIVE_COMMAND "${_cflags}")
-  foreach(arg IN LISTS _cflags)
-    if("${arg}" MATCHES "^-I(.*)$")
-      list(APPEND OGDI_INCLUDE_DIRS "${CMAKE_MATCH_1}")
-    endif()
-  endforeach()
-  unset(_cflags)
-endif()
-
-find_package_handle_standard_args(OGDI REQUIRED_VARS OGDI_LIBRARY OGDI_INCLUDE_DIRS
-                                  VERSION_VAR OGDI_VERSION)
-
-if(OGDI_FOUND)
-    set(OGDI_LIBRARIES ${OGDI_LIBRARY})
-    set(OGDI_INCLUDE_DIRS ${OGDI_INCLUDE_DIRS})
-    if(NOT TARGET OGDI::OGDI)
-        add_library(OGDI::OGDI UNKNOWN IMPORTED)
-        set_target_properties(OGDI::OGDI PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES "${OGDI_INCLUDE_DIRS}"
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION "${OGDI_LIBRARY}")
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindOpenCAD.cmake b/cmake/modules/packages/FindOpenCAD.cmake
deleted file mode 100644
index c56ef543fe..0000000000
--- a/cmake/modules/packages/FindOpenCAD.cmake
+++ /dev/null
@@ -1,96 +0,0 @@
-# Find opencad
-# ~~~~~~~~~
-# Copyright (c) 2016, Dmitry Baryshnikov <polimax at mail.ru>
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-#
-# CMake module to search for opencad library
-#
-# If it's found it sets OPENCAD_FOUND to TRUE
-# and following variables are set:
-#    OPENCAD_INCLUDE_DIR
-#    OPENCAD_LIBRARY
-
-# FIND_PATH and FIND_LIBRARY normally search standard locations
-# before the specified paths. To search non-standard paths first,
-# FIND_* is invoked first with specified paths and NO_DEFAULT_PATH
-# and then again with no specified paths to search the default
-# locations. When an earlier FIND_* succeeds, subsequent FIND_*s
-# searching for the same item do nothing. 
-
-# try to use framework on mac
-# want clean framework path, not unix compatibility path
-# Try to use OSGeo4W installation
-IF(WIN32)
-    SET(OPENCAD_OSGEO4W_HOME "C:/OSGeo4W") 
-
-    IF($ENV{OSGEO4W_HOME})
-        SET(OPENCAD_OSGEO4W_HOME "$ENV{OSGEO4W_HOME}") 
-    ENDIF()
-ENDIF(WIN32)
-
-FIND_PATH(OPENCAD_INCLUDE_DIR opencad.h
-    PATHS ${OPENCAD_OSGEO4W_HOME}/include
-    PATH_SUFFIXES opencad
-    DOC "Path to OPENCAD library include directory")
-
-SET(OPENCAD_NAMES ${OPENCAD_NAMES} opencad opencad_i)
-FIND_LIBRARY(OPENCAD_LIBRARY
-    NAMES ${OPENCAD_NAMES}
-    PATHS ${OPENCAD_OSGEO4W_HOME}/lib
-    DOC "Path to OPENCAD library file")
-
-if(OPENCAD_INCLUDE_DIR)
-    set(OPENCAD_VERSION_MAJOR 0)
-    set(OPENCAD_VERSION_MINOR 0)
-    set(OPENCAD_VERSION_PATCH 0)
-    set(OPENCAD_VERSION_NAME "EARLY RELEASE")
-
-    if(EXISTS "${OPENCAD_INCLUDE_DIR}/opencad.h")
-        file(READ "${OPENCAD_INCLUDE_DIR}/opencad.h" OPENCAD_API_H_CONTENTS)
-        string(REGEX MATCH "OCAD_VERSION_MAJOR[ \t]+([0-9]+)"
-          OPENCAD_VERSION_MAJOR ${OPENCAD_API_H_CONTENTS})
-        string (REGEX MATCH "([0-9]+)"
-          OPENCAD_VERSION_MAJOR ${OPENCAD_VERSION_MAJOR})
-        string(REGEX MATCH "OCAD_VERSION_MINOR[ \t]+([0-9]+)"
-          OPENCAD_VERSION_MINOR ${OPENCAD_API_H_CONTENTS})
-        string (REGEX MATCH "([0-9]+)"
-          OPENCAD_VERSION_MINOR ${OPENCAD_VERSION_MINOR})
-
-        string(REGEX MATCH "OCAD_VERSION_REV[ \t]+([0-9]+)"
-          OPENCAD_VERSION_PATCH ${OPENCAD_API_H_CONTENTS})
-        string (REGEX MATCH "([0-9]+)"
-          OPENCAD_VERSION_PATCH ${OPENCAD_VERSION_PATCH})
-
-        unset(OPENCAD_API_H_CONTENTS)
-    endif()
-      
-    set(OPENCAD_VERSION_STRING "${OPENCAD_VERSION_MAJOR}.${OPENCAD_VERSION_MINOR}.${OPENCAD_VERSION_PATCH}")   
-endif ()    
-         
-# Handle the QUIETLY and REQUIRED arguments and set SPATIALINDEX_FOUND to TRUE
-# if all listed variables are TRUE
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(OpenCAD
-                                  FOUND_VAR OPENCAD_FOUND
-                                  REQUIRED_VARS OPENCAD_LIBRARY OPENCAD_INCLUDE_DIR 
-                                  VERSION_VAR OPENCAD_VERSION_STRING)
-
-IF(OPENCAD_FOUND)
-  set(OPENCAD_LIBRARIES ${OPENCAD_LIBRARY})
-  set(OPENCAD_INCLUDE_DIRS ${OPENCAD_INCLUDE_DIR})
-  if(NOT TARGET OpenCAD::opencad)
-      add_library(OpenCAD::opencad UNKNOWN IMPORTED)
-      set_target_properties(OpenCAD::opencad PROPERTIES
-                            INTERFACE_INCLUDE_DIRECTORIES "${OPENCAD_INCLUDE_DIR}"
-                            IMPORTED_LINK_INTERFACE_LANGUAGES C
-                            IMPORTED_LOCATION "${OPENCAD_LIBRARY}")
-  endif()
-ENDIF()
-
-# Hide internal variables
-mark_as_advanced(
-  OPENCAD_INCLUDE_DIR
-  OPENCAD_LIBRARY)
-
-#======================
diff --git a/cmake/modules/packages/FindOpenEXR.cmake b/cmake/modules/packages/FindOpenEXR.cmake
deleted file mode 100644
index e6e26ee6ca..0000000000
--- a/cmake/modules/packages/FindOpenEXR.cmake
+++ /dev/null
@@ -1,125 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#.rst:
-# FindOpenEXR
-# -----------
-#
-# CMake module to search for OpenEXR library
-#
-# Copyright (C) 2020, Hiroshi Miura
-#
-# If it's found it sets OpenEXR_FOUND to TRUE
-# and following variables are set:
-#    OpenEXR_INCLUDE_DIRS
-#    OpenEXR_LIBRARIES
-#
-
-if(OpenEXR_ROOT)
-  list(APPEND OpenEXR_INC_HINTS ${OpenEXR_ROOT}/include/OpenEXR)
-  list(APPEND OpenEXR_LIB_HINTS ${OpenEXR_ROOT}/lib)
-  list(APPEND CMAKE_PREFIX_PATH ${OpenEXR_ROOT})
-endif()
-
-if(Imath_ROOT)
-  list(APPEND Imath_INC_HINTS ${Imath_ROOT}/include/Imath)
-  list(APPEND Imath_LIB_HINTS ${Imath_ROOT}/lib)
-  list(APPEND CMAKE_PREFIX_PATH ${Imath_ROOT})
-endif()
-
-find_package(PkgConfig QUIET)
-if (PKG_CONFIG_FOUND)
-  pkg_check_modules(PC_OpenEXR QUIET OpenEXR)
-  if(PC_OpenEXR_FOUND)
-    list(APPEND OpenEXR_LIB_HINTS ${PC_OpenEXR_LIBRARY_DIRS})
-    list(APPEND OpenEXR_INC_HINTS ${PC_OpenEXR_INCLUDE_DIRS})
-    set(OpenEXR_VERSION_STRING ${PC_OpenEXR_VERSION})
-  endif()
-endif ()
-
-find_path(OpenEXR_INCLUDE_DIR
-          NAMES ImfVersion.h
-          HINTS ${OpenEXR_INC_HINTS}
-          PATH_SUFFIXES OpenEXR)
-find_path(Imath_INCLUDE_DIR
-          NAMES ImathMatrix.h
-          HINTS ${Imath_INC_HINTS} ${OpenEXR_INCLUDE_DIR}
-          PATH_SUFFIXES Imath)
-
-if(OpenEXR_INCLUDE_DIR AND NOT OpenEXR_VERSION_STRING)
-  # Fallback for PkgConfig not finding anything
-  file(READ ${OpenEXR_INCLUDE_DIR}/OpenEXRConfig.h txt)
-  string(REGEX MATCH "define[ \t]+OPENEXR_VERSION_STRING[ \t]+\"([0-9]+(.[0-9]+)?(.[0-9]+)?)\".*$" _ ${txt})
-  set(OpenEXR_VERSION_STRING ${CMAKE_MATCH_1})
-endif()
-
-if (OpenEXR_VERSION_STRING VERSION_GREATER_EQUAL 3.0)
-    find_library(OpenEXR_LIBRARY
-                 NAMES OpenEXR
-                 HINTS ${OpenEXR_LIB_HINTS})
-    find_library(OpenEXR_UTIL_LIBRARY
-                 NAMES OpenEXRUtil
-                 HINTS ${OpenEXR_LIB_HINTS})
-    find_library(OpenEXR_HALF_LIBRARY
-                 NAMES Imath
-                 HINTS ${Imath_LIB_HINTS})  #Imath is considered separate since v3
-    find_library(OpenEXR_IEX_LIBRARY
-                 NAMES Iex
-                 HINTS ${OpenEXR_LIB_HINTS})
-else()
-    find_library(OpenEXR_LIBRARY
-                 NAMES IlmImf
-                 HINTS ${OpenEXR_LIB_HINTS})
-    find_library(OpenEXR_UTIL_LIBRARY
-                 NAMES IlmImfUtil
-                 HINTS ${OpenEXR_LIB_HINTS})
-    find_library(OpenEXR_HALF_LIBRARY
-                 NAMES Half
-                 HINTS ${OpenEXR_LIB_HINTS})
-    find_library(OpenEXR_IEX_LIBRARY
-                 NAMES Iex
-                 HINTS ${OpenEXR_LIB_HINTS})
-endif()
-
-mark_as_advanced(OpenEXR_LIBRARY
-                 OpenEXR_UTIL_LIBRARY
-                 OpenEXR_HALF_LIBRARY
-                 OpenEXR_IEX_LIBRARY
-                 OpenEXR_INCLUDE_DIR
-                 Imath_INCLUDE_DIR)
-
-find_package_handle_standard_args(OpenEXR FOUND_VAR OpenEXR_FOUND
-                                  REQUIRED_VARS OpenEXR_LIBRARY
-                                                OpenEXR_UTIL_LIBRARY
-                                                OpenEXR_HALF_LIBRARY
-                                                OpenEXR_IEX_LIBRARY
-                                                OpenEXR_INCLUDE_DIR
-                                                Imath_INCLUDE_DIR
-                                  VERSION_VAR OpenEXR_VERSION_STRING)
-
-if (OpenEXR_FOUND)
-  set(OpenEXR_INCLUDE_DIRS ${OpenEXR_INCLUDE_DIR} ${Imath_INCLUDE_DIR})
-  set(OpenEXR_LIBRARIES ${OpenEXR_LIBRARY} ${OpenEXR_UTIL_LIBRARY} ${OpenEXR_HALF_LIBRARY} ${OpenEXR_IEX_LIBRARY})
-  if (NOT TARGET OpenEXR::OpenEXR)
-    add_library(OpenEXR::IlmImf UNKNOWN IMPORTED)
-    add_library(OpenEXR::IlmImfUtil UNKNOWN IMPORTED)
-    add_library(OpenEXR::Half UNKNOWN IMPORTED)
-    add_library(OpenEXR::Iex UNKNOWN IMPORTED)
-    set_target_properties(OpenEXR::IlmImf  PROPERTIES
-                          INTERFACE_INCLUDE_DIRECTORIES "${OpenEXR_INCLUDE_DIRS}"
-                          IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                          IMPORTED_LOCATION ${OpenEXR_LIBRARY})
-    set_target_properties(OpenEXR::IlmImfUtil PROPERTIES
-                          INTERFACE_INCLUDE_DIRECTORIES "${OpenEXR_INCLUDE_DIRS}"
-                          IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                          IMPORTED_LOCATION ${OpenEXR_UTIL_LIBRARY})
-    set_target_properties(OpenEXR::Half PROPERTIES
-                          INTERFACE_INCLUDE_DIRECTORIES "${OpenEXR_INCLUDE_DIRS}"
-                          IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                          IMPORTED_LOCATION ${OpenEXR_HALF_LIBRARY})
-    set_target_properties(OpenEXR::Iex PROPERTIES
-                          INTERFACE_INCLUDE_DIRECTORIES "${OpenEXR_INCLUDE_DIRS}"
-                          IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                          IMPORTED_LOCATION ${OpenEXR_IEX_LIBRARY})
-  endif ()
-endif ()
diff --git a/cmake/modules/packages/FindOpenJPEG.cmake b/cmake/modules/packages/FindOpenJPEG.cmake
deleted file mode 100644
index c6974848d1..0000000000
--- a/cmake/modules/packages/FindOpenJPEG.cmake
+++ /dev/null
@@ -1,124 +0,0 @@
-###
-# File:  FindOpenJPEG.cmake
-#
-
-function(transform_version _numerical_result _version_major _version_minor _version_patch)
-  set(factor 100)
-  if(_version_minor GREATER 99)
-      set(factor 1000)
-  endif()
-  if(_verion_patch GREATER 99)
-      set(factor 1000)
-  endif()
-  math(EXPR _internal_numerical_result
-          "${_version_major}*${factor}*${factor} + ${_version_minor}*${factor} + ${_version_patch}"
-          )
-  set(${_numerical_result} ${_internal_numerical_result} PARENT_SCOPE)
-endfunction()
-
-
-# - Find OpenJPEG
-# Find the OpenJPEG includes and library
-#
-# IMPORTED Target
-#      OPENJPEG::OpenJPEG
-#
-# This module defines
-#  OPENJPEG_INCLUDE_DIR, where to find openjpeg.h, etc.
-#  OPENJPEG_LIBRARIES, the libraries needed to use OpenJPEG.
-#  OPENJPEG_FOUND, If false, do not try to use OpenJPEG.
-# also defined, but not for general use are
-#  OPENJPEG_LIBRARY, where to find the OpenJPEG library.
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-    pkg_check_modules(PC_OPENJPEG QUIET libopenjp2)
-    set(OPENJPEG_VERSION_STRING ${PC_OPENJPEG_VERSION})
-endif()
-
-
-find_path(OPENJPEG_INCLUDE_DIR opj_config.h
-          PATH_SUFFIXES
-              openjpeg-2.5
-              openjpeg-2.4
-              openjpeg-2.3
-              openjpeg-2.2
-              openjpeg-2.1
-              openjpeg-2.0
-          HINTS ${PC_OPENJPEG_INCLUDE_DIRS}
-          DOC "Location of OpenJPEG Headers"
-)
-
-find_library(OPENJPEG_LIBRARY
-             NAMES openjp2
-             HINTS ${PC_OPENJPEG_LIBRARY_DIRS}
-             )
-mark_as_advanced(OPENJPEG_LIBRARY OPENJPEG_INCLUDE_DIR)
-
-if(OPENJPEG_INCLUDE_DIR)
-    if(OPENJPEG_VERSION_STRING)
-        string(REGEX MATCH "([0-9]+).([0-9]+).([0-9]+)" OPJ_VERSION ${OPENJPEG_VERSION_STRING})
-        if(OPJ_VERSION)
-            transform_version(OPENJPEG_VERSION_NUM ${CMAKE_MATCH_1} ${CMAKE_MATCH_2} ${CMAKE_MATCH_3})
-        else()
-            message(FATAL "OpenJPEG version not found")
-        endif()
-    else()
-        if(OPENJPEG_INCLUDE_DIR MATCHES "openjpeg-2.0")
-            if(EXISTS "${OPENJPEG_INCLUDE_DIR}/opj_config.h")
-                file(READ "${OPENJPEG_INCLUDE_DIR}/opj_config.h" VERSION_H_CONTENTS)
-                string(REGEX MATCH "OPJ_PACKAGE_VERSION[ \t]+\"([0-9]+).([0-9]+).([0-9]+)\""
-                       OPJ_VERSION ${VERSION_H_CONTENTS})
-                string(REGEX MATCH "([0-9]+).([0-9]+).([0-9]+)"
-                       OPJ_VERSION ${OPJ_VERSION})
-                if(OPJ_VERSION)
-                    transform_version(OPENJPEG_VERSION_NUM ${CMAKE_MATCH_1} ${CMAKE_MATCH_2} ${CMAKE_MATCH_3})
-                else()
-                    message(FATAL "OpenJPEG 2.0 header version not found")
-                endif()
-            endif()
-        else()
-            set(MAJOR_VERSION 0)
-            set(MINOR_VERSION 0)
-            set(REV_VERSION 0)
-            if(EXISTS "${OPENJPEG_INCLUDE_DIR}/opj_config.h")
-                file(READ "${OPENJPEG_INCLUDE_DIR}/opj_config.h" VERSION_H_CONTENTS)
-                string(REGEX MATCH "OPJ_VERSION_MAJOR[ \t]+([0-9]+)"
-                  MAJOR_VERSION ${VERSION_H_CONTENTS})
-                string (REGEX MATCH "([0-9]+)" MAJOR_VERSION ${MAJOR_VERSION})
-                string(REGEX MATCH "OPJ_VERSION_MINOR[ \t]+([0-9]+)"
-                  MINOR_VERSION ${VERSION_H_CONTENTS})
-                string (REGEX MATCH "([0-9]+)"
-                  MINOR_VERSION ${MINOR_VERSION})
-                string(REGEX MATCH "OPJ_VERSION_BUILD[ \t]+([0-9]+)"
-                  REV_VERSION ${VERSION_H_CONTENTS})
-                string (REGEX MATCH "([0-9]+)"
-                  REV_VERSION ${REV_VERSION})
-                unset(VERSION_H_CONTENTS)
-            endif()
-            set(OPENJPEG_VERSION_STRING "${MAJOR_VERSION}.${MINOR_VERSION}.${REV_VERSION}")
-            TRANSFORM_VERSION(OPENJPEG_VERSION_NUM ${MAJOR_VERSION} ${MINOR_VERSION} ${REV_VERSION})
-            unset(MAJOR_VERSION)
-            unset(MINOR_VERSION)
-            unset(REV_VERSION)
-        endif()
-   endif()
-endif ()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(OpenJPEG
-                                  FOUND_VAR OPENJPEG_FOUND
-                                  REQUIRED_VARS OPENJPEG_LIBRARY OPENJPEG_INCLUDE_DIR
-                                  VERSION_VAR OPENJPEG_VERSION_STRING)
-if(OPENJPEG_FOUND)
-  set(OPENJPEG_LIBRARIES ${OPENJPEG_LIBRARY})
-  set(OPENJPEG_INCLUDE_DIRS ${OPENJPEG_INCLUDE_DIR})
-
-  if(NOT TARGET OPENJPEG::OpenJPEG)
-    add_library(OPENJPEG::OpenJPEG UNKNOWN IMPORTED)
-    set_target_properties(OPENJPEG::OpenJPEG PROPERTIES
-                          INTERFACE_INCLUDE_DIRECTORIES ${OPENJPEG_INCLUDE_DIR}
-                          IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                          IMPORTED_LOCATION "${OPENJPEG_LIBRARY}")
-  endif()
-endif()
diff --git a/cmake/modules/packages/FindOracle.cmake b/cmake/modules/packages/FindOracle.cmake
deleted file mode 100644
index e198a4827a..0000000000
--- a/cmake/modules/packages/FindOracle.cmake
+++ /dev/null
@@ -1,226 +0,0 @@
-#.rst:
-# FindOracle
-# ----------
-#
-# Configure Oracle libraries
-#
-# ORACLE_FOUND - system has Oracle OCI
-# ORACLE_INCLUDE_DIRS - where to find oci.h
-# ORACLE_LIBRARIES - the libraries to link against to use Oracle OCI
-#
-# Components: CLNTSH, CLNTST, OCCI, XML, OCIEI
-# CLNTSH is enabled by default
-# for example: FIND_PACKAGE(Oracle REQUIRED CLNTSH OCCI)
-#
-# This module will set the following variables in your project:
-#
-# ``ORACLE_FOUND``
-#   Oracle installation detected (InstantClient or "thick" client)
-# ``ORACLE_INCLUDE_DIRS``
-#   Oracle include directory (where oci.h resides)
-# ``ORACLE_CLNTSH_LIBRARY``
-#   Library libclntsh.so.*
-# ``ORACLE_CLNTST_LIBRARY``
-#   Library libclntst??.a (not present in InstantClient, must be generated by executing genclntst)
-# ``ORACLE_OCCI_LIBRARY``
-#   OCCI C++ client library
-# ``ORACLE_XML_LIBRARY``
-#   Oracle XMLTYPE library libxml?.a (usually static, only present in thick client)
-# ``ORACLE_LIBRARIES``
-#   All Oracle libraries detected libclntsh.so.*, libociei.so.8 libxml.a ....
-# ``ORACLE_OCI_VERSION``
-#   This is set to 8i, 9i, 10g, 11g, 12c
-
-# TOra Project: Configure Oracle libraries
-#
-# Copyright (c) 2007 Petr Vanek <petr@yarpen.cz>
-# Copyright (c) 2016 Ivan Brezina <ibre5041@ibrezina.net>
-# Redistribution and use is allowed according to the terms of the BSD license.
-#
-
-# Port to GDAL
-# Copyright (c) 2018 Hiroshi Miura
-#
-
-if(DEFINED Oracle_ROOT)
-    set(ORACLE_HOME "${Oracle_ROOT}")
-elseif(DEFINED ORACLE_ROOT)
-    set(ORACLE_HOME "${ORACLE_ROOT}")
-else()
-    file(TO_CMAKE_PATH "$ENV{ORACLE_HOME}" ORACLE_HOME)
-endif()
-get_filename_component(XE_HOME "[HKEY_LOCAL_MACHINE\\SOFTWARE\\ORACLE\\KEY_XE;ORACLE_HOME]" ABSOLUTE CACHE)
-mark_as_advanced(XE_HOME)
-
-set(ORACLE_INCLUDES_LOCATION
-        ${ORACLE_HOME}/rdbms/public
-        ${ORACLE_HOME}/include
-        # xdk
-        ${ORACLE_HOME}/xdk/include
-        # sdk
-        ${ORACLE_HOME}/sdk/include/
-        # xe on windows
-        ${ORACLE_HOME}/OCI/include/
-        # instant client from rpm
-        /usr/include/oracle/11.2/client${LIB_SUFFIX}/
-        /usr/include/oracle/12.1/client${LIB_SUFFIX}/
-        # instantclient on OS X from macports
-        /opt/local/lib/oracle/sdk/include/
-        # Oracle XE Windows
-        ${XE_HOME}/oci/include/
-   )
-
-find_path(Oracle_INCLUDE_DIR oci.h
-          PATHS ${ORACLE_INCLUDES_LOCATION}
-          HINTS ${ORACLE_PATH_LIB}
-          NO_DEFAULT_PATH NO_CMAKE_ENVIRONMENT_PATH NO_CMAKE_PATH NO_SYSTEM_ENVIRONMENT_PATH NO_CMAKE_SYSTEM_PATH
-)
-
-# guess OCI version
-#   we need it before lib checking because of OS X bugs in instant client (see below)
-if (NOT DEFINED ORACLE_OCI_VERSION AND ORACLE_INCLUDES)
-  try_run(OCIVER_TYPE OCIVER_COMPILED
-          ${PROJECT_BINARY_DIR}
-          ${PROJECT_SOURCE_DIR}/cmake/modules/OCIVersion.c
-          CMAKE_FLAGS "-DINCLUDE_DIRECTORIES:STRING=${ORACLE_INCLUDES}"
-          OUTPUT_VARIABLE OCIVER)
-
-  if(${OCIVER_TYPE} GREATER "120")
-    set(ORACLE_OCI_VERSION "12C")
-  elseif(${OCIVER_TYPE} GREATER "110")
-    set(ORACLE_OCI_VERSION "11G")
-  elseif(${OCIVER_TYPE} EQUAL "102")
-    set(ORACLE_OCI_VERSION "10G_R2")
-  elseif(${OCIVER_TYPE} EQUAL "101")
-    set(ORACLE_OCI_VERSION "10G")
-  elseif(${OCIVER_TYPE} EQUAL "91")
-    set(ORACLE_OCI_VERSION "9")
-  elseif(${OCIVER_TYPE} EQUAL "92")
-    set(ORACLE_OCI_VERSION "9")
-  elseif(NOT ${OCIVER_TYPE} GREATER "90")
-    set(ORACLE_OCI_VERSION "8I")
-  else(${OCIVER_TYPE} GREATER "110")
-    set(ORACLE_OCI_VERSION "10G_R2")
-  endif ()
-
-  message(STATUS "Guessed ORACLE_OCI_VERSION value: ${ORACLE_OCI_VERSION} for ${OCIVER_TYPE}")
-
-  if(APPLE)
-    if(${OCIVER_TYPE} LESS 110)
-        list(FIND Oracle_FIND_COMPONENTS "OCIEI" _nextcomp)
-        if(_nextcomp EQUAL -1)
-            list(APPEND Oracle_FIND_COMPONENTS OCIEI)
-            message(STATUS "    APPLE requires libociei for instantclient < 11, enforcing ociei")
-        endif()
-    endif()
-  endif()
-endif()
-
-set(ORACLE_LIB_LOCATION
-        # TODO add 32/64bit version here (lib32/lib64 on some platforms)
-        ${ORACLE_HOME}/lib
-        # xe on windows
-        ${ORACLE_HOME}/OCI/lib/MSVC/
-        ${ORACLE_HOME}
-        # InstantClient on WinXP
-        ${ORACLE_HOME}/sdk/lib/msvc/
-        # Instant client from rpm
-        /usr/lib${LIB_SUFFIX}/
-        /usr/lib/oracle/11.2/client${LIB_SUFFIX}/lib/
-        /usr/lib/oracle/12.1/client${LIB_SUFFIX}/lib/
-        # instant client on OS X from macports
-        /opt/local/lib/oracle/
-        # Oracle XE Windows
-        ${XE_HOME}/oci/lib/MSVC/
-    )
-
-# The NO_DEFAULT_PATH is necessary here in the case there is Oracle DB
-# *and* instant client installed. The order is given in ORACLE_LIB_LOCATION.
-# See above.
-find_library(Oracle_LIBRARY
-             NAMES oci
-             PATHS ${ORACLE_LIB_LOCATION}
-             HINTS ${ORACLE_PATH_LIBS}
-             NO_DEFAULT_PATH
-             )
-
-# Oracle InstantClient 12.1 has no liboci. It seems we just need libclntsh
-# for the GDAL drivers.
-if( Oracle_CAN_USE_CLNTSH_AS_MAIN_LIBRARY AND "${Oracle_FIND_COMPONENTS}" STREQUAL "")
-    set(Oracle_FIND_COMPONENTS CLNTSH)
-endif()
-
-foreach(_comp IN LISTS Oracle_FIND_COMPONENTS)
-  set(Oracle_${_comp}_FOUND FALSE)
-endforeach()
-
-set(Oracle_known_components CLNTSH CLNTST OCCI XML OCIEI)
-
-set(Oracle_CLNTSH_lib libclntsh clntsh)
-set(Oracle_CLNTST_lib libclntst libclntst9 libclntst10 libclntst11 libclntst12 clntst clntst9 clntst10 clntst11 clntst12)
-set(Oracle_OCCI_lib libocci occi)
-set(Oracle_XML_lib
-    libxml xml libxml10 xml10 libxml11 xml11 oraxml10 oraxml11)
-set(Oracle_XML_header xml.h)
-set(Oracle_OCIEI_lib libociei ociei)
-
-foreach(_comp IN LISTS Oracle_known_components)
-    list(FIND Oracle_FIND_COMPONENTS "${_comp}" _nextcomp)
-    if(_nextcomp GREATER -1)
-        find_library(Oracle_${_comp}_LIBRARY
-                     NAMES ${Oracle_${_comp}_lib}
-                     PATHS ${ORACLE_LIB_LOCATION}
-                     NO_DEFAULT_PATH
-        )
-        mark_as_advanced(Oracle_${_comp}_LIBRARY)
-        if(Oracle_${_comp}_header)
-            find_path(Oracle_${_comp}_INCLUDE_DIR
-                      NAMES ${Oracle_${_comp}_header}
-                      PATHS ${ORACLE_INCLUDES_LOCATION}
-                      NO_DEFAULT_PATH)
-            mark_as_advanced(Oracle_${_comp}_INCLUDE_DIR)
-        endif()
-    endif()
-endforeach()
-
-if( NOT Oracle_LIBRARY AND Oracle_CAN_USE_CLNTSH_AS_MAIN_LIBRARY AND Oracle_CLNTSH_LIBRARY )
-    set(Oracle_LIBRARY "${Oracle_CLNTSH_LIBRARY}")
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(Oracle
-                                  FOUND_VAR Oracle_FOUND
-                                  REQUIRED_VARS Oracle_LIBRARY Oracle_INCLUDE_DIR
-                                  VERSION_VAR ORACLE_OCI_VERSION
-                                  HANDLE_COMPONENTS)
-mark_as_advanced(Oracle_INCLUDE_DIR Oracle_LIBRARY)
-
-IF(Oracle_FOUND)
-    set(Oracle_INCLUDE_DIRS ${Oracle_INCLUDE_DIR})
-    set(Oracle_LIBRARIES ${Oracle_LIBRARY})
-    if(Oracle_XML_INCLUDE_DIR AND Oracle_XML_LIBRARY)
-        list(APPEND Oracle_INCLUDE_DIRS ${Oracle_XML_INCLUDE_DIR})
-    endif()
-    if(NOT TARGET Oracle::OCI)
-        add_library(Oracle::OCI UNKNOWN IMPORTED)
-        set_target_properties(Oracle::OCI PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${Oracle_INCLUDE_DIR}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION ${Oracle_LIBRARY}
-                              )
-        foreach(tgt IN LISTS Oracle_known_components)
-            if(Oracle_${tgt}_FOUND)
-                add_library(Oracle::${tgt} UNKNOWN IMPORTED)
-                set_target_properties(Oracle::${tgt} PROPERTIES
-                                      IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                                      IMPORTED_LOCATION ${Oracle_${tgt}_LIBRARY})
-            endif()
-        endforeach()
-        if(Oracle_XML_INCLUDE_DIR)
-            if(TARGET Oracle::XML)
-                set_property(Oracle::XML APPEND PROPERTY
-                             INTERFACE_INCLUDE_DIRECTORIES ${Oracle_XML_INCLUDE_DIR})
-            endif()
-        endif()
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindPCRE.cmake b/cmake/modules/packages/FindPCRE.cmake
deleted file mode 100644
index fba01ad6f7..0000000000
--- a/cmake/modules/packages/FindPCRE.cmake
+++ /dev/null
@@ -1,28 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#.rst
-# FindPCRE
-# ~~~~~~~~~
-# Copyright (C) 2017-2018, Hiroshi Miura
-#
-# Find the native PCRE headers and libraries.
-
-find_path(PCRE_INCLUDE_DIR NAMES pcre.h)
-find_library(PCRE_LIBRARY NAMES pcre)
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(PCRE
-                                  FOUND_VAR PCRE_FOUND
-                                  REQUIRED_VARS PCRE_LIBRARY PCRE_INCLUDE_DIR)
-mark_as_advanced(PCRE_INCLUDE_DIR PCRE_LIBRARY)
-if(PCRE_FOUND)
-    set(PCRE_LIBRARIES ${PCRE_LIBRARY})
-    set(PCRE_INCLUDE_DIRS ${PCRE_INCLUDE_DIR})
-    if(NOT TARGET PCRE::PCRE)
-        add_library(PCRE::PCRE UNKNOWN IMPORTED)
-        set_target_properties(PCRE::PCRE PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${PCRE_INCLUDE_DIR}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION ${PCRE_LIBRARY})
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindPCRE2.cmake b/cmake/modules/packages/FindPCRE2.cmake
deleted file mode 100644
index 7cdf46dbb3..0000000000
--- a/cmake/modules/packages/FindPCRE2.cmake
+++ /dev/null
@@ -1,28 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#.rst
-# FindPCRE2
-# ~~~~~~~~~
-# Copyright (C) 2017-2018, Hiroshi Miura
-#
-# Find the native PCRE2 headers and libraries.
-
-find_path(PCRE2_INCLUDE_DIR NAMES pcre2.h)
-find_library(PCRE2_LIBRARY NAMES pcre2-8 pcre2-8d pcre2-8-static pcre2-8-staticd NAMES_PER_DIR)
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(PCRE2
-                                  FOUND_VAR PCRE2_FOUND
-                                  REQUIRED_VARS PCRE2_LIBRARY PCRE2_INCLUDE_DIR)
-mark_as_advanced(PCRE2_INCLUDE_DIR PCRE2_LIBRARY)
-if(PCRE2_FOUND)
-    set(PCRE2_LIBRARIES ${PCRE2_LIBRARY})
-    set(PCRE2_INCLUDE_DIRS ${PCRE2_INCLUDE_DIR})
-    if(NOT TARGET PCRE2::PCRE2)
-        add_library(PCRE2::PCRE2 UNKNOWN IMPORTED)
-        set_target_properties(PCRE2::PCRE2 PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${PCRE2_INCLUDE_DIR}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION ${PCRE2_LIBRARY})
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindPROJ.cmake b/cmake/modules/packages/FindPROJ.cmake
deleted file mode 100644
index 45ae3b9cc5..0000000000
--- a/cmake/modules/packages/FindPROJ.cmake
+++ /dev/null
@@ -1,91 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindPROJ
----------
-
-CMake module to search for PROJ(PROJ.4 and PROJ) library
-
-On success, the macro sets the following variables:
-``PROJ_FOUND``
-  if the library found
-
-``PROJ_LIBRARIES``
-  full path to the library
-
-``PROJ_INCLUDE_DIRS``
-  where to find the library headers
-
-``PROJ_VERSION_STRING``
-  version string of PROJ
-
-Copyright (c) 2009 Mateusz Loskot <mateusz@loskot.net>
-Copyright (c) 2015 NextGIS <info@nextgis.com>
-Copyright (c) 2018 Hiroshi Miura
-
-#]=======================================================================]
-
-find_path(PROJ_INCLUDE_DIR proj.h
-          PATHS ${PROJ_ROOT}/include
-          DOC "Path to PROJ library include directory")
-
-set(PROJ_NAMES ${PROJ_NAMES} proj proj_i)
-set(PROJ_NAMES_DEBUG ${PROJ_NAMES_DEBUG} projd proj_d)
-
-if(NOT PROJ_LIBRARY)
-  find_library(PROJ_LIBRARY_RELEASE NAMES ${PROJ_NAMES})
-  find_library(PROJ_LIBRARY_DEBUG NAMES ${PROJ_NAMES_DEBUG})
-  include(SelectLibraryConfigurations)
-  select_library_configurations(PROJ)
-  mark_as_advanced(PROJ_LIBRARY_RELEASE PROJ_LIBRARY_DEBUG)
-endif()
-
-unset(PROJ_NAMES)
-unset(PROJ_NAMES_DEBUG)
-
-if(PROJ_INCLUDE_DIR)
-    file(READ "${PROJ_INCLUDE_DIR}/proj.h" PROJ_H_CONTENTS)
-    string(REGEX REPLACE "^.*PROJ_VERSION_MAJOR +([0-9]+).*$" "\\1" PROJ_VERSION_MAJOR "${PROJ_H_CONTENTS}")
-    string(REGEX REPLACE "^.*PROJ_VERSION_MINOR +([0-9]+).*$" "\\1" PROJ_VERSION_MINOR "${PROJ_H_CONTENTS}")
-    string(REGEX REPLACE "^.*PROJ_VERSION_PATCH +([0-9]+).*$" "\\1" PROJ_VERSION_PATCH "${PROJ_H_CONTENTS}")
-    unset(PROJ_H_CONTENTS)
-    set(PROJ_VERSION_STRING "${PROJ_VERSION_MAJOR}.${PROJ_VERSION_MINOR}.${PROJ_VERSION_PATCH}")
-endif ()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(PROJ
-                                  REQUIRED_VARS PROJ_LIBRARY PROJ_INCLUDE_DIR
-                                  VERSION_VAR PROJ_VERSION_STRING)
-mark_as_advanced(PROJ_INCLUDE_DIR PROJ_LIBRARY)
-
-if(PROJ_FOUND)
-  set(PROJ_LIBRARIES ${PROJ_LIBRARY})
-  set(PROJ_INCLUDE_DIRS ${PROJ_INCLUDE_DIR})
-  if(NOT TARGET PROJ::proj)
-    add_library(PROJ::proj UNKNOWN IMPORTED)
-    set_target_properties(PROJ::proj PROPERTIES
-                          INTERFACE_INCLUDE_DIRECTORIES ${PROJ_INCLUDE_DIR}
-                          IMPORTED_LINK_INTERFACE_LANGUAGES "C")
-    if(EXISTS "${PROJ_LIBRARY}")
-      set_target_properties(PROJ::proj PROPERTIES
-        IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-        IMPORTED_LOCATION "${PROJ_LIBRARY}")
-    endif()
-    if(EXISTS "${PROJ_LIBRARY_RELEASE}")
-      set_property(TARGET PROJ::proj APPEND PROPERTY
-        IMPORTED_CONFIGURATIONS RELEASE)
-      set_target_properties(PROJ::proj PROPERTIES
-        IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
-        IMPORTED_LOCATION_RELEASE "${PROJ_LIBRARY_RELEASE}")
-    endif()
-    if(EXISTS "${PROJ_LIBRARY_DEBUG}")
-      set_property(TARGET PROJ::proj APPEND PROPERTY
-        IMPORTED_CONFIGURATIONS DEBUG)
-      set_target_properties(PROJ::proj PROPERTIES
-        IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "C"
-        IMPORTED_LOCATION_DEBUG "${PROJ_LIBRARY_DEBUG}")
-    endif()
-  endif()
-endif()
-
diff --git a/cmake/modules/packages/FindPodofo.cmake b/cmake/modules/packages/FindPodofo.cmake
deleted file mode 100644
index c273651180..0000000000
--- a/cmake/modules/packages/FindPodofo.cmake
+++ /dev/null
@@ -1,88 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindPODOFO
------------
-
-Copyright (c) 2017, Hiroshi Miura <miurahr@linux.com>
-
-Find the PODOFO headers and libraries.
-
-IMPORTED Targets
-^^^^^^^^^^^^^^^^
-
-This module defines :prop_tgt:`IMPORTED` target ``PODOFO::PODOFO``, if
-PODOFO has been found.
-
-Result Variables
-^^^^^^^^^^^^^^^^
-
-This module defines the following variables:
-
-``PODOFO_FOUND``
-  True if PODOFO found.
-
-``PODOFO_INCLUDE_DIRS``
-  where to find podofo/POFDoc.h, etc.
-
-``PODOFO_LIBRARIES``
-  List of podofo libraries to link.
-
-``PODOFO_VERSION_STRING``
-  Version of podofo library defined in podofo/base/podofo_config.h
-
-#]=======================================================================]
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-  pkg_check_modules(PC_PODOFO QUIET podofo)
-endif()
-
-find_path(PODOFO_INCLUDE_DIR
-          NAMES podofo.h
-          HINTS ${PC_PODOFO_INCLUDE_DIRS}
-          PATH_SUFFIXES podofo)
-
-find_library(PODOFO_LIBRARY
-             NAMES podofo libpodofo
-             HINTS ${PC_PODOFO_LIBRARY_DIRS})
-
-mark_as_advanced(PODOFO_INCLUDE_DIR PODOFO_LIBRARY)
-
-if(PODOFO_INCLUDE_DIR)
-  set(version_hdr ${PODOFO_INCLUDE_DIR}/base/podofo_config.h)
-  if(EXISTS ${version_hdr})
-    file(STRINGS ${version_hdr} _contents REGEX "^[ \t]*#define PODOFO_VERSION_.*")
-    if(_contents)
-        string(REGEX REPLACE ".*#define PODOFO_VERSION_MAJOR[ \t]+([0-9]+).*" "\\1" PODOFO_VERSION_MAJOR "${_contents}")
-        string(REGEX REPLACE ".*#define PODOFO_VERSION_MINOR[ \t]+([0-9]+).*" "\\1" PODOFO_VERSION_MINOR "${_contents}")
-        string(REGEX REPLACE ".*#define PODOFO_VERSION_PATCH[ \t]+([0-9]+).*" "\\1" PODOFO_VERSION_PATCH "${_contents}")
-    endif()
-    set(PODOFO_VERSION_STRING  ${PODOFO_VERSION_MAJOR}.${PODOFO_VERSION_MINOR}.${PODOFO_VERSION_PATCH})
-  endif()
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(Podofo
-                                  FOUND_VAR PODOFO_FOUND
-                                  REQUIRED_VARS PODOFO_LIBRARY PODOFO_INCLUDE_DIR
-                                  VERSION_VAR PODOFO_VERSION_STRING)
-
-if(PODOFO_FOUND)
-  set(PODOFO_INCLUDE_DIRS ${PODOFO_INCLUDE_DIR})
-  set(PODOFO_LIBRARIES ${PDOFO_LIBRARY})
-  if(NOT TARGET PODOFO::Podofo)
-    add_library(PODOFO::Podofo UNKNOWN IMPORTED)
-    set_target_properties(PODOFO::Podofo PROPERTIES
-                          INTERFACE_INCLUDE_DIRECTORIES ${PODOFO_INCLUDE_DIR}
-                          IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                          IMPORTED_LOCATION ${PODOFO_LIBRARY})
-  endif()
-endif()
-
-include(FeatureSummary)
-set_package_properties(PODOFO PROPERTIES
-                       DESCRIPTION "a free, portable C++ library which includes classes to parse PDF files and modify their contents into memory."
-                       URL "http://podofo.sourceforge.net/"
-)
diff --git a/cmake/modules/packages/FindPoppler.cmake b/cmake/modules/packages/FindPoppler.cmake
deleted file mode 100644
index 3807ec024e..0000000000
--- a/cmake/modules/packages/FindPoppler.cmake
+++ /dev/null
@@ -1,158 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindPoppler
---------
-
-Find the Poppler headers and libraries.
-
-This is a component-based find module, which makes use of the COMPONENTS
-and OPTIONAL_COMPONENTS arguments to find_package.  The following components
-are available::
-
-  Cpp  Qt5  Qt4  Glib
-
-Copyright (c) 2017,2019, Hiroshi Miura <miurahr@linux.com>
-Copyright (c) 2015, Alex Richardson <arichardson.kde@gmail.com>
-
-IMPORTED Targets
-^^^^^^^^^^^^^^^^
-
-This module defines :prop_tgt:`IMPORTED` target ``Poppler::Poppler``, if
-curl has been found.
-
-Result Variables
-^^^^^^^^^^^^^^^^
-
-This module defines the following variables:
-
-``Poppler_FOUND``
-  True if Poppler found.
-
-``Poppler_INCLUDE_DIRS``
-  where to find poppler/poppler-config.h, etc.
-
-``Poppler_LIBRARIES``
-  List of libraries when using Poppler.
-
-``Poppler_VERSION_STRING``
-  The version of Poppler found.
-#]=======================================================================]
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-  pkg_check_modules(PC_Poppler QUIET poppler)
-  if(PC_Poppler_VERSION)
-    set(Poppler_VERSION_STRING ${PC_Poppler_VERSION})
-  endif()
-endif()
-find_path(Poppler_INCLUDE_DIR NAMES "poppler-config.h" "cpp/poppler-version.h" "qt5/poppler-qt5.h" "qt4/poppler-qt4.h"
-          "glib/poppler.h"
-          HINTS ${PC_Poppler_INCLUDE_DIRS}
-          PATH_SUFFIXES poppler)
-
-find_library(Poppler_LIBRARY NAMES poppler HINTS ${PC_Poppler_LIBRARY_DIRS})
-
-set(Poppler_known_components Cpp Qt4 Qt5 Glib )
-foreach(_comp IN LISTS Poppler_known_components)
-  string(TOLOWER "${_comp}" _lc_comp)
-  set(Poppler_${_comp}_pkg_config "poppler-${_lc_comp}")
-  set(Poppler_${_comp}_lib "poppler-${_lc_comp}")
-  set(Poppler_${_comp}_header_subdir "poppler/${_lc_comp}")
-endforeach()
-set(Poppler_known_components Core ${Poppler_known_components})
-
-# poppler-config.h header is only installed with --enable-xpdf-headers
-# fall back to using any header from a submodule with a path to make it work in that case too
-set(Poppler_Cpp_header "poppler-version.h")
-set(Poppler_Qt5_header "poppler-qt5.h")
-set(Poppler_Qt4_header "poppler-qt4.h")
-set(Poppler_Glib_header "poppler.h")
-
-foreach(_comp IN LISTS Poppler_FIND_COMPONENTS)
-  set(Poppler_${_comp}_FOUND FALSE)
-endforeach()
-
-foreach(_comp IN LISTS Poppler_known_components)
-  list(FIND Poppler_FIND_COMPONENTS "${_comp}" _nextcomp)
-  if(_nextcomp GREATER -1)
-    find_path(Poppler_${_comp}_INCLUDE_DIR
-              NAMES ${Poppler_${_comp}_header}
-              PATH_SUFFIXES poppler
-              HINTS ${PC_Poppler_${_comp}_INCLUDE_DIRS})
-    find_library(Poppler_${_comp}_LIBRARY
-            NAMES ${Poppler_${_comp}_lib}
-            HINTS ${PC_Poppler_${_comp}_LIBRARY_DIRS})
-  endif()
-endforeach()
-
-if(NOT Poppler_VERSION_STRING)
-  find_file(Poppler_VERSION_HEADER
-            NAMES "poppler-config.h" "cpp/poppler-version.h"
-            HINTS ${Poppler_INCLUDE_DIR}
-            PATH_SUFFIXES poppler
-            )
-  #if(Poppler_VERSION_HEADER)
-  #  file(READ ${Poppler_VERSION_HEADER} _poppler_version_header_contents)
-  #  string(REGEX REPLACE
-  #         "^.*[ \t]+POPPLER_VERSION_MAJOR[ \t]+([0-9]+).*$"
-  #         "\\1"
-  #         Poppler_VERSION_MAJOR
-  #         "${_poppler_version_header_contents}"
-  #         )
-  #  string(REGEX REPLACE
-  #         "^.*[ \t]+POPPLER_VERSION_MINOR[ \t]+([0-9]+).*$"
-  #         "\\1"
-  #         Poppler_VERSION_MINOR
-  #         "${_poppler_version_header_contents}"
-  #         )
-  #  string(REGEX REPLACE
-  #         "^.*[ \t]+POPPLER_VERSION_MICRO[ \t]+([0-9]+).*$"
-  #         "\\1"
-  #         Poppler_VERSION_MICRO
-  #         "${_poppler_version_header_contents}"
-  #         )
-  #  unset(_poppler_version_header_contents)
-  #  set(Poppler_VERSION_STRING "${Poppler_VERSION_MAJOR}.${Poppler_VERSION_MINOR}.${Poppler_VERSION_MICRO}")
-  #endif()
-  if(Poppler_VERSION_HEADER)
-    file(STRINGS "${Poppler_VERSION_HEADER}" _poppler_version_str REGEX "^#define[\t ]+POPPLER_VERSION[\t ]+\".*\"")
-    string(REGEX REPLACE "^#define[\t ]+POPPLER_VERSION[\t ]+\"([^\"]*)\".*" "\\1" Poppler_VERSION_STRING "${_poppler_version_str}")
-    if(NOT ${Poppler_VERSION_STRING} MATCHES "[0-9]+\\.[0-9]+\\.[0-9]+")
-      message(WARNING "POPPLER_VERSION (${Poppler_VERSION_STRING}) doesn't match *.*.* form")
-    endif()
-    unset(_poppler_version_str)
-  endif()
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(Poppler
-                                  FOUND_VAR Poppler_FOUND
-                                  REQUIRED_VARS Poppler_LIBRARY Poppler_INCLUDE_DIR
-                                  VERSION_VAR  Poppler_VERSION_STRING
-                                  HANDLE_COMPONENTS)
-mark_as_advanced(Poppler_INCLUDE_DIR Poppler_LIBRARY)
-
-if(Poppler_FOUND)
-  set(Poppler_INCLUDE_DIRS ${Poppler_INCLUDE_DIR})
-  set(Poppler_LIBRARIES ${Poppler_LIBRARY})
-  if(NOT TARGET Poppler::Poppler)
-    add_library(Poppler::Poppler UNKNOWN IMPORTED)
-    set_target_properties(Poppler::Poppler PROPERTIES
-                          INTERFACE_INCLUDE_DIRECTORIES ${Poppler_INCLUDE_DIR}
-                          IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                          IMPORTED_LOCATION "${Poppler_LIBRARY}")
-    foreach(tgt IN LISTS Poppler_known_components)
-      add_library(Poppler::${tgt} UNKNOWN IMPORTED)
-      set_target_properties(Poppler::${tgt} PROPERTIES
-                            INTERFACE_INCLUDE_DIRECTORIES ${Poppler_${tgt}_INCLUDE_DIR}
-                            IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                            IMPORTED_LOCATION ${POPPLER_${tgt}_LIBRARY})
-    endforeach()
-  endif()
-endif()
-
-include(FeatureSummary)
-set_package_properties(Poppler PROPERTIES
-                       DESCRIPTION "A PDF rendering library" URL "http://poppler.freedesktop.org")
diff --git a/cmake/modules/packages/FindQHULL.cmake b/cmake/modules/packages/FindQHULL.cmake
deleted file mode 100644
index 25f86976aa..0000000000
--- a/cmake/modules/packages/FindQHULL.cmake
+++ /dev/null
@@ -1,43 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#.rst
-# Find QHULL library
-# ~~~~~~~~~
-#
-# Copyright (c) 2017,2018, Hiroshi Miura <miurahr@linux.com>
-#
-# Input variables:
-#    QHULL_PACKAGE_NAME: name (or list of names) of the pkg-config package, typically qhull_r or qhullstatic_r
-#
-# If it's found it sets QHULL_FOUND to TRUE
-# and following variables are set:
-#    QHULL_INCLUDE_DIR
-#    QHULL_LIBRARY
-#
-
-set(QHULL_PACKAGE_NAME "qhull_r;qhullstatic_r" CACHE STRING "Names of the pkg-config package, typically qhull_r or qhullstatic_r")
-mark_as_advanced(QHULL_PACKAGE_NAME)
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-    pkg_search_module(PC_QHULL QUIET ${QHULL_PACKAGE_NAME})
-endif()
-
-find_path(QHULL_INCLUDE_DIR libqhull_r/libqhull_r.h
-          HINTS ${PC_QHULL_INCLUDE_DIRS})
-
-if(PC_QHULL_FOUND)
-  set(_library_name "${PC_QHULL_LIBRARIES}")
-else()
-  set(_library_name qhull_r qhullstatic_r)
-endif()
-find_library(QHULL_LIBRARY NAMES ${_library_name}
-             HINTS ${PC_QHULL_LIBRARY_DIRS})
-unset(_library_name)
-
-mark_as_advanced(QHULL_INCLUDE_DIR QHULL_LIBRARY)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(QHULL
-    REQUIRED_VARS QHULL_LIBRARY QHULL_INCLUDE_DIR)
diff --git a/cmake/modules/packages/FindRASTERLITE2.cmake b/cmake/modules/packages/FindRASTERLITE2.cmake
deleted file mode 100644
index 901e0ad4aa..0000000000
--- a/cmake/modules/packages/FindRASTERLITE2.cmake
+++ /dev/null
@@ -1,90 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindRASTERLITE2
---------------
-
-CMake module to search for RasterLite2 library
-
-IMPORTED Targets
-^^^^^^^^^^^^^^^^
-
-This module defines :prop_tgt:`IMPORTED` target ``RASTERLITE2::RASTERLITE2``, if
-RasterLite2 has been found.
-
-Result Variables
-^^^^^^^^^^^^^^^^
-
-This module defines the following variables:
-
-``RASTERLITE2_FOUND``
-  True if RasterLite2 found.
-
-``RASTERLITE2_INCLUDE_DIRS``
-  where to find rasterlite2, etc.
-
-``RASTERLITE2_LIBRARIES``
-  List of libraries when using RasterLite2.
-
-``RASTERLITE2_VERSION_STRING``
-  The version of RasterLite2 found.
-#]=======================================================================]
-
-if(CMAKE_VERSION VERSION_LESS 3.13)
-    set(RASTERLITE2_ROOT CACHE PATH "")
-    mark_as_advanced(RASTERLITE2_ROOT)
-endif()
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-    pkg_check_modules(PC_RASTERLITE2 QUIET rasterlite2)
-    set(RASTERLITE2_VERSION_STRING ${PC_RASTERLITE2_VERSION})
-endif()
-
-find_path(RASTERLITE2_INCLUDE_DIR
-          NAMES rasterlite2/rasterlite2.h
-          HINTS ${RASTERLITE2_ROOT} ${PC_RASTERLITE2_INCLUDE_DIRS}
-          PATH_SUFFIXES include)
-find_library(RASTERLITE2_LIBRARY
-             NAMES rasterlite2
-             HINTS ${RASTERLITE2_ROOT} ${PC_RASTERLITE2_LIBRARY_DIRS}
-             PATH_SUFFIXES lib)
-mark_as_advanced(RASTERLITE2_LIBRARY RASTERLITE2_INCLUDE_DIR)
-
-if(NOT RASTERLITE2_VERSION_STRING AND RASTERLITE2_INCLUDE_DIR AND RASTERLITE2_LIBRARY)
-  include(CMakePushCheckState)
-  cmake_push_check_state(RESET)
-  file(WRITE "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeTmp/get_rasterlite2_version.c"
-          "#include <stdio.h>\n#include \"rasterlite2/rasterlite2.h\"\n
-          int main(int argc, void *argv) { const char *version = rl2_version(); printf(\"%s\", version); }\n")
-  set(CMAKE_REQUIRED_INCLUDES "${RASTERLITE2_INCLUDE_DIR}")
-  try_run(RL2_EXITCODE RL2_COMPILED ${PROJECT_BINARY_DIR} ${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeTmp/get_rasterlite2_version.c
-      LINK_LIBRARIES  ${RASTERLITE2_LIBRARY}
-      CMAKE_FLAGS "-DCMAKE_SKIP_RPATH:BOOL=${CMAKE_SKIP_RPATH}" "-DINCLUDE_DIRECTORIES:STRING=${RASTERLITE2_INCLUDE_DIR}"
-      RUN_OUTPUT_VARIABLE RL2_OUTPUT)
-  if(RL2_COMPILED AND RL2_EXITCODE EQUAL 0)
-    set(RASTERLITE2_VERSION_STRING "${RL2_OUTPUT}")
-  endif()
-  unset(RL2_EXITCODE)
-  unset(RL2_COMPILED)
-  unset(RL2_OUTPUT)
-  cmake_pop_check_state()
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(RASTERLITE2
-                                  FOUND_VAR RASTERLITE2_FOUND
-                                  REQUIRED_VARS RASTERLITE2_LIBRARY RASTERLITE2_INCLUDE_DIR
-                                  VERSION_VAR RASTERLITE2_VERSION_STRING)
-if(RASTERLITE2_FOUND)
-    set(RASTERLITE2_LIBRARIES ${RASTERLITE2_LIBRARY})
-    set(RASTERLITE2_INCLUDE_DIRS ${RASTERLITE2_INCLUDE_DIR})
-    if(NOT TARGET RASTERLITE2::RASTERLITE2)
-        add_library(RASTERLITE2::RASTERLITE2 UNKNOWN IMPORTED)
-        set_target_properties(RASTERLITE2::RASTERLITE2 PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${RASTERLITE2_INCLUDE_DIR}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION ${RASTERLITE2_LIBRARY})
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindSFCGAL.cmake b/cmake/modules/packages/FindSFCGAL.cmake
deleted file mode 100644
index b5d4e18466..0000000000
--- a/cmake/modules/packages/FindSFCGAL.cmake
+++ /dev/null
@@ -1,87 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#.rst
-# FindSFCGAL
-# ~~~~~~~~~
-# Copyright (C) 2017-2018, Hiroshi Miura
-#
-
-find_program(SFCGAL_CONFIG sfcgal-config DOC "SFCGAL config command")
-mark_as_advanced(SFCGAL_CONFIG)
-
-if(SFCGAL_CONFIG)
-    execute_process(COMMAND ${SFCGAL_CONFIG} --prefix
-                    OUTPUT_VARIABLE SC_SFCGAL_PREFIX
-                    ERROR_QUIET
-                    OUTPUT_STRIP_TRAILING_WHITESPACE)
-    execute_process(COMMAND ${SFCGAL_CONFIG} --version
-                    OUTPUT_VARIABLE SC_SFCGAL_VERSION_STRING
-                    ERROR_QUIET
-                    OUTPUT_STRIP_TRAILING_WHITESPACE)
-    execute_process(COMMAND ${SFCGAL_CONFIG} --ldflags
-                    OUTPUT_VARIABLE SC_SFCGAL_LDFLAGS
-                    ERROR_QUIET
-                    OUTPUT_STRIP_TRAILING_WHITESPACE)
-    string(REGEX REPLACE "^-L(.*)$" "\\1" SC_SFCGAL_LIBDIR "${SC_SFCGAL_LDFLAGS}")
-    if(SC_SFCGAL_VERSION_STRING)
-        set(SFCGAL_VERSION_STRING ${SC_SFCGAL_VERSION_STRING})
-    endif()
-endif()
-
-find_path(SFCGAL_INCLUDE_DIR SFCGAL/Kernel.h
-          HINTS ${SC_SFCGAL_PREFIX}
-          PATHS ${SFCGAL_ROOT}
-          PATH_SUFFIXES include Include
-          )
-
-if(SFCGAL_INCLUDE_DIR)
-    if(NOT SFCGAL_VERSION_STRING)
-        if(EXISTS "${SFCGAL_INCLUDE_DIR}/SFCGAL/version.h")
-            file(STRINGS "${SFCGAL_INCLUDE_DIR}/SFCGAL/version.h" sfcgal_version_str REGEX "^#define[\t ]+SFCGAL_VERSION[\t ]+\".*\"")
-            string(REGEX REPLACE "^#define[\t ]+SFCGAL_VERSION[\t ]+\"([^\"]*)\".*" "\\1" SFCGAL_VERSION_STRING "${sfcgal_version_str}")
-            if(${SFCGAL_VERSION_STRING} MATCHES "[0-9]+\\.[0-9]+\\.[0-9]+")
-                string(REGEX REPLACE "^([0-9]+)\\.[0-9]+\\.[0-9]+" "\\1" SFCGAL_VERSION_MAJOR "${SFCGAL_VERSION_STRING}")
-                string(REGEX REPLACE "^[0-9]+\\.([0-9])+\\.[0-9]+" "\\1" SFCGAL_VERSION_MINOR "${SFCGAL_VERSION_STRING}")
-                string(REGEX REPLACE "^[0-9]+\\.[0-9]+\\.([0-9]+)" "\\1" SFCGAL_VERSION_PATCH "${SFCGAL_VERSION_STRING}")
-            else()
-                message(WARNING "SFCGAL_VERSION (${SFCGAL_VERSION_STRING}) doesn't match *.*.* form")
-            endif()
-            unset(sfcgal_version_str)
-        else()
-            message(WARNING "Failed toget SFCGAL version, header file not found.")
-        endif()
-    endif()
-endif()
-
-find_library(SFCGAL_LIBRARY_RELEASE NAMES SFCGAL
-             HINTS ${SC_SFCGAL_LIBDIR}
-             PATH ${SFCGAL_ROOT}
-             PATH_SUFFIXES lib Lib
-             )
-find_library(SFCGAL_LIBRARY_DEBUG NAMES SFCGALd
-             HINTS ${SC_SFCGAL_LIBDIR}
-             PATH ${SFCGAL_ROOT}
-             PATH_SUFFIXES lib Lib
-             )
-include(SelectLibraryConfigurations)
-select_library_configurations(SFCGAL)
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(SFCGAL
-                                  FOUND_VAR SFCGAL_FOUND
-                                  REQUIRED_VARS SFCGAL_LIBRARY SFCGAL_INCLUDE_DIR
-                                  VERSION_VAR SFCGAL_VERSION_STRING
-                                  )
-mark_as_advanced(SFCGAL_INCLUDE_DIR SFCGAL_LIBRARY)
-
-if(SFCGAL_FOUND)
-    set(SFCGAL_LIBRARIES ${SFCGAL_LIBRARY})
-    set(SFCGAL_INCLUDE_DIRS "${SFCGAL_INCLUDE_DIR}")
-    if(NOT TARGET SFCGAL::SFCGAL)
-        add_library(SFCGAL::SFCGAL UNKNOWN IMPORTED)
-        set_target_properties(SFCGAL::SFCGAL PROPERTIES
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION "${SFCGAL_LIBRARY}"
-                              INTERFACE_INCLUDE_DIRECTORIES "${SFCGAL_INCLUDE_DIR}")
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindSPATIALITE.cmake b/cmake/modules/packages/FindSPATIALITE.cmake
deleted file mode 100644
index 00612b0fde..0000000000
--- a/cmake/modules/packages/FindSPATIALITE.cmake
+++ /dev/null
@@ -1,78 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file Copyright.txt or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindSPATIALITE
---------------
-
-CMake module to search for SpatiaLite library
-
-IMPORTED Targets
-^^^^^^^^^^^^^^^^
-
-This module defines :prop_tgt:`IMPORTED` target ``SPATIALITE::SPATIALITE``, if
-Spatialite has been found.
-
-Result Variables
-^^^^^^^^^^^^^^^^
-
-This module defines the following variables:
-
-``SPATIALITE_FOUND``
-  True if Spatialite found.
-
-``SPATIALITE_INCLUDE_DIRS``
-  where to find Spatialite.h, etc.
-
-``SPATIALITE_LIBRARIES``
-  List of libraries when using Spatialite.
-
-``SPATIALITE_VERSION_STRING``
-  The version of Spatialite found.
-#]=======================================================================]
-
-if(CMAKE_VERSION VERSION_LESS 3.13)
-    set(SPATIALITE_ROOT CACHE PATH "")
-    mark_as_advanced(SPATIALITE_ROOT)
-endif()
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-    pkg_check_modules(PC_SPATIALITE QUIET spatialite)
-    set(SPATIALITE_VERSION_STRING ${PC_SPATIALITE_VERSION})
-endif()
-
-find_path(SPATIALITE_INCLUDE_DIR
-          NAMES spatialite.h
-          HINTS ${SPATIALITE_ROOT} ${PC_SPATIALITE_INCLUDE_DIRS}
-          PATH_SUFFIXES include)
-find_library(SPATIALITE_LIBRARY
-             NAMES spatialite_i spatialite
-             HINTS ${SPATIALITE_ROOT} ${PC_SPATIALITE_LIBRARY_DIRS}
-             PATH_SUFFIXES lib)
-mark_as_advanced(SPATIALITE_LIBRARY SPATIALITE_INCLUDE_DIR)
-
-if(SPATIALITE_LIBRARY AND SPATIALITE_INCLUDE_DIR
-   AND NOT SPATIALITE_VERSION_STRING)
-    file(STRINGS "${SPATIALITE_INCLUDE_DIR}/spatialite.h" _spatialite_h_ver
-         REGEX "^[ \t]version[ \t]([0-9]+\\.[0-9]+),.*")
-    string(REGEX REPLACE "[ \t]version[ \t]([0-9]+\\.[0-9]+),.*" "\\1" _spatialite_h_ver ${_spatialite_h_ver})
-    set(SPATIALITE_VERSION_STRING "${_spatialite_h_ver}")
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(SPATIALITE
-                                  FOUND_VAR SPATIALITE_FOUND
-                                  REQUIRED_VARS SPATIALITE_LIBRARY SPATIALITE_INCLUDE_DIR
-                                  VERSION_VAR SPATIALITE_VERSION_STRING)
-if(SPATIALITE_FOUND)
-    set(SPATIALITE_LIBRARIES ${SPATIALITE_LIBRARY})
-    set(SPATIALITE_INCLUDE_DIRS ${SPATIALITE_INCLUDE_DIR})
-    if(NOT TARGET SPATIALITE::SPATIALITE)
-        add_library(SPATIALITE::SPATIALITE UNKNOWN IMPORTED)
-        set_target_properties(SPATIALITE::SPATIALITE PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${SPATIALITE_INCLUDE_DIR}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION ${SPATIALITE_LIBRARY})
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindSQLite3.cmake b/cmake/modules/packages/FindSQLite3.cmake
deleted file mode 100644
index aaecf32729..0000000000
--- a/cmake/modules/packages/FindSQLite3.cmake
+++ /dev/null
@@ -1,156 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindSQLite3
------------
-Find the SQLite libraries, v3
-IMPORTED targets
-^^^^^^^^^^^^^^^^
-This module defines the following :prop_tgt:`IMPORTED` target:
-``SQLite::SQLite3``
-Result variables
-^^^^^^^^^^^^^^^^
-This module will set the following variables if found:
-``SQLite3_INCLUDE_DIRS``
-  where to find sqlite3.h, etc.
-``SQLite3_LIBRARIES``
-  the libraries to link against to use SQLite3.
-``SQLite3_VERSION``
-  version of the SQLite3 library found
-``SQLite3_FOUND``
-  TRUE if found
-
-  Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>
-  Copyright (c) 2016 NextGIS <info@nextgis.com>
-  Copyright (c) 2018,2021 Hiroshi Miura
-  Copyright (c) 2019 Chuck Atkins
-#]=======================================================================]
-
-# Accept upper case variant for SQLite3_INCLUDE_DIR
-if(SQLITE3_INCLUDE_DIR)
-  if(SQLite3_INCLUDE_DIR AND NOT "${SQLite3_INCLUDE_DIR}" STREQUAL "${SQLITE3_INCLUDE_DIR}")
-    message(FATAL_ERROR "Both SQLite3_INCLUDE_DIR and SQLITE3_INCLUDE_DIR are defined, but not at same value")
-  endif()
-  set(SQLite3_INCLUDE_DIR "${SQLITE3_INCLUDE_DIR}" CACHE STRING "Path to a file" FORCE)
-  unset(SQLITE3_INCLUDE_DIR CACHE)
-endif()
-
-# Accept upper case variant for SQLite3_LIBRARY
-if(SQLITE3_LIBRARY)
-  if(SQLite3_LIBRARY AND NOT "${SQLite3_LIBRARY}" STREQUAL "${SQLITE3_LIBRARY}")
-    message(FATAL_ERROR "Both SQLite3_LIBRARY and SQLITE3_LIBRARY are defined, but not at same value")
-  endif()
-  set(SQLite3_LIBRARY "${SQLITE3_LIBRARY}" CACHE FILEPATH "Path to a library" FORCE)
-  unset(SQLITE3_LIBRARY CACHE)
-endif()
-
-if(SQLite3_INCLUDE_DIR AND SQLite3_LIBRARY)
-  set(SQLite3_FIND_QUIETLY TRUE)
-endif()
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-    pkg_check_modules(PC_SQLITE3 QUIET sqlite3)
-endif()
-
-find_path(SQLite3_INCLUDE_DIR
-          NAMES  sqlite3.h
-          HINTS ${PC_SQLITE3_INCLUDE_DIRS})
-find_library(SQLite3_LIBRARY
-             NAMES sqlite3 sqlite3_i
-             HINTS ${PC_SQLITE3_LIBRARY_DIRS})
-
-# Extract version information from the header file
-if(SQLite3_INCLUDE_DIR)
-    file(STRINGS ${SQLite3_INCLUDE_DIR}/sqlite3.h _ver_line
-         REGEX "^#define SQLITE_VERSION  *\"[0-9]+\\.[0-9]+\\.[0-9]+\""
-         LIMIT_COUNT 1)
-    string(REGEX MATCH "[0-9]+\\.[0-9]+\\.[0-9]+"
-           SQLite3_VERSION "${_ver_line}")
-    unset(_ver_line)
-endif()
-
-if(SQLite3_INCLUDE_DIR AND SQLite3_LIBRARY)
-    include(CheckSymbolExists)
-    cmake_push_check_state(RESET)
-    # check column metadata
-    set(CMAKE_REQUIRED_INCLUDES ${SQLite3_INCLUDE_DIR})
-    if( ${SQLite3_LIBRARY} MATCHES "libsqlite3.a")
-       if(PC_SQLITE3_STATIC_LDFLAGS)
-         set(CMAKE_REQUIRED_LIBRARIES ${PC_SQLITE3_STATIC_LDFLAGS})
-       else()
-         # Manually try likely additional private libraries
-         set(CMAKE_REQUIRED_LIBRARIES ${SQLite3_LIBRARY})
-         check_symbol_exists(sqlite3_open sqlite3.h SQLite3_HAS_OPEN)
-         if(NOT SQLite3_HAS_OPEN)
-             unset(SQLite3_HAS_OPEN)
-             unset(SQLite3_HAS_OPEN CACHE)
-             set(CMAKE_REQUIRED_LIBRARIES ${SQLite3_LIBRARY} -lz)
-             check_symbol_exists(sqlite3_open sqlite3.h SQLite3_HAS_OPEN)
-         endif()
-         if(NOT SQLite3_HAS_OPEN)
-             unset(SQLite3_HAS_OPEN)
-             unset(SQLite3_HAS_OPEN CACHE)
-             set(CMAKE_REQUIRED_LIBRARIES ${SQLite3_LIBRARY} -lm)
-             check_symbol_exists(sqlite3_open sqlite3.h SQLite3_HAS_OPEN)
-         endif()
-         if(NOT SQLite3_HAS_OPEN)
-             unset(SQLite3_HAS_OPEN)
-             unset(SQLite3_HAS_OPEN CACHE)
-             set(CMAKE_REQUIRED_LIBRARIES ${SQLite3_LIBRARY} -lz -lm)
-             check_symbol_exists(sqlite3_open sqlite3.h SQLite3_HAS_OPEN)
-         endif()
-       endif()
-    else()
-        set(CMAKE_REQUIRED_LIBRARIES ${SQLite3_LIBRARY})
-    endif()
-    check_symbol_exists(sqlite3_column_table_name sqlite3.h SQLite3_HAS_COLUMN_METADATA)
-    check_symbol_exists(sqlite3_rtree_query_callback sqlite3.h SQLite3_HAS_RTREE)
-
-    if (MSVC)
-        set(CMAKE_REQUIRED_FLAGS "/WX")
-      else ()
-        set(CMAKE_REQUIRED_FLAGS "-Werror")
-      endif ()
-    set(SQLITE3_AUTO_EXTENSION_CHECK
-        "#include <sqlite3.h>
-         int main(){
-          return sqlite3_auto_extension ((void (*)(void)) 0);
-         }")
-    if(CMAKE_C_COMPILER_LOADED)
-        check_c_source_compiles("${SQLITE3_AUTO_EXTENSION_CHECK}" SQLite3_HAS_NON_DEPRECATED_AUTO_EXTENSION)
-    elseif(CMAKE_CXX_COMPILER_LOADED)
-        check_cxx_source_compiles("${SQLITE3_AUTO_EXTENSION_CHECK}" SQLite3_HAS_NON_DEPRECATED_AUTO_EXTENSION)
-    else()
-        message(AUTHOR_WARNING "C and CXX languages not enabled: Skipping detection of sqlite3_auto_extension.")
-    endif()
-    cmake_pop_check_state()
-endif()
-mark_as_advanced(SQLite3_LIBRARY SQLite3_INCLUDE_DIR SQLite3_HAS_COLUMN_METADATA SQLite3_HAS_RTREE)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(SQLite3
-                                  FOUND_VAR SQLite3_FOUND
-                                  REQUIRED_VARS SQLite3_LIBRARY SQLite3_INCLUDE_DIR
-                                  VERSION_VAR SQLite3_VERSION)
-
-if(SQLite3_FOUND)
-  set(SQLite3_LIBRARIES ${SQLite3_LIBRARY})
-  set(SQLite3_INCLUDE_DIRS ${SQLite3_INCLUDE_DIR})
-  if(NOT TARGET SQLite::SQLite3)
-    add_library(SQLite::SQLite3 UNKNOWN IMPORTED)
-    set_target_properties(SQLite::SQLite3 PROPERTIES
-                          INTERFACE_INCLUDE_DIRECTORIES "${SQLite3_INCLUDE_DIRS}"
-                          IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                          IMPORTED_LOCATION "${SQLite3_LIBRARY}")
-    if(SQLite3_HAS_COLUMN_METADATA)
-        set_property(TARGET SQLite::SQLite3 APPEND PROPERTY
-                     INTERFACE_COMPILE_DEFINITIONS "SQLite3_HAS_COLUMN_METADATA")
-    endif()
-    if(SQLite3_HAS_RTREE)
-        set_property(TARGET SQLite::SQLite3 APPEND PROPERTY
-                     INTERFACE_COMPILE_DEFINITIONS "SQLite3_HAS_RTREE")
-    endif()
-  endif()
-endif()
diff --git a/cmake/modules/packages/FindShapelib.cmake b/cmake/modules/packages/FindShapelib.cmake
deleted file mode 100644
index 951e3d4ae7..0000000000
--- a/cmake/modules/packages/FindShapelib.cmake
+++ /dev/null
@@ -1,69 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#.rst:
-# FindShapelib
-# -----------
-#
-# Copyright (c) 2018, Hiroshi Miura <miurahr@linux.com>
-#
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-    pkg_check_modules(PC_Shapelib QUIET shapelib)
-endif()
-
-find_path(Shapelib_INCLUDE_DIR
-          NAMES shapefil.h
-          HINTS ${PC_Shapelib_INCLUDE_DIRS})
-
-if(Shapelib_INCLUDE_DIR)
-    if(PC_Shapelib_VERSION)
-        set(Shapelib_VERSION ${PC_Shapelib_VERSION})
-    else()
-        file(READ ${Shapelib_INCLUDE_DIR}/shapefil.h _shapefil_h_contents)
-        string(REGEX MATCH "Id: shapefil.h,v ([0-9.]+)" Shapelib_H_VERSION "${_shapefil_h_contents}")
-        string(REGEX MATCH "([0-9].[0-9][0-9])" Shapelib_H_VERSION "${Shapelib_H_VERSION}")
-        # shapefil.h 1.26 = release 1.2.10
-        # shapefil.h 1.52 = release 1.3.0
-        # shapefil.h 1.55 = release 1.4.0, 1.4.1
-        if(Shapelib_H_VERSION VERSION_LESS 1.26)
-            message(WARNING "Shapelib version detection failed")
-        elseif(Shapelib_H_VERSION VERSION_LESS 1.52)
-            set(Shapelib_VERSION 1.2.10)
-        elseif(Shapelib_H_VERSION VERSION_LESS 1.55)
-            set(Shapelib_VERSION 1.3.0)
-        else()
-            set(Shapelib_VERSION 1.4.0)
-        endif()
-    endif()
-endif()
-
-if(MSVC)
-    set(Shapelib_LIBNAME shapelib)
-else()
-    set(Shapelib_LIBNAME shp)
-endif()
-
-find_library(Shapelib_LIBRARY NAMES ${Shapelib_LIBNAME})
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(Shapelib
-                                  FOUND_VAR Shapelib_FOUND
-                                  REQUIRED_VARS Shapelib_INCLUDE_DIR Shapelib_LIBRARY
-                                  VERSION_VAR Shapelib_VERSION
-)
-
-mark_as_advanced(Shapelib_INCLUDE_DIR Shapelib_LIBRARY)
-
-if(Shapelib_FOUND)
-    set(Shapelib_INCLUDE_DIRS ${Shapelib_INCLUDE_DIR})
-    set(Shapelib_LIBRARIES ${Shapelib_LIBRARY})
-    if(NOT TARGET SHAPELIB::shp)
-        add_library(SHAPELIB::shp UNKNOWN IMPORTED)
-        set_target_properties(SHAPELIB::shp PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${Shapelib_INCLUDE_DIR}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES C
-                              IMPORTED_LOCATION ${Shapelib_LIBRARY})
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindSpatialindex.cmake b/cmake/modules/packages/FindSpatialindex.cmake
deleted file mode 100644
index 6fc0190d22..0000000000
--- a/cmake/modules/packages/FindSpatialindex.cmake
+++ /dev/null
@@ -1,18 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
-# file COPYING-CMAKE-SCRIPTS or https://cmake.org/licensing for details.
-
-#.rst
-# - Find Spatialindex
-#
-# Once run this will define:
-#
-# SPATIALINDEX_FOUND       = system has Spatialindex lib
-# SPATIALINDEX_LIBRARY     = full path to the Spatialindex library
-# SPATIALINDEX_INCLUDE_DIR = where to find headers
-#
-
-find_path(SPATIALINDEX_INCLUDE_DIR NAMES SpatialIndex.h PATH_SUFFIXES spatialindex)
-find_library(SPATIALINDEX_LIBRARY NAMES spatialindex_i spatialindex)
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(Spatialindex FOUND_VAR SPATIALINDEX_FOUND
-                                  REQUIRED_VARS SPATIALINDEX_LIBRARY MYSQL_SPATIALINDEX_DIR)
diff --git a/cmake/modules/packages/FindTEIGHA.cmake b/cmake/modules/packages/FindTEIGHA.cmake
deleted file mode 100644
index 36ba2755a1..0000000000
--- a/cmake/modules/packages/FindTEIGHA.cmake
+++ /dev/null
@@ -1,242 +0,0 @@
-# Find TEIGHA
-# ~~~~~~~~~
-#
-# Copyright (c) 2017,2018, Hiroshi Miura <miurahr@linux.com>
-# Copyright (c) 2021 Even Rouault <even.rouault@spatialys.com>
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-#
-# If it's found it sets TEIGHA_FOUND to TRUE
-# and following variables are set:
-#    TEIGHA_INCLUDE_DIR
-#    TEIGHA_LIBRARIES
-#
-#  Before call here user should set TEIGHA_ROOT variable (and possibly TEIGHA_PLATFORM as well)
-
-if(NOT TEIGHA_ROOT)
-    return()
-endif()
-
-if(NOT EXISTS "${TEIGHA_ROOT}")
-    message(FATAL_ERROR "TEIGHA_ROOT=${TEIGHA_ROOT} does not exist")
-endif()
-
-if(NOT TEIGHA_PLATFORM)
-    if(NOT EXISTS "${TEIGHA_ROOT}/lib")
-        message(FATAL_ERROR "TEIGHA_ROOT=${TEIGHA_ROOT} should point to a directory with a lib/ subdirectory")
-    endif()
-    file(GLOB TEIGHA_PLATFORM RELATIVE "${TEIGHA_ROOT}/lib" "${TEIGHA_ROOT}/lib/*")
-    list(LENGTH TEIGHA_PLATFORM TEIGHA_PLATFORM_LIST_LENGTH)
-    if(NOT TEIGHA_PLATFORM_LIST_LENGTH EQUAL "1")
-        message(FATAL_ERROR "TEIGHA_ROOT=${TEIGHA_ROOT}/lib has several directories. You should also set the TEIGHA_PLATFORM variable to the subdirectory of interest")
-    endif()
-endif()
-
-set(TEIGHA_INCLUDE_SUBDIRS_NAMES
-    ${TEIGHA_INCLUDE_SUBDIRS_NAMES}
-    Core/Include
-    Core/Extensions/ExServices
-    Core/Examples/Common
-    ThirdParty/activation
-    KernelBase/Include
-    Kernel/Include
-    Kernel/Extensions/ExServices
-    Drawing/Include
-    Drawing/Extensions/ExServices
-    Dgn/include
-    Dgn/Extensions/ExServices)
-set(TEIGHA_INCLUDE_DIRS)
-foreach(_TEIGHA_INCLUDE_SUBDIR IN LISTS TEIGHA_INCLUDE_SUBDIRS_NAMES)
-    if(EXISTS "${TEIGHA_ROOT}/${_TEIGHA_INCLUDE_SUBDIR}")
-        list(APPEND TEIGHA_INCLUDE_DIRS "${TEIGHA_ROOT}/${_TEIGHA_INCLUDE_SUBDIR}")
-    endif()
-endforeach()
-
-if(DEFINED TEIGHA_ACTIVATION_FILE_DIRECTORY)
-    list(APPEND TEIGHA_INCLUDE_DIRS "${TEIGHA_ACTIVATION_FILE_DIRECTORY}")
-else()
-    file(GLOB _od_activation_info "${TEIGHA_ROOT}/OdActivationInfo")
-    if(_od_activation_info)
-        list(LENGTH _od_activation_info _od_activation_info_length)
-        if(_od_activation_info_length EQUAL 1)
-            get_filename_component(TEIGHA_ACTIVATION_FILE_DIRECTORY "${_od_activation_info}" DIRECTORY)
-            list(APPEND TEIGHA_INCLUDE_DIRS "${TEIGHA_ACTIVATION_FILE_DIRECTORY}")
-        else()
-            message(FATAL_ERROR "Several OdActivationInfo files found under ${TEIGHA_ROOT}. Point to one of them by setting TEIGHA_ACTIVATION_FILE_DIRECTORY")
-        endif()
-    else()
-        message(WARNING "No OdActivationInfo file found under ${TEIGHA_ROOT}. You'll likely need to point to one by setting TEIGHA_ACTIVATION_FILE_DIRECTORY")
-    endif()
-endif()
-
-set(TEIGHA_LIBRARIES)
-
-if(EXISTS "${TEIGHA_ROOT}/bin/${TEIGHA_PLATFORM}/TG_Db.tx")
-    # Linux shared libs
-    list(APPEND TEIGHA_LIBRARIES_NAMES
-        "bin/${TEIGHA_PLATFORM}/TG_Db.tx"
-        "bin/${TEIGHA_PLATFORM}/TD_DbEntities.tx"
-        "lib/${TEIGHA_PLATFORM}/libTD_DrawingsExamplesCommon.a"
-        "lib/${TEIGHA_PLATFORM}/libTG_ExamplesCommon.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_ExamplesCommon.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_Key.a"
-        "bin/${TEIGHA_PLATFORM}/libTD_Db.so"
-        "bin/${TEIGHA_PLATFORM}/libTD_DbCore.so"
-        "bin/${TEIGHA_PLATFORM}/libTD_DbRoot.so"
-        "bin/${TEIGHA_PLATFORM}/libTD_Gi.so"
-        "bin/${TEIGHA_PLATFORM}/libTD_SpatialIndex.so"
-        "bin/${TEIGHA_PLATFORM}/libTD_Root.so"
-        "bin/${TEIGHA_PLATFORM}/libTD_Ge.so"
-        "bin/${TEIGHA_PLATFORM}/libTD_Zlib.so"
-        "bin/${TEIGHA_PLATFORM}/libTD_Alloc.so"
-        "bin/${TEIGHA_PLATFORM}/liboless.so"
-        "bin/${TEIGHA_PLATFORM}/liblibcrypto.so"
-        )
-elseif (EXISTS "${TEIGHA_ROOT}/lib/${TEIGHA_PLATFORM}/libTG_Db.a")
-    # Linux static libs
-    list(APPEND TEIGHA_LIBRARIES_NAMES
-        "lib/${TEIGHA_PLATFORM}/libTD_Db.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_DbCore.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_DbEntities.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_DrawingsExamplesCommon.a"
-        "lib/${TEIGHA_PLATFORM}/libTG_Db.a"
-        "lib/${TEIGHA_PLATFORM}/libTG_ExamplesCommon.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_Alloc.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_DbRoot.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_ExamplesCommon.a"
-        "lib/${TEIGHA_PLATFORM}/libWinBitmap.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_Gi.a"
-        "lib/${TEIGHA_PLATFORM}/libtinyxml.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_Zlib.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_SpatialIndex.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_DgnImport.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_DgnUnderlay.a"
-        "lib/${TEIGHA_PLATFORM}/libModelerGeometry.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_BrepRenderer.a"
-        "lib/${TEIGHA_PLATFORM}/libRecomputeDimBlock.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_AcisBuilder.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_Br.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_Gs.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_Ge.a"
-        "lib/${TEIGHA_PLATFORM}/libTD_Root.a"
-        "lib/${TEIGHA_PLATFORM}/liboless.a"
-        "lib/${TEIGHA_PLATFORM}/liblibcrypto.a"
-        "lib/${TEIGHA_PLATFORM}/libsisl.a"
-        #"lib/${TEIGHA_PLATFORM}/libFreeType.a"  # System one added later
-        #"lib/${TEIGHA_PLATFORM}/libzlib.a"      # System one added later
-        )
-elseif (EXISTS "${TEIGHA_ROOT}/lib/${TEIGHA_PLATFORM}/TD_DrawingsExamplesCommon.lib")
-    # Windows ODA 2021
-    set(TD_DRAWINGS_LIBDIR "lib/${TEIGHA_PLATFORM}")
-    set(TD_KERNEL_LIBDIR   "lib/${TEIGHA_PLATFORM}")
-    list(APPEND TEIGHA_LIBRARIES_NAMES
-        "${TD_DRAWINGS_LIBDIR}/TD_Db.lib"
-        "${TD_DRAWINGS_LIBDIR}/TD_DbCore.lib"
-        "${TD_DRAWINGS_LIBDIR}/TD_DbEntities.lib"
-        "${TD_DRAWINGS_LIBDIR}/TD_DrawingsExamplesCommon.lib"
-        "${TD_DRAWINGS_LIBDIR}/TG_Db.lib"
-        "${TD_DRAWINGS_LIBDIR}/TG_ExamplesCommon.lib"
-        "${TD_KERNEL_LIBDIR}/TD_Alloc.lib"
-        "${TD_KERNEL_LIBDIR}/TD_DbRoot.lib"
-        "${TD_KERNEL_LIBDIR}/TD_ExamplesCommon.lib"
-        "${TD_KERNEL_LIBDIR}/TD_Ge.lib"
-        "${TD_KERNEL_LIBDIR}/TD_Root.lib")
-    if (EXISTS "${TEIGHA_ROOT}/exe/${TEIGHA_PLATFORM}/oless.dll")
-    # Dynamic libs
-    list(APPEND TEIGHA_LIBRARIES_NAMES
-        "${TD_DRAWINGS_LIBDIR}/TD_Key.lib")
-    else()
-    # Static libs
-    list(APPEND TEIGHA_LIBRARIES_NAMES
-        "${TD_KERNEL_LIBDIR}/TD_Gi.lib"
-        "${TD_KERNEL_LIBDIR}/tinyxml.lib"
-        "${TD_KERNEL_LIBDIR}/TD_Zlib.lib"
-        "${TD_DRAWINGS_LIBDIR}/TD_DbIO.lib"
-        "${TD_DRAWINGS_LIBDIR}/ISM.lib"
-        "${TD_DRAWINGS_LIBDIR}/WipeOut.lib"
-        "${TD_DRAWINGS_LIBDIR}/RText.lib"
-        "${TD_DRAWINGS_LIBDIR}/ATEXT.lib"
-        "${TD_DRAWINGS_LIBDIR}/SCENEOE.lib"
-        "${TD_DRAWINGS_LIBDIR}/ACCAMERA.lib"
-        "${TD_DRAWINGS_LIBDIR}/AcMPolygonObj15.lib"
-        "${TD_KERNEL_LIBDIR}/TD_Gs.lib"
-        "${TD_KERNEL_LIBDIR}/TD_SpatialIndex.lib"
-        "${TD_KERNEL_LIBDIR}/oless.lib"
-        "${TD_KERNEL_LIBDIR}/UTF.lib"
-        "${TD_KERNEL_LIBDIR}/WinBitmap.lib"
-        "${TD_KERNEL_LIBDIR}/OdBrepModeler.lib"
-        "${TD_KERNEL_LIBDIR}/TD_Br.lib"
-        "${TD_KERNEL_LIBDIR}/TD_AcisBuilder.lib"
-        "${TD_KERNEL_LIBDIR}/TD_BrepBuilder.lib"
-        "${TD_KERNEL_LIBDIR}/TD_BrepBuilderFiller.lib"
-        "${TD_KERNEL_LIBDIR}/TD_BrepRenderer.lib"
-        "${TD_DRAWINGS_LIBDIR}/ModelerGeometry.lib"
-        "${TD_DRAWINGS_LIBDIR}/RecomputeDimBlock.lib")
-    list(APPEND TEIGHA_LIBRARIES crypt32.lib
-                                 secur32.lib
-                                 user32.lib
-                                 gdi32.lib
-                                 ole32.lib)
-    endif()
-elseif (EXISTS "${TEIGHA_ROOT}/lib/${TEIGHA_PLATFORM}/TD_Key.lib")
-    # Windows Teigha 4.2.2 shared libs
-    list(APPEND TEIGHA_LIBRARIES_NAMES
-         "lib/${TEIGHA_PLATFORM}/TD_Key.lib"
-         "lib/${TEIGHA_PLATFORM}/TD_ExamplesCommon.lib"
-         "lib/${TEIGHA_PLATFORM}/TD_Db.lib"
-         "lib/${TEIGHA_PLATFORM}/TD_DbRoot.lib"
-         "lib/${TEIGHA_PLATFORM}/TD_Root.lib"
-         "lib/${TEIGHA_PLATFORM}/TD_Ge.lib"
-         "lib/${TEIGHA_PLATFORM}/TD_Alloc.lib"
-         "lib/${TEIGHA_PLATFORM}/TG_Db.lib"
-         "lib/${TEIGHA_PLATFORM}/TG_ExamplesCommon.lib")
-else()
-    # TODO ODA 2021.2 shared and static libs to migrate from nmake.opt
-    message(FATAL_ERROR "Teigha/ODA library layout not handled currently")
-endif()
-
-foreach(_TEIGHA_LIBRARY IN LISTS TEIGHA_LIBRARIES_NAMES)
-    if(EXISTS "${TEIGHA_ROOT}/${_TEIGHA_LIBRARY}")
-        list(APPEND TEIGHA_LIBRARIES "${TEIGHA_ROOT}/${_TEIGHA_LIBRARY}")
-    endif()
-endforeach()
-
-if(WIN32)
-    list(APPEND TEIGHA_LIBRARIES advapi32.lib)
-endif()
-if (EXISTS "${TEIGHA_ROOT}/lib/${TEIGHA_PLATFORM}/libTG_Db.a")
-    find_library(FREETYPE_LIBRARY NAMES freetype)
-    mark_as_advanced(FREETYPE_LIBRARY)
-    list(APPEND TEIGHA_LIBRARIES ${FREETYPE_LIBRARY})
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(TEIGHA
-                                  FOUND_VAR TEIGHA_FOUND
-                                  REQUIRED_VARS TEIGHA_LIBRARIES TEIGHA_INCLUDE_DIRS)
-if(TEIGHA_FOUND)
-    if(NOT TARGET TEIGHA::TEIGHA)
-        set(INCR 1)
-        set(TEIGHA_TARGETS)
-        foreach(_TEIGHA_LIBRARY IN LISTS TEIGHA_LIBRARIES)
-            add_library(TEIGHA::TEIGHA_${INCR} UNKNOWN IMPORTED)
-            set_target_properties(TEIGHA::TEIGHA_${INCR} PROPERTIES
-                                  IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                                  IMPORTED_LOCATION "${_TEIGHA_LIBRARY}")
-            list(APPEND TEIGHA_TARGETS TEIGHA::TEIGHA_${INCR})
-            math(EXPR INCR "${INCR}+1")
-        endforeach()
-        if (EXISTS "${TEIGHA_ROOT}/lib/${TEIGHA_PLATFORM}/libTG_Db.a")
-            find_library(FREETYPE_LIBRARY NAMES freetype)
-            list(APPEND TEIGHA_TARGETS ZLIB::ZLIB)
-        endif()
-        add_library(TEIGHA::TEIGHA INTERFACE IMPORTED)
-        set_target_properties(TEIGHA::TEIGHA PROPERTIES
-                     INTERFACE_INCLUDE_DIRECTORIES "${TEIGHA_INCLUDE_DIRS}"
-                     INTERFACE_LINK_LIBRARIES "${TEIGHA_TARGETS}")
-        if(EXISTS "${TEIGHA_ROOT}/bin/${TEIGHA_PLATFORM}/liboless.so" OR EXISTS "${TEIGHA_ROOT}/exe/${TEIGHA_PLATFORM}/oless.dll")
-            set_property(TARGET TEIGHA::TEIGHA APPEND PROPERTY
-                         INTERFACE_COMPILE_DEFINITIONS "_TOOLKIT_IN_DLL_")
-        endif()
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindWebP.cmake b/cmake/modules/packages/FindWebP.cmake
deleted file mode 100644
index dc2025c845..0000000000
--- a/cmake/modules/packages/FindWebP.cmake
+++ /dev/null
@@ -1,38 +0,0 @@
-# - Try to find the WebP library
-#
-# Once done this will define
-#
-#  WEBP_FOUND - System has libgta
-#  WEBP_INCLUDE_DIR - The libgta include directory
-#  WEBP_LIBRARIES - The libraries needed to use libgta
-
-find_package(PkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
-    pkg_check_modules(PC_WEBP QUIET libwebp)
-    set(WEBP_VERSION_STRING ${PC_WEBP_VERSION})
-endif()
-
-find_path(WEBP_INCLUDE_DIR webp/encode.h HINTS ${PC_WEBP_INCLUDE_DIRS})
-
-find_library(WEBP_LIBRARY NAMES webp libwebp HINTS ${PC_WEBP_LIBRARY_DIRS})
-
-mark_as_advanced(WEBP_INCLUDE_DIR WEBP_LIBRARY)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(WebP
-                                  FOUND_VAR WEBP_FOUND
-                                  REQUIRED_VARS WEBP_LIBRARY WEBP_INCLUDE_DIR
-                                  VERSION_VAR WEBP_VERSION_STRING
-)
-
-if(WEBP_FOUND)
-    set(WEBP_LIBRARIES ${WEBP_LIBRARY})
-    set(WEBP_INCLUDE_DIRS ${WEBP_INCLUDE_DIR})
-    if(NOT TARGET WEBP::WebP)
-        add_library(WEBP::WebP UNKNOWN IMPORTED)
-        set_target_properties(WEBP::WebP PROPERTIES
-                              INTERFACE_INCLUDE_DIRECTORIES ${WEBP_INCLUDE_DIRS}
-                              IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                              IMPORTED_LOCATION ${WEBP_LIBRARIES})
-    endif()
-endif()
diff --git a/cmake/modules/packages/FindZSTD.cmake b/cmake/modules/packages/FindZSTD.cmake
deleted file mode 100644
index 1adf451d23..0000000000
--- a/cmake/modules/packages/FindZSTD.cmake
+++ /dev/null
@@ -1,95 +0,0 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying file COPYING-CMAKE-SCRIPTS or
-# https://cmake.org/licensing for details.
-
-#[=======================================================================[.rst:
-FindZSTD
---------
-
-Find the ZSTD library
-
-Zstandard C/C++ library is built with CMake. So this find module
-should be removed when ZStandard library export cmake config files
-as distribution. Unfortunately ZStandard does not export it,
-we need to prepare find module.
-see. https://gitlab.kitware.com/cmake/cmake/-/issues/19405
-
-IMPORTED targets
-^^^^^^^^^^^^^^^^
-
-This module defines the following :prop_tgt:`IMPORTED` target: ``ZSTD::zstd``
-
-Result variables
-^^^^^^^^^^^^^^^^
-
-This module will set the following variables if found:
-
-``ZSTD_INCLUDE_DIRS`` - where to find zstd.h, etc.
-``ZSTD_LIBRARIES`` - the libraries to link against to use ZSTD.
-``ZSTD_VERSION`` - version of the ZSTD library found
-``ZSTD_FOUND`` - TRUE if found
-
-::
-
-  ``ZSTD_VERSION_MAJOR``  - The major version of zstd
-  ``ZSTD_VERSION_MINOR``  - The minor version of zstd
-  ``ZSTD_VERSION_RELEASE``  - The release version of zstd
-
-#]=======================================================================]
-
-find_package(PkgConfig)
-pkg_check_modules(PC_ZSTD QUIET libzstd)
-
-find_path(
-  ZSTD_INCLUDE_DIR
-  NAMES zstd.h
-  PATHS ${PC_ZSTD_INCLUDE_DIRS}
-)
-find_library(
-  ZSTD_LIBRARY
-  NAMES zstd zstd_static NAMES_PER_DIR
-  PATHS ${PC_ZSTD_LIBRARY_DIRS}
-)
-
-# Extract version information from the header file
-if(EXISTS "${ZSTD_INCLUDE_DIR}/zstd.h")
-  file(STRINGS "${ZSTD_INCLUDE_DIR}/zstd.h"
-       _ZSTD_VERSION_MAJOR REGEX "^#define ZSTD_VERSION_MAJOR")
-  string(REGEX MATCH "[0-9]+" ZSTD_VERSION_MAJOR ${_ZSTD_VERSION_MAJOR})
-  file(STRINGS "${ZSTD_INCLUDE_DIR}/zstd.h"
-       _ZSTD_VERSION_MINOR REGEX "^#define ZSTD_VERSION_MINOR")
-  string(REGEX MATCH "[0-9]+" ZSTD_VERSION_MINOR ${_ZSTD_VERSION_MINOR} )
-  file(STRINGS "${ZSTD_INCLUDE_DIR}/zstd.h"
-       _ZSTD_VERSION_RELEASE REGEX "^#define ZSTD_VERSION_RELEASE")
-  string(REGEX MATCH "[0-9]+" ZSTD_VERSION_RELEASE ${_ZSTD_VERSION_RELEASE} )
-  set(ZSTD_VERSION ${ZSTD_VERSION_MAJOR}.${ZSTD_VERSION_MINOR}.${ZSTD_VERSION_RELEASE})
-endif()
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(
-  ZSTD
-  FOUND_VAR ZSTD_FOUND
-  REQUIRED_VARS ZSTD_LIBRARY ZSTD_INCLUDE_DIR
-  VERSION_VAR ZSTD_VERSION
-  HANDLE_COMPONENTS)
-mark_as_advanced(ZSTD_INCLUDE_DIR ZSTD_LIBRARY)
-
-include(FeatureSummary)
-set_package_properties(
-  ZSTD PROPERTIES
-  DESCRIPTION "Zstandard - Fast real-time compression algorithm"
-  URL "https://github.com/facebook/zstd")
-
-if(ZSTD_FOUND)
-  set(ZSTD_INCLUDE_DIRS ${ZSTD_INCLUDE_DIR})
-  set(ZSTD_LIBRARIES ${ZSTD_LIBRARY})
-  set(ZSTD_DEFINITIONS ${PC_ZSTD_CFLAGS_OTHER})
-  set(ZSTD_TARGET ZSTD::zstd)
-  if(NOT TARGET ${ZSTD_TARGET})
-    add_library(${ZSTD_TARGET} UNKNOWN IMPORTED)
-    set_target_properties(${ZSTD_TARGET} PROPERTIES INTERFACE_INCLUDE_DIRECTORIES ${ZSTD_INCLUDE_DIR})
-    if(EXISTS "${ZSTD_LIBRARY}")
-      set_target_properties(${ZSTD_TARGET} PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES "CXX"
-        IMPORTED_LOCATION "${ZSTD_LIBRARY}")
-    endif()
-  endif()
-endif()
diff --git a/frmts/gif/CMakeLists.txt b/frmts/gif/CMakeLists.txt
index 202206384c..2cb294d46c 100644
--- a/frmts/gif/CMakeLists.txt
+++ b/frmts/gif/CMakeLists.txt
@@ -8,7 +8,7 @@ target_compile_definitions(gdal_GIF PRIVATE -DHAVE_GIF)
 if (GDAL_USE_GIF_INTERNAL)
   gdal_add_vendored_lib(gdal_GIF giflib)
 else ()
-  gdal_target_link_libraries(gdal_GIF PRIVATE GIF::GIF)
+    gdal_target_link_libraries(gdal_GIF PRIVATE CONAN_PKG::giflib)
 endif ()
 if (CMAKE_VERSION VERSION_GREATER_EQUAL 3.16)
   set_property(SOURCE gifdataset.cpp gifabstractdataset.cpp PROPERTY SKIP_UNITY_BUILD_INCLUSION ON)
diff --git a/frmts/gtiff/CMakeLists.txt b/frmts/gtiff/CMakeLists.txt
index fc63963f80..963a3c1691 100644
--- a/frmts/gtiff/CMakeLists.txt
+++ b/frmts/gtiff/CMakeLists.txt
@@ -52,7 +52,7 @@ endif ()
 
 # Now deal with external dependencies
 
-gdal_target_link_libraries(gdal_GTIFF PRIVATE PROJ::proj)
+gdal_target_link_libraries(gdal_GTIFF PRIVATE CONAN_PKG::proj)
 
 if (NOT GDAL_USE_TIFF_INTERNAL)
   target_compile_definitions(gdal_GTIFF PRIVATE -DPIXARLOG_SUPPORT)
diff --git a/frmts/gtiff/libgeotiff/CMakeLists.txt b/frmts/gtiff/libgeotiff/CMakeLists.txt
index 93bf8052ee..d618c097f4 100644
--- a/frmts/gtiff/libgeotiff/CMakeLists.txt
+++ b/frmts/gtiff/libgeotiff/CMakeLists.txt
@@ -46,6 +46,6 @@ if (RENAME_INTERNAL_GEOTIFF_SYMBOLS)
 endif ()
 set_property(TARGET geotiff PROPERTY POSITION_INDEPENDENT_CODE ${GDAL_OBJECT_LIBRARIES_POSITION_INDEPENDENT_CODE})
 
-gdal_target_link_libraries(geotiff PRIVATE PROJ::proj)
+gdal_target_link_libraries(geotiff PRIVATE CONAN_PKG::proj)
 
 target_sources(${GDAL_LIB_TARGET_NAME} PRIVATE $<TARGET_OBJECTS:geotiff>)
diff --git a/frmts/hfa/CMakeLists.txt b/frmts/hfa/CMakeLists.txt
index e5b7138e91..411aa216a9 100644
--- a/frmts/hfa/CMakeLists.txt
+++ b/frmts/hfa/CMakeLists.txt
@@ -15,11 +15,12 @@ add_gdal_driver(
           hfa_overviews.cpp
   BUILTIN)
 gdal_standard_includes(gdal_HFA)
-target_include_directories(gdal_HFA PRIVATE $<TARGET_PROPERTY:PROJ::proj,INTERFACE_INCLUDE_DIRECTORIES>)
-target_compile_definitions(gdal_HFA PRIVATE $<TARGET_PROPERTY:PROJ::proj,INTERFACE_COMPILE_DEFINITIONS>)
+target_link_libraries(gdal_HFA INTERFACE CONAN_PKG::proj)
+target_include_directories(gdal_HFA PRIVATE ${PROJ_INCLUDE_DIRS})
+target_compile_definitions(gdal_HFA PRIVATE $<TARGET_PROPERTY:CONAN_PKG::proj,INTERFACE_COMPILE_DEFINITIONS>)
 
 if (CMAKE_VERSION VERSION_GREATER_EQUAL 3.12)
   add_executable(hfatest EXCLUDE_FROM_ALL hfatest.cpp ../../ogr/ogr_proj_p.cpp)
   gdal_standard_includes(hfatest)
-  target_link_libraries(hfatest PRIVATE $<TARGET_NAME:${GDAL_LIB_TARGET_NAME}> gdal_HFA PROJ::proj)
+  target_link_libraries(hfatest PRIVATE $<TARGET_NAME:${GDAL_LIB_TARGET_NAME}> gdal_HFA CONAN_PKG::proj)
 endif ()
diff --git a/frmts/idrisi/CMakeLists.txt b/frmts/idrisi/CMakeLists.txt
index b06f3b4eb2..b29e2af705 100644
--- a/frmts/idrisi/CMakeLists.txt
+++ b/frmts/idrisi/CMakeLists.txt
@@ -5,7 +5,7 @@ add_gdal_driver(
   BUILTIN) # because OGR IDRISI dependent on us
 gdal_standard_includes(gdal_IDRISI)
 
-gdal_target_link_libraries(gdal_IDRISI PRIVATE PROJ::proj)
+gdal_target_link_libraries(gdal_IDRISI PRIVATE CONAN_PKG::proj)
 
 if (CMAKE_VERSION VERSION_GREATER_EQUAL 3.16)
   # These files has CPL_CVSID("$id$") which break ODR and UNITY_BUILD
diff --git a/frmts/pdf/CMakeLists.txt b/frmts/pdf/CMakeLists.txt
index 3c89b969e0..fb778717da 100644
--- a/frmts/pdf/CMakeLists.txt
+++ b/frmts/pdf/CMakeLists.txt
@@ -23,8 +23,8 @@ target_include_directories(gdal_PDF PRIVATE ${GDAL_RASTER_FORMAT_SOURCE_DIR}/vrt
 if (GDAL_USE_POPPLER)
   target_include_directories(gdal_PDF PRIVATE ${Poppler_INCLUDE_DIRS} ${Poppler_INCLUDE_DIRS}/../)
   gdal_target_link_libraries(gdal_PDF PRIVATE Poppler::Poppler)
-  string(REGEX REPLACE "([0-9]+)\\.([0-9]+).*" "\\1" Poppler_VERSION_MAJOR ${Poppler_VERSION_STRING})
-  string(REGEX REPLACE "([0-9]+)\\.([0-9]+).*" "\\2" Poppler_VERSION_MINOR ${Poppler_VERSION_STRING})
+  string(REGEX REPLACE "([0-9]+)\\.([0-9]+).*" "\\1" Poppler_VERSION_MAJOR ${poppler_VERSION})
+  string(REGEX REPLACE "([0-9]+)\\.([0-9]+).*" "\\2" Poppler_VERSION_MINOR ${poppler_VERSION})
   # Strip leading zero
   if ("${Poppler_VERSION_MINOR}" MATCHES "0?[0-9]+")
     string(REGEX REPLACE "0?([0-9]+)" "\\1" Poppler_VERSION_MINOR ${Poppler_VERSION_MINOR})
diff --git a/gcore/CMakeLists.txt b/gcore/CMakeLists.txt
index c5d6bb744e..257c1596fa 100644
--- a/gcore/CMakeLists.txt
+++ b/gcore/CMakeLists.txt
@@ -131,7 +131,7 @@ if (GDAL_USE_GEOS)
   gdal_target_link_libraries(gcore PRIVATE ${GEOS_TARGET})
 endif ()
 
-gdal_target_link_libraries(gcore PRIVATE PROJ::proj)
+gdal_target_link_libraries(gcore PRIVATE CONAN_PKG::proj)
 
 # Windows(Mingw/MSVC) link libraries
 if (CMAKE_SYSTEM_NAME MATCHES "Windows")
diff --git a/gdal.cmake b/gdal.cmake
index ff1ca7e6f6..e98875f1b9 100644
--- a/gdal.cmake
+++ b/gdal.cmake
@@ -795,25 +795,6 @@ if (NOT GDAL_ENABLE_MACOSX_FRAMEWORK)
                  ${CMAKE_CURRENT_BINARY_DIR}/GDALConfig.cmake @ONLY)
   install(FILES ${CMAKE_CURRENT_BINARY_DIR}/GDALConfig.cmake DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/gdal/)
 
-  # Generate gdal-config utility command and pkg-config module gdal.pc
-  include(GdalGenerateConfig)
-  gdal_generate_config(
-    TARGET
-    "${GDAL_LIB_TARGET_NAME}"
-    GLOBAL_PROPERTY
-    "gdal_private_link_libraries"
-    GDAL_CONFIG
-    "${PROJECT_BINARY_DIR}/apps/gdal-config"
-    PKG_CONFIG
-    "${CMAKE_CURRENT_BINARY_DIR}/gdal.pc")
-  install(
-    PROGRAMS ${PROJECT_BINARY_DIR}/apps/gdal-config
-    DESTINATION ${CMAKE_INSTALL_BINDIR}
-    COMPONENT applications)
-  install(
-    FILES ${CMAKE_CURRENT_BINARY_DIR}/gdal.pc
-    DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
-    COMPONENT libraries)
 endif ()
 
 configure_file(${GDAL_CMAKE_TEMPLATE_PATH}/uninstall.cmake.in ${PROJECT_BINARY_DIR}/cmake_uninstall.cmake @ONLY)
diff --git a/ogr/CMakeLists.txt b/ogr/CMakeLists.txt
index 19ba4e12fe..3f1a38e471 100644
--- a/ogr/CMakeLists.txt
+++ b/ogr/CMakeLists.txt
@@ -88,12 +88,12 @@ endif ()
 
 target_compile_definitions(ogr PRIVATE HAVE_MITAB)
 
-gdal_target_link_libraries(ogr PRIVATE PROJ::proj)
+target_link_libraries(ogr PUBLIC CONAN_PKG::proj)
 
 # External libs then
 if (GDAL_USE_GEOS)
   target_compile_definitions(ogr PRIVATE -DHAVE_GEOS=1)
-  gdal_target_link_libraries(ogr PRIVATE ${GEOS_TARGET})
+  target_link_libraries(ogr PUBLIC ${GEOS_TARGET})
 endif ()
 
 if (GDAL_USE_SFCGAL)
diff --git a/ogr/ogr_proj_p.h b/ogr/ogr_proj_p.h
index 88928ad1ad..7cdd587db7 100644
--- a/ogr/ogr_proj_p.h
+++ b/ogr/ogr_proj_p.h
@@ -29,7 +29,7 @@
 #ifndef OGR_PROJ_P_H_INCLUDED
 #define OGR_PROJ_P_H_INCLUDED
 
-#include "proj.h"
+#include <proj.h>
 
 #include "cpl_mem_cache.h"
 
diff --git a/ogr/ogrsf_frmts/ogdi/CMakeLists.txt b/ogr/ogrsf_frmts/ogdi/CMakeLists.txt
index 32857f881b..474eadf701 100644
--- a/ogr/ogrsf_frmts/ogdi/CMakeLists.txt
+++ b/ogr/ogrsf_frmts/ogdi/CMakeLists.txt
@@ -1,4 +1,4 @@
 add_gdal_driver(TARGET ogr_OGDI SOURCES ogrogdi.h ogrogdidatasource.cpp ogrogdidriver.cpp ogrogdilayer.cpp
                                         PLUGIN_CAPABLE)
 gdal_standard_includes(ogr_OGDI)
-gdal_target_link_libraries(ogr_OGDI PRIVATE PROJ::proj OGDI::OGDI)
+gdal_target_link_libraries(ogr_OGDI PRIVATE CONAN_PKG::proj OGDI::OGDI)
diff --git a/ogr/ogrsf_frmts/osm/CMakeLists.txt b/ogr/ogrsf_frmts/osm/CMakeLists.txt
index e74d92d81b..d9e369f4bc 100644
--- a/ogr/ogrsf_frmts/osm/CMakeLists.txt
+++ b/ogr/ogrsf_frmts/osm/CMakeLists.txt
@@ -17,7 +17,7 @@ endif ()
 if (BROKEN)
   add_executable(osm2osm EXCLUDE_FROM_ALL osm2osm.cpp)
   gdal_standard_includes(osm2osm)
-  target_link_libraries(osm2osm PRIVATE $<TARGET_NAME:${GDAL_LIB_TARGET_NAME}> ogr_OSM PROJ::proj)
+  target_link_libraries(osm2osm PRIVATE $<TARGET_NAME:${GDAL_LIB_TARGET_NAME}> ogr_OSM CONAN_PKG::proj)
   if (GDAL_USE_EXPAT)
     target_link_libraries(osm2osm PRIVATE ${EXPAT_TARGET})
   endif ()
diff --git a/ogr/ogrsf_frmts/sqlite/CMakeLists.txt b/ogr/ogrsf_frmts/sqlite/CMakeLists.txt
index dfc72ad157..26aef55332 100644
--- a/ogr/ogrsf_frmts/sqlite/CMakeLists.txt
+++ b/ogr/ogrsf_frmts/sqlite/CMakeLists.txt
@@ -26,7 +26,7 @@ gdal_standard_includes(ogr_SQLite)
 
 target_compile_definitions(ogr_SQLite PRIVATE -DHAVE_SQLITE)
 gdal_target_link_libraries(ogr_SQLite PRIVATE SQLite::SQLite3)
-gdal_target_link_libraries(ogr_SQLite PRIVATE PROJ::proj)
+gdal_target_link_libraries(ogr_SQLite PRIVATE CONAN_PKG::proj)
 
 option(OGR_SQLITE_ALLOW_LOAD_EXTENSIONS "Whether SQLite extension loading is enabled through the OGR_SQLITE_LOAD_EXTENSIONS configuration option" ON)
 if (OGR_SQLITE_ALLOW_LOAD_EXTENSIONS)
diff --git a/port/CMakeLists.txt b/port/CMakeLists.txt
index 90745b02c3..adef01f7cc 100644
--- a/port/CMakeLists.txt
+++ b/port/CMakeLists.txt
@@ -280,12 +280,12 @@ endif ()
 
 if (GDAL_USE_DEFLATE)
   target_compile_definitions(cpl PRIVATE -DHAVE_LIBDEFLATE)
-  gdal_target_link_libraries(cpl PRIVATE Deflate::Deflate)
+  gdal_target_link_libraries(cpl PRIVATE CONAN_PKG::libdeflate)
 endif ()
 
 if (GDAL_USE_LZ4)
   target_compile_definitions(cpl PRIVATE -DHAVE_LZ4)
-  gdal_target_link_libraries(cpl PRIVATE LZ4::LZ4)
+  gdal_target_link_libraries(cpl PRIVATE lz4::lz4)
 endif ()
 
 if (GDAL_USE_BLOSC)
