--- libebl/eblopenbackend.c
+++ libebl/eblopenbackend.c
@@ -321,19 +321,39 @@
 
 	/* Give it a try.  At least the machine type matches.  First
            try to load the module.  */
-	char dsoname[100];
-	strcpy (stpcpy (stpcpy (dsoname, ORIGINDIR "libebl_"),
-			machines[cnt].dsoname),
-		".so");
+	char *dsoname = (char*) malloc(512 * sizeof(char));
+	void *h = NULL;
 
-	void *h = dlopen (dsoname, RTLD_LAZY);
+	const char *elfutils_modules_env = getenv("CONAN_ELFUTILS_MODULES");
+	if (elfutils_modules_env != NULL)
+	{
+	 size_t len = strlen(elfutils_modules_env);
+	 char* last = elfutils_modules_env + len - 1;
+	 size_t destsz = (*last == '/') ? len-1 : len;
+	 strcpy(dsoname, elfutils_modules_env);
+	 *(dsoname+destsz) = '\0';
+	 strcat(dsoname, "/libebl_");
+	 strcat(dsoname, machines[cnt].dsoname);
+	 strcat(dsoname, ".so");
+		
+	 h = dlopen(dsoname, RTLD_LAZY);
+	}
 	if (h == NULL)
-	  {
-	    strcpy (stpcpy (stpcpy (dsoname, "libebl_"),
-			    machines[cnt].dsoname),
-		    ".so");
-	    h = dlopen (dsoname, RTLD_LAZY);
-	  }
+	{
+		strcpy (stpcpy (stpcpy (dsoname, ORIGINDIR "libebl_"),
+			machines[cnt].dsoname),
+			".so");
+		h = dlopen(dsoname, RTLD_LAZY);
+			
+		if (h == NULL)
+		{
+			strcpy (stpcpy (stpcpy (dsoname, "libebl_"),
+					machines[cnt].dsoname),
+				".so");
+			h = dlopen (dsoname, RTLD_LAZY);
+		}
+	}
+  free(dsoname);
 
 	  /* Try without an explicit path.  */
 	if (h != NULL)
