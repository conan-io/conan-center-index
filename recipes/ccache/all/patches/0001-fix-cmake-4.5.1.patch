--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -97,12 +97,12 @@ if(MSVC AND NOT CMAKE_TOOLCHAIN_FILE MATCHES "vcpkg|conan")
 endif()
 
 option(ZSTD_FROM_INTERNET "Download and use libzstd from the Internet" ${ZSTD_FROM_INTERNET_DEFAULT})
-find_package(zstd 1.1.2 REQUIRED)
+find_package(zstd REQUIRED CONFIG)
 
 option(REDIS_STORAGE_BACKEND "Enable Redis secondary storage" ON)
 if(REDIS_STORAGE_BACKEND)
   option(HIREDIS_FROM_INTERNET "Download and use libhiredis from the Internet" ${HIREDIS_FROM_INTERNET_DEFAULT})
-  find_package(hiredis 0.13.3 REQUIRED)
+  find_package(hiredis REQUIRED CONFIG)
 endif()
 
 #
--- a/cmake/GenerateConfigurationFile.cmake
+++ b/cmake/GenerateConfigurationFile.cmake
@@ -104,5 +104,5 @@ if(HAVE_SYS_MMAN_H AND HAVE_PTHREAD_MUTEXATTR_SETPSHARED)
   set(INODE_CACHE_SUPPORTED 1)
 endif()
 
-configure_file(${CMAKE_SOURCE_DIR}/cmake/config.h.in
+configure_file(${PROJECT_SOURCE_DIR}/cmake/config.h.in
                ${CMAKE_BINARY_DIR}/config.h @ONLY)
--- a/cmake/GenerateVersionFile.cmake
+++ b/cmake/GenerateVersionFile.cmake
@@ -1,4 +1,4 @@
 configure_file(
-  ${CMAKE_SOURCE_DIR}/cmake/version.cpp.in
+  ${PROJECT_SOURCE_DIR}/cmake/version.cpp.in
   ${CMAKE_BINARY_DIR}/src/version.cpp
   @ONLY)
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -27,7 +27,7 @@ set(
   execute.cpp
   hashutil.cpp
   language.cpp
-  version.cpp
+  ${CMAKE_BINARY_DIR}/src/version.cpp
 )
 
 if(INODE_CACHE_SUPPORTED)
@@ -65,7 +65,7 @@ set(THREADS_PREFER_PTHREAD_FLAG ON)
 find_package(Threads REQUIRED)
 target_link_libraries(
   ccache_framework
-  PRIVATE standard_settings standard_warnings ZSTD::ZSTD Threads::Threads third_party
+  PRIVATE standard_settings standard_warnings $<IF:$<TARGET_EXISTS:zstd::libzstd_shared>,zstd::libzstd_shared,zstd::libzstd_static> Threads::Threads third_party
 )
 
 target_include_directories(ccache_framework PRIVATE ${CMAKE_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})
@@ -74,7 +74,7 @@ if(REDIS_STORAGE_BACKEND)
   target_compile_definitions(ccache_framework PRIVATE -DHAVE_REDIS_STORAGE_BACKEND)
   target_link_libraries(
     ccache_framework
-    PUBLIC standard_settings standard_warnings HIREDIS::HIREDIS third_party
+    PUBLIC standard_settings standard_warnings hiredis::hiredis third_party
   )
 endif()
 
