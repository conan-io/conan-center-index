diff --git a/CMakeLists.txt b/CMakeLists.txt
index 064aa06..9e34108 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -19,11 +19,11 @@ set(PROJECT_DESCRIPTION "Open source version of the STMicroelectronics ST-LINK T
 include(GNUInstallDirs) # Define GNU standard installation directories
 
 ## Determine project version
-include(${CMAKE_MODULE_PATH}/get_version.cmake)
+include(${CMAKE_SOURCE_DIR}/cmake/modules/get_version.cmake)
 
 ## Set C build flags
 if (NOT MSVC)
-    include(${CMAKE_MODULE_PATH}/c_flags.cmake)
+    include(${CMAKE_SOURCE_DIR}/cmake/modules/c_flags.cmake)
 else ()
     message(STATUS "MSVC C Flags override to /MT")
     set(CMAKE_C_FLAGS_DEBUG_INIT          "/D_DEBUG /MTd /Zi /Ob0 /Od /RTC1")
@@ -80,9 +80,6 @@ endif ()
 # Main build process
 ###
 
-## Define include directories to avoid absolute paths for header defines
-include_directories(${LIBUSB_INCLUDE_DIR})
-
 include_directories(${PROJECT_SOURCE_DIR}/inc) # contains top-level header files
 include_directories(${PROJECT_BINARY_DIR}/inc) # contains version.h
 
@@ -187,11 +184,11 @@ if (APPLE)     # ... with Apple macOS libraries
     find_library(ObjC objc)
     find_library(CoreFoundation CoreFoundation)
     find_library(IOKit IOKit)
-    target_link_libraries(${STLINK_LIB_SHARED} ${LIBUSB_LIBRARY} ${SSP_LIB} ${ObjC} ${CoreFoundation} ${IOKit})
+    target_link_libraries(${STLINK_LIB_SHARED} libusb::libusb ${SSP_LIB} ${ObjC} ${CoreFoundation} ${IOKit})
 elseif (WIN32) # ... with Windows libraries
-    target_link_libraries(${STLINK_LIB_SHARED} ${LIBUSB_LIBRARY} ${SSP_LIB} wsock32 ws2_32)
+    target_link_libraries(${STLINK_LIB_SHARED} libusb::libusb ${SSP_LIB} wsock32 ws2_32)
 else ()
-    target_link_libraries(${STLINK_LIB_SHARED} ${LIBUSB_LIBRARY} ${SSP_LIB})
+    target_link_libraries(${STLINK_LIB_SHARED} libusb::libusb ${SSP_LIB})
 endif ()
 
 install(TARGETS ${STLINK_LIB_SHARED} DESTINATION ${STLINK_LIBRARY_PATH})
@@ -226,11 +223,11 @@ if (APPLE)     # ... with Apple macOS libraries
     find_library(ObjC objc)
     find_library(CoreFoundation CoreFoundation)
     find_library(IOKit IOKit)
-    target_link_libraries(${STLINK_LIB_STATIC} ${LIBUSB_LIBRARY} ${SSP_LIB} ${ObjC} ${CoreFoundation} ${IOKit})
+    target_link_libraries(${STLINK_LIB_STATIC} libusb::libusb ${SSP_LIB} ${ObjC} ${CoreFoundation} ${IOKit})
 elseif (WIN32) # ... with Windows libraries
-    target_link_libraries(${STLINK_LIB_STATIC} ${LIBUSB_LIBRARY} ${SSP_LIB} wsock32 ws2_32)
+    target_link_libraries(${STLINK_LIB_STATIC} libusb::libusb ${SSP_LIB} wsock32 ws2_32)
 else ()
-    target_link_libraries(${STLINK_LIB_STATIC} ${LIBUSB_LIBRARY} ${SSP_LIB})
+    target_link_libraries(${STLINK_LIB_STATIC} libusb::libusb ${SSP_LIB})
 endif ()
 
 install(TARGETS ${STLINK_LIB_STATIC} ARCHIVE DESTINATION ${STLINK_LIBRARY_PATH})
@@ -274,23 +271,6 @@ install(TARGETS st-info DESTINATION ${CMAKE_INSTALL_BINDIR})
 install(TARGETS st-util DESTINATION ${CMAKE_INSTALL_BINDIR})
 install(TARGETS st-trace DESTINATION ${CMAKE_INSTALL_BINDIR})
 
-
-###
-# Device configuration (Linux only)
-###
-
-if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
-    ## Install modprobe.d conf files to /etc/modprobe.d/ (explicitly hardcoded)
-    set(STLINK_MODPROBED_DIR "/etc/modprobe.d" CACHE PATH "modprobe.d directory")
-    install(FILES ${CMAKE_SOURCE_DIR}/config/modprobe.d/stlink_v1.conf DESTINATION ${STLINK_MODPROBED_DIR})
-
-    ## Install udev rules files to /lib/udev/rules.d/ (explicitly hardcoded)
-    set(STLINK_UDEV_RULES_DIR "/lib/udev/rules.d" CACHE PATH "udev rules directory")
-    file(GLOB RULES_FILES ${CMAKE_SOURCE_DIR}/config/udev/rules.d/*.rules)
-    install(FILES ${RULES_FILES} DESTINATION ${STLINK_UDEV_RULES_DIR})
-endif ()
-
-
 ###
 # Additional build tasks
 ###
