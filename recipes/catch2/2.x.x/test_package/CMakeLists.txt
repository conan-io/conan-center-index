cmake_minimum_required(VERSION 3.12)
project(test_package)

include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
conan_basic_setup()

find_package(Catch2 REQUIRED CONFIG)

if(Catch2_VERSION VERSION_GREATER_EQUAL 3.0.0)
  set(CONAN_CATCH_INCLUDE_PATH "CONAN_CATCH_INCLUDE_PATH=<catch2/catch_all.hpp>")
  set(CMAKE_CXX_STANDARD 14)
  else()
  set(CONAN_CATCH_INCLUDE_PATH "CONAN_CATCH_INCLUDE_PATH=<catch2/catch.hpp>")
  set(CMAKE_CXX_STANDARD 11)
endif()

set(CMAKE_CXX_STANDARD_REQUIRED ON)

if(NOT WITH_PREFIX)
  if(Catch2_VERSION VERSION_LESS 3.0.0)
    add_executable(test_package 000-CatchMain.cpp 100-Fix-Section.cpp)
    target_link_libraries(test_package PRIVATE Catch2::Catch2)
    target_compile_definitions(test_package PRIVATE ${CONAN_CATCH_INCLUDE_PATH})
  endif()

  if(WITH_MAIN)
    add_executable(standalone 200-standalone.cpp)
    target_link_libraries(standalone PRIVATE Catch2::Catch2WithMain)
    target_compile_definitions(standalone PRIVATE ${CONAN_CATCH_INCLUDE_PATH})
    if(WITH_BENCHMARK)
      add_executable(benchmark 300-benchmark.cpp)
      target_link_libraries(benchmark PRIVATE Catch2::Catch2WithMain)
      target_compile_definitions(benchmark PRIVATE ${CONAN_CATCH_INCLUDE_PATH})
    endif()
  endif()
else()
  if(Catch2_VERSION VERSION_LESS 3.0.0)
    add_executable(test_package 000-CatchMain.cpp 400-with-prefix.cpp)
    target_link_libraries(test_package PRIVATE Catch2::Catch2)
    target_compile_definitions(test_package PRIVATE ${CONAN_CATCH_INCLUDE_PATH})
  endif()

  if(WITH_MAIN)
    add_executable(standalone 400-with-prefix.cpp)
    target_link_libraries(standalone PRIVATE Catch2::Catch2WithMain)
    target_compile_definitions(standalone PRIVATE ${CONAN_CATCH_INCLUDE_PATH})
  endif()
endif()
