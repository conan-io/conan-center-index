diff --git a/a/src/file_util.cpp b/b/src/file_util.cpp
index 9cea293..20fb5c6 100644
--- a/a/src/file_util.cpp
+++ b/b/src/file_util.cpp
@@ -46,6 +46,9 @@ int64_t FileUtil::GetFileSize(FILE* f) {
 #if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__NT__)
   _fseeki64(f, 0L, SEEK_END);
   int64_t fsize = _ftelli64(f);
+#elif defined(__APPLE__)
+  fseeko(f, 0L, SEEK_END);
+  int64_t fsize = ftello(f);
 #else
   fseeko64(f, 0L, SEEK_END);
   int64_t fsize = ftello64(f);
@@ -181,6 +184,8 @@ int FileUtil::Seek(FILE* f, int64_t offset, int origin) {
   if (f) {
 #if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__NT__)
     return _fseeki64(f, offset, origin);
+#elif defined(__APPLE__)
+    return fseeko(f, offset, origin);
 #else
     return fseeko64(f, offset, origin);
 #endif
@@ -263,6 +268,16 @@ bool FileUtil::CreateFixedSizeFile(const utf8string& path, int64_t fixed_size) {
   }
 
   return prealloc;
+#elif defined(__APPLE__)
+  int fd = open(path.c_str(), O_RDWR | O_CREAT, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
+  fstore_t store = {F_ALLOCATECONTIG, F_PEOFPOSMODE, 0, fixed_size};
+  if (fcntl(fd, F_PREALLOCATE, &store) == -1) {
+    store.fst_flags = F_ALLOCATEALL;
+    if (fcntl(fd, F_PREALLOCATE, &store) == -1) {
+      return false;
+    }
+  }
+  return ftruncate(fd, fixed_size) == 0;
 #else
   int fd = open(path.c_str(), O_RDWR | O_CREAT,
                 S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
