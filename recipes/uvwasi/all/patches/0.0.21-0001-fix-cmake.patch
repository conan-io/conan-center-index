diff --git a/CMakeLists.txt b/CMakeLists.txt
index 62e5579..576db29 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -20,7 +20,7 @@ cmake_dependent_option(UVWASI_BUILD_TESTS
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/out)
 
 if(CMAKE_C_COMPILER_ID MATCHES "AppleClang|Clang|GNU")
-  list(APPEND uvwasi_cflags -fvisibility=hidden --std=gnu89)
+  list(APPEND uvwasi_cflags --std=gnu89)
   list(APPEND uvwasi_cflags -Wall -Wsign-compare -Wextra -Wstrict-prototypes)
   list(APPEND uvwasi_cflags -Wno-unused-parameter)
 endif()
@@ -96,7 +96,7 @@ if(ASAN AND CMAKE_C_COMPILER_ID MATCHES "AppleClang|GNU|Clang")
     set (CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address")
     set (CMAKE_LINKER_FLAGS_DEBUG "${CMAKE_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address")
 endif()
-
+if (NOT BUILD_SHARED_LIBS)
 ## Static library target.
 add_library(uvwasi_a STATIC ${uvwasi_sources})
 target_compile_definitions(uvwasi_a PRIVATE ${uvwasi_defines})
@@ -107,7 +107,7 @@ if(CODE_COVERAGE)
 else()
     target_link_libraries(uvwasi_a PRIVATE ${LIBUV_LIBRARIES})
 endif()
-
+else()
 ## Shared library target.
 add_library(uvwasi SHARED ${uvwasi_sources})
 target_compile_definitions(uvwasi PRIVATE ${uvwasi_defines})
@@ -118,7 +118,7 @@ if(CODE_COVERAGE)
 else()
     target_link_libraries(uvwasi PRIVATE ${LIBUV_LIBRARIES})
 endif()
-
+endif()
 
 ## Test targets.
 if(UVWASI_BUILD_TESTS)
@@ -157,14 +157,23 @@ if(INSTALL_UVWASI AND NOT CODE_COVERAGE)
     configure_file(${PROJECT_SOURCE_DIR}/cmake/uvwasi.pc.in ${pkg_config} @ONLY)
     write_basic_package_version_file(${version_file} VERSION ${PROJECT_VERSION} COMPATIBILITY AnyNewerVersion)
     configure_package_config_file(${PROJECT_SOURCE_DIR}/cmake/Config.cmake.in ${config_file} INSTALL_DESTINATION ${cmake_files_install_dir})
-
+    if (NOT BUILD_SHARED_LIBS)
+    install(
+        TARGETS uvwasi_a
+        EXPORT ${target_export_name}
+        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+    )
+    else()
     install(
-        TARGETS uvwasi_a uvwasi
+        TARGETS uvwasi
         EXPORT ${target_export_name}
         RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
         ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
         LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
     )
+    endif()
     install(
         DIRECTORY ${PROJECT_SOURCE_DIR}/include/
         DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/uvwasi
