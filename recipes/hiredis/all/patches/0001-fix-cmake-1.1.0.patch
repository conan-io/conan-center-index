diff --git a/CMakeLists.txt b/CMakeLists.txt
index 3d52d0c..59f9e7a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,9 +1,5 @@
 CMAKE_MINIMUM_REQUIRED(VERSION 3.0.0)
 
-OPTION(ENABLE_SSL "Build hiredis_ssl for SSL support" OFF)
-OPTION(DISABLE_TESTS "If tests should be compiled or not" OFF)
-OPTION(ENABLE_SSL_TESTS "Should we test SSL connections" OFF)
-OPTION(ENABLE_ASYNC_TESTS "Should we run all asynchronous API tests" OFF)
 
 MACRO(getVersionBit name)
   SET(VERSION_REGEX "^#define ${name} (.+)$")
@@ -22,6 +18,11 @@ MESSAGE("Detected version: ${VERSION}")
 PROJECT(hiredis LANGUAGES "C" VERSION "${VERSION}")
 INCLUDE(GNUInstallDirs)
 
+OPTION(ENABLE_SSL "Build hiredis_ssl for SSL support" OFF)
+OPTION(DISABLE_TESTS "If tests should be compiled or not" OFF)
+OPTION(ENABLE_SSL_TESTS "Should we test SSL connections" OFF)
+OPTION(ENABLE_ASYNC_TESTS "Should we run all asynchronous API tests" OFF)
+
 # Hiredis requires C99
 SET(CMAKE_C_STANDARD 99)
 SET(CMAKE_POSITION_INDEPENDENT_CODE ON)
@@ -44,36 +45,45 @@ IF(WIN32)
     ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS -DWIN32_LEAN_AND_MEAN)
 ENDIF()
 
-ADD_LIBRARY(hiredis SHARED ${hiredis_sources})
-ADD_LIBRARY(hiredis_static STATIC ${hiredis_sources})
-ADD_LIBRARY(hiredis::hiredis ALIAS hiredis)
-ADD_LIBRARY(hiredis::hiredis_static ALIAS hiredis_static)
+if(BUILD_SHARED_LIBS)
+    ADD_LIBRARY(hiredis SHARED ${hiredis_sources})
+    ADD_LIBRARY(hiredis::hiredis ALIAS hiredis)
+    SET_TARGET_PROPERTIES(hiredis
+        PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS TRUE
+        VERSION "${HIREDIS_SONAME}")
 
-IF(NOT MSVC)
-    SET_TARGET_PROPERTIES(hiredis_static
-        PROPERTIES OUTPUT_NAME hiredis)
-ENDIF()
+    IF(WIN32 OR MINGW)
+        TARGET_LINK_LIBRARIES(hiredis PUBLIC ws2_32 crypt32)
+    ELSEIF(CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
+        TARGET_LINK_LIBRARIES(hiredis PUBLIC m)
+    ELSEIF(CMAKE_SYSTEM_NAME MATCHES "SunOS")
+        TARGET_LINK_LIBRARIES(hiredis PUBLIC socket)
+    ENDIF()
 
-SET_TARGET_PROPERTIES(hiredis
-    PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS TRUE
-    VERSION "${HIREDIS_SONAME}")
-IF(MSVC)
-    SET_TARGET_PROPERTIES(hiredis_static
-        PROPERTIES COMPILE_FLAGS /Z7)
-ENDIF()
-IF(WIN32 OR MINGW)
-    TARGET_LINK_LIBRARIES(hiredis PUBLIC ws2_32 crypt32)
-    TARGET_LINK_LIBRARIES(hiredis_static PUBLIC ws2_32 crypt32)
-ELSEIF(CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
-    TARGET_LINK_LIBRARIES(hiredis PUBLIC m)
-    TARGET_LINK_LIBRARIES(hiredis_static PUBLIC m)
-ELSEIF(CMAKE_SYSTEM_NAME MATCHES "SunOS")
-    TARGET_LINK_LIBRARIES(hiredis PUBLIC socket)
-    TARGET_LINK_LIBRARIES(hiredis_static PUBLIC socket)
-ENDIF()
+    TARGET_INCLUDE_DIRECTORIES(hiredis PUBLIC $<INSTALL_INTERFACE:include> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)
+else()
+    ADD_LIBRARY(hiredis_static STATIC ${hiredis_sources})
+    ADD_LIBRARY(hiredis::hiredis_static ALIAS hiredis_static)
+
+    IF(NOT MSVC)
+        SET_TARGET_PROPERTIES(hiredis_static
+            PROPERTIES OUTPUT_NAME hiredis)
+    ENDIF()
+    IF(MSVC)
+        SET_TARGET_PROPERTIES(hiredis_static
+            PROPERTIES COMPILE_FLAGS /Z7)
+    ENDIF()
 
-TARGET_INCLUDE_DIRECTORIES(hiredis PUBLIC $<INSTALL_INTERFACE:include> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)
-TARGET_INCLUDE_DIRECTORIES(hiredis_static PUBLIC $<INSTALL_INTERFACE:include> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)
+    IF(WIN32 OR MINGW)
+        TARGET_LINK_LIBRARIES(hiredis_static PUBLIC ws2_32 crypt32)
+    ELSEIF(CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
+        TARGET_LINK_LIBRARIES(hiredis_static PUBLIC m)
+    ELSEIF(CMAKE_SYSTEM_NAME MATCHES "SunOS")
+        TARGET_LINK_LIBRARIES(hiredis_static PUBLIC socket)
+    ENDIF()
+
+    TARGET_INCLUDE_DIRECTORIES(hiredis_static PUBLIC $<INSTALL_INTERFACE:include> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)
+endif()
 
 CONFIGURE_FILE(hiredis.pc.in hiredis.pc @ONLY)
 
@@ -103,13 +113,21 @@ set(CPACK_RPM_PACKAGE_AUTOREQPROV ON)
 
 include(CPack)
 
-INSTALL(TARGETS hiredis hiredis_static
-    EXPORT hiredis-targets
-    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
-    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
+if(BUILD_SHARED_LIBS)
+    INSTALL(TARGETS hiredis
+        EXPORT hiredis-targets
+        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
+else()
+    INSTALL(TARGETS hiredis_static
+        EXPORT hiredis-targets
+        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
+endif()
 
-if (MSVC)
+if (0)
     INSTALL(FILES $<TARGET_PDB_FILE:hiredis>
         DESTINATION ${CMAKE_INSTALL_BINDIR}
         CONFIGURATIONS Debug RelWithDebInfo)
@@ -161,45 +179,57 @@ IF(ENABLE_SSL)
     FIND_PACKAGE(OpenSSL REQUIRED)
     SET(hiredis_ssl_sources
         ssl.c)
-    ADD_LIBRARY(hiredis_ssl SHARED
-            ${hiredis_ssl_sources})
-    ADD_LIBRARY(hiredis_ssl_static STATIC
-            ${hiredis_ssl_sources})
-    IF(NOT MSVC)
-        SET_TARGET_PROPERTIES(hiredis_ssl_static
-            PROPERTIES OUTPUT_NAME hiredis_ssl)
-    ENDIF()
-
-    IF (APPLE)
-        SET_PROPERTY(TARGET hiredis_ssl PROPERTY LINK_FLAGS "-Wl,-undefined -Wl,dynamic_lookup")
-    ENDIF()
 
-    SET_TARGET_PROPERTIES(hiredis_ssl
-        PROPERTIES
-        WINDOWS_EXPORT_ALL_SYMBOLS TRUE
-        VERSION "${HIREDIS_SONAME}")
-    IF(MSVC)
-        SET_TARGET_PROPERTIES(hiredis_ssl_static
-            PROPERTIES COMPILE_FLAGS /Z7)
-    ENDIF()
-
-    TARGET_INCLUDE_DIRECTORIES(hiredis_ssl PRIVATE "${OPENSSL_INCLUDE_DIR}")
-    TARGET_INCLUDE_DIRECTORIES(hiredis_ssl_static PRIVATE "${OPENSSL_INCLUDE_DIR}")
+    if(BUILD_SHARED_LIBS)
+        ADD_LIBRARY(hiredis_ssl SHARED
+                ${hiredis_ssl_sources})
+        IF (APPLE)
+            SET_PROPERTY(TARGET hiredis_ssl PROPERTY LINK_FLAGS "-Wl,-undefined -Wl,dynamic_lookup")
+        ENDIF()
+        SET_TARGET_PROPERTIES(hiredis_ssl
+            PROPERTIES
+            WINDOWS_EXPORT_ALL_SYMBOLS TRUE
+            VERSION "${HIREDIS_SONAME}")
+        TARGET_INCLUDE_DIRECTORIES(hiredis_ssl PRIVATE "${OPENSSL_INCLUDE_DIR}")
+        TARGET_LINK_LIBRARIES(hiredis_ssl PRIVATE OpenSSL::SSL)
+
+        IF (WIN32 OR MINGW)
+            TARGET_LINK_LIBRARIES(hiredis_ssl PRIVATE hiredis)
+        ENDIF()
+    else()
+        ADD_LIBRARY(hiredis_ssl_static STATIC
+                ${hiredis_ssl_sources})
+        IF(NOT MSVC)
+            SET_TARGET_PROPERTIES(hiredis_ssl_static
+                PROPERTIES OUTPUT_NAME hiredis_ssl)
+        ENDIF()
+        IF(MSVC)
+            SET_TARGET_PROPERTIES(hiredis_ssl_static
+                PROPERTIES COMPILE_FLAGS /Z7)
+        ENDIF()
+        TARGET_INCLUDE_DIRECTORIES(hiredis_ssl_static PRIVATE "${OPENSSL_INCLUDE_DIR}")
+        IF (WIN32 OR MINGW)
+            TARGET_LINK_LIBRARIES(hiredis_ssl_static PUBLIC hiredis_static)
+        ENDIF()
+    endif()
 
-    TARGET_LINK_LIBRARIES(hiredis_ssl PRIVATE ${OPENSSL_LIBRARIES})
-    IF (WIN32 OR MINGW)
-        TARGET_LINK_LIBRARIES(hiredis_ssl PRIVATE hiredis)
-        TARGET_LINK_LIBRARIES(hiredis_ssl_static PUBLIC hiredis_static)
-    ENDIF()
     CONFIGURE_FILE(hiredis_ssl.pc.in hiredis_ssl.pc @ONLY)
 
-    INSTALL(TARGETS hiredis_ssl hiredis_ssl_static
-        EXPORT hiredis_ssl-targets
-        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
-        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
+    if(BUILD_SHARED_LIBS)
+        INSTALL(TARGETS hiredis_ssl
+            EXPORT hiredis_ssl-targets
+            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
+    else()
+        INSTALL(TARGETS hiredis_ssl_static
+            EXPORT hiredis_ssl-targets
+            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
+    endif()
 
-    if (MSVC)
+    if (0)
         INSTALL(FILES $<TARGET_PDB_FILE:hiredis_ssl>
             DESTINATION ${CMAKE_INSTALL_BINDIR}
             CONFIGURATIONS Debug RelWithDebInfo)
