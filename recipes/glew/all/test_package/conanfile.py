from conans import ConanFile, CMake, tools
import os


class TestPackageConan(ConanFile):
    settings = "os", "compiler", "build_type", "arch"
    generators = "cmake", "cmake_find_package", "cmake_find_package_multi"

    def build(self):
        cmake = CMake(self)
        cmake.configure()
        cmake.build()

    def _test_generators(self):
        self.output.info("Testing generators 'cmake_find_package' and 'cmake_find_package_multi'")
        # Check that generators generate expected files and expected target names
        cmake_find_package_filename = os.path.join(self.build_folder, "FindGLEW.cmake")
        cmake_find_package_multi_filename = os.path.join(self.build_folder, "glew-config.cmake")
        assert os.path.exists(cmake_find_package_filename), "'FindGLEW.cmake' generated by 'cmake_find_package' doesn't exist"
        assert os.path.exists(cmake_find_package_multi_filename), "'glew-config.cmake' generated by 'cmake_find_package_multi' doesn't exist"

        # Check generated targets match
        content = tools.load(cmake_find_package_filename)
        assert "GLEW::GLEW" in content

        content = tools.load(cmake_find_package_multi_filename)
        target_name = "glew" if self.options["glew"].shared else "glew_s"
        assert "GLEW::{}".format(target_name) in content

    def test(self):
        self._test_generators()
        if not tools.cross_building(self):
            self.run(os.path.join("bin", "test_package"), run_environment=True)
