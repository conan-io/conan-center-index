--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,6 +1,6 @@
 cmake_minimum_required(VERSION 3.0 FATAL_ERROR)
 
-#project(p7lib)
+project(p7lib)
 
 #>>Build options **********************************************************************
 option(P7_TESTS_BUILD "Build test" OFF)
@@ -25,7 +25,6 @@ if(NOT DEFINED ROOT_P7_PATH)
     set(ROOT_P7_PATH ${PROJECT_SOURCE_DIR} CACHE INTERNAL "")
     set(PATH_P7 ${CMAKE_CURRENT_SOURCE_DIR} CACHE INTERNAL "")
     set(PATH_P7_API "${PROJECT_SOURCE_DIR}/Headers" CACHE INTERNAL "")
-else(expression)
 endif(NOT DEFINED ROOT_P7_PATH)
 
 if(MSVC)
--- a/Sources/CMakeLists.txt
+++ b/Sources/CMakeLists.txt
@@ -7,7 +7,7 @@ include_directories(${PATH_SHARED_PLATFORM})
 include_directories(${PATH_P7_API})
 
 if(WIN32)
-    set(P7_PLATFORM_LIBS Ws2_32) 
+    set(P7_PLATFORM_LIBS ws2_32) 
 elseif(UNIX)
     set(P7_PLATFORM_LIBS rt pthread)
 else()
@@ -16,29 +16,38 @@ endif()
 
 aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR} P7_SOURCES)
 
+if(NOT P7_BUILD_SHARED)
 add_library(${PROJECT_NAME} STATIC ${P7_SOURCES})
 target_link_libraries(${PROJECT_NAME} PUBLIC ${P7_PLATFORM_LIBS})
+endif()
 
 if(P7_BUILD_SHARED)
     add_library(${PROJECT_NAME}-shared SHARED ${P7_SOURCES})
     target_link_libraries(${PROJECT_NAME}-shared ${P7_PLATFORM_LIBS})
 endif()
 
+if(NOT P7_BUILD_SHARED)
 set_property(TARGET ${PROJECT_NAME} PROPERTY POSITION_INDEPENDENT_CODE ON)
+endif()
 
 if(P7_BUILD_SHARED)
     set_property(TARGET ${PROJECT_NAME}-shared PROPERTY POSITION_INDEPENDENT_CODE ON)
 endif()
 
 
+if(NOT P7_BUILD_SHARED)
 target_include_directories(${PROJECT_NAME} PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/../Headers/")
+endif()
 if(P7_BUILD_SHARED)
     target_include_directories(${PROJECT_NAME}-shared PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/../Headers/")
 endif()
 
+if(NOT P7_BUILD_SHARED)
 target_include_directories(${PROJECT_NAME} INTERFACE "${CMAKE_CURRENT_SOURCE_DIR}/../Headers/")
 target_include_directories(${PROJECT_NAME} PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/../Shared/")
+endif()
 
+if(NOT P7_BUILD_SHARED)
 if(WIN32)
     target_include_directories(${PROJECT_NAME} PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/../Shared/Platforms/Windows_x86/")
 elseif(UNIX)
@@ -51,14 +60,15 @@ install(TARGETS ${PROJECT_NAME}
         RUNTIME DESTINATION bin
         )
 
-if(P7_BUILD_SHARED)
+else()
     install(TARGETS ${PROJECT_NAME}-shared
             ARCHIVE DESTINATION lib
             LIBRARY DESTINATION lib
             RUNTIME DESTINATION bin)
 endif()
+install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../Headers/ DESTINATION include FILES_MATCHING PATTERN "*.h")
 
-if(COMMAND set_ide_folder)
+if(0)
     set_ide_folder(${PROJECT_NAME})
     if(P7_BUILD_SHARED)
         set_ide_folder(${PROJECT_NAME}-shared)
