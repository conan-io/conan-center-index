--- cmake/FindGlog.cmake
+++ cmake/FindGlog.cmake
@@ -261,12 +261,12 @@
 
   # Search user-installed locations first, so that we prefer user installs
   # to system installs where both exist.
-  list(APPEND GLOG_CHECK_INCLUDE_DIRS
-    /usr/local/include
-    /usr/local/homebrew/include # Mac OS X
-    /opt/local/var/macports/software # Mac OS X.
-    /opt/local/include
-    /usr/include)
+  list(APPEND GLOG_CHECK_INCLUDE_DIRS ${CMAKE_INCLUDE_PATH})
+    #/usr/local/include
+    #/usr/local/homebrew/include # Mac OS X
+    #/opt/local/var/macports/software # Mac OS X.
+    #/opt/local/include
+    #/usr/include)
   # Windows (for C:/Program Files prefix).
   list(APPEND GLOG_CHECK_PATH_SUFFIXES
     glog/include
@@ -276,11 +276,11 @@
     google-glog/include # CMake installs with project name prefix.
     google-glog/Include)
 
-  list(APPEND GLOG_CHECK_LIBRARY_DIRS
-    /usr/local/lib
-    /usr/local/homebrew/lib # Mac OS X.
-    /opt/local/lib
-    /usr/lib)
+  list(APPEND GLOG_CHECK_LIBRARY_DIRS ${CMAKE_LIB_PATH})
+    #/usr/local/lib
+    #/usr/local/homebrew/lib # Mac OS X.
+    #/opt/local/lib
+    #/usr/lib)
   # Windows (for C:/Program Files prefix).
   list(APPEND GLOG_CHECK_LIBRARY_SUFFIXES
     glog/lib
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -389,7 +389,7 @@
 # GFlags.
 if (GFLAGS)
   # Don't search with REQUIRED as we can continue without gflags.
-  find_package(gflags 2.2.0)
+  find_package(gflags 2.2.0 REQUIRED)
   if (gflags_FOUND)
     if (TARGET gflags)
       message("-- Found Google Flags (gflags) version ${gflags_VERSION}: ${gflags_DIR}")
