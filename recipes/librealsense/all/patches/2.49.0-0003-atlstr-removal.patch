Removes Windows ATL libraries usage. Needed if your Visual Studio installation does
not have ATL libraries installed.

This patch should be removed when Conan CI gets ATL support. @sh0

diff --git a/src/win/win-helpers.cpp b/src/win/win-helpers.cpp
index 643211fb6..e3efd7d93 100644
--- a/src/win/win-helpers.cpp
+++ b/src/win/win-helpers.cpp
@@ -12,7 +12,7 @@
 #include <usbioctl.h>
 #include <SetupAPI.h>
 #include <comdef.h>
-#include <atlstr.h>
+//#include <atlstr.h>
 #include <Windows.h>
 #include <SetupAPI.h>
 #include <string>
@@ -817,11 +817,11 @@ namespace librealsense
 
         create_and_open_status named_mutex::create_named_mutex(const char* camID)
         {
-            CString lstr;
-            CString IDstr(camID);
+            //CString lstr;
+            //CString IDstr(camID);
             // IVCAM_DLL string is left in librealsense to allow safe
             // interoperability with existing tools like DCM
-            lstr.Format(L"Global\\IVCAM_DLL_WINUSB_MUTEX%s", IDstr);
+            std::string lstr = std::string("Global\\IVCAM_DLL_WINUSB_MUTEX") + std::string(camID);
             auto pSecDesc = make_allow_all_security_descriptor();
             if (pSecDesc)
             {
@@ -830,10 +830,10 @@ namespace librealsense
                 SecAttr.lpSecurityDescriptor = pSecDesc;
                 SecAttr.bInheritHandle = FALSE;
 
-                _winusb_mutex = CreateMutex(
+                _winusb_mutex = CreateMutexA(
                     &SecAttr,
                     FALSE,
-                    lstr);
+                    lstr.c_str());
                 LocalFree(pSecDesc);
             }
             //CreateMutex failed
@@ -850,16 +850,16 @@ namespace librealsense
 
         create_and_open_status named_mutex::open_named_mutex(const char* camID)
         {
-            CString lstr;
-            CString IDstr(camID);
+            //CString lstr;
+            //CString IDstr(camID);
             // IVCAM_DLL string is left in librealsense to allow safe
             // interoperability with existing tools like DCM
-            lstr.Format(L"Global\\IVCAM_DLL_WINUSB_MUTEX%s", IDstr.GetString());
+            std::string lstr = std::string("Global\\IVCAM_DLL_WINUSB_MUTEX") + std::string(camID);
 
-            _winusb_mutex = OpenMutex(
+            _winusb_mutex = OpenMutexA(
                 MUTEX_ALL_ACCESS,            // request full access
                 FALSE,                       // handle not inheritable
-                lstr);  // object name
+                lstr.c_str());  // object name
 
             if (_winusb_mutex == nullptr)
             {
diff --git a/src/winusb/device-winusb.cpp b/src/winusb/device-winusb.cpp
index cda8d44c2..92bb62566 100644
--- a/src/winusb/device-winusb.cpp
+++ b/src/winusb/device-winusb.cpp
@@ -12,7 +12,7 @@
 #include "interface-winusb.h"
 #include "types.h"
 
-#include <atlstr.h>
+//#include <atlstr.h>
 #include <Windows.h>
 #include <Sddl.h>
 #include <string>
diff --git a/src/winusb/device-winusb.h b/src/winusb/device-winusb.h
index dd942375a..a5449282f 100644
--- a/src/winusb/device-winusb.h
+++ b/src/winusb/device-winusb.h
@@ -11,7 +11,7 @@
 #include "messenger-winusb.h"
 
 #include <winusb.h>
-#include <atlstr.h>
+//#include <atlstr.h>
 #include <Windows.h>
 #include <Sddl.h>
 #include <string>
@@ -47,4 +47,4 @@ namespace librealsense
             std::vector<std::shared_ptr<usb_interface>> query_device_interfaces(const std::wstring& path);
         };
     }
-}
\ No newline at end of file
+}
diff --git a/src/winusb/enumerator-winusb.cpp b/src/winusb/enumerator-winusb.cpp
index 4cab92403..051291670 100644
--- a/src/winusb/enumerator-winusb.cpp
+++ b/src/winusb/enumerator-winusb.cpp
@@ -11,7 +11,7 @@
 #include "win/win-helpers.h"
 #include "types.h"
 
-#include <atlstr.h>
+//#include <atlstr.h>
 #include <Windows.h>
 #include <Sddl.h>
 #include <string>
diff --git a/src/winusb/messenger-winusb.cpp b/src/winusb/messenger-winusb.cpp
index d5fab7c8d..d4ba7c350 100644
--- a/src/winusb/messenger-winusb.cpp
+++ b/src/winusb/messenger-winusb.cpp
@@ -10,7 +10,7 @@
 #include "usb/usb-enumerator.h"
 #include "types.h"
 
-#include <atlstr.h>
+//#include <atlstr.h>
 #include <Windows.h>
 #include <Sddl.h>
 #include <string>
