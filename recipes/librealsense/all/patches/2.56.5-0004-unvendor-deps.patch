--- a/CMake/windows_config.cmake
+++ b/CMake/windows_config.cmake
@@ -82,13 +82,13 @@ macro(os_set_flags)
     set(DOTNET_VERSION_LIBRARY "3.5" CACHE STRING ".Net Version, defaulting to '3.5', the Unity wrapper currently supports only .NET 3.5")
     set(DOTNET_VERSION_EXAMPLES "4.0" CACHE STRING ".Net Version, defaulting to '4.0'")
 
-    # Windows.h will define the min/max macros which will 
+    # Windows.h will define the min/max macros which will
     # collide with std's min/max templates, which we want to use.
     add_definitions(-DNOMINMAX)
 endmacro()
 
 macro(os_target_config)
-    add_definitions(-D__SSSE3__ -D_CRT_SECURE_NO_WARNINGS)
+    # add_definitions(-D__SSSE3__ -D_CRT_SECURE_NO_WARNINGS)
 
     if(FORCE_RSUSB_BACKEND)
         if (NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_CURRENT_BINARY_DIR)
--- a/third-party/CMakeLists.txt
+++ b/third-party/CMakeLists.txt
@@ -5,7 +5,7 @@ add_subdirectory( "${CMAKE_CURRENT_LIST_DIR}/rsutils" )
 
 pop_security_flags() # remove security flags for third party, as we cannot guarantee their security enforcment
 
-include(CMake/external_json.cmake)
+# include(CMake/external_json.cmake)
 # Add additional include directories to allow file to include rosbag headers
 include(${_rel_path}/realsense-file/config.cmake)
 
diff --git a/third-party/rsutils/CMakeLists.txt b/third-party/rsutils/CMakeLists.txt
index b0fc310..5b34524 100644
--- a/third-party/rsutils/CMakeLists.txt
+++ b/third-party/rsutils/CMakeLists.txt
@@ -4,8 +4,8 @@ cmake_minimum_required(VERSION 3.8.0)  # source_group(TREE)
 project( rsutils )
 
 add_library( ${PROJECT_NAME} STATIC "" )
-# We cannot directly interface with nlohmann_json (doesn't work on bionic)
-#target_link_libraries( ${PROJECT_NAME} PUBLIC nlohmann_json )
+find_package(nlohmann_json CONFIG REQUIRED)
+target_link_libraries( ${PROJECT_NAME} PUBLIC nlohmann_json::nlohmann_json)
 target_compile_features( ${PROJECT_NAME} PUBLIC cxx_std_14 )
 set_target_properties( ${PROJECT_NAME} PROPERTIES FOLDER Library )
 
