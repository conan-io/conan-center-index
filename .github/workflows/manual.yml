name: Potential Conflicts

on:
  push:
  pull_request:
  workflow_dispatch: {}

jobs:
  list-issues:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const query = `query($owner:String!, $name:String!) {
              repository(owner:$owner, name:$name){
                pullRequests(first:100, states: OPEN) {
                  nodes {
                    id
                    number
                    headRefOid
                    mergeCommit {
                      changedFiles
                      commitUrl
                      oid 
                    }
                    mergeable
                    potentialMergeCommit {
                      changedFiles
                      commitUrl
                      oid 
                    }
                  }
                  pageInfo  {
                    hasNextPage
                  }
                }
              }
            }`;
            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo
            }
            await github.graphql(query, variables)
            await setTimeout(() => {}, 15000)
            const result = await github.graphql(query, variables)
            
            core.startGroup('ðŸ”Ž Gather Pull Request Data')
            console.log(result)
            console.log(result.repository.pullRequests.nodes)
            core.endGroup()
            
            for(const prNode of result.repository.pullRequests.nodes) {            
              core.startGroup(`ðŸ”Ž Inspecting PR #${prNode.number} for soft changes`)
              const head = await github.pulls.listFiles({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNode.number,
              });
              console.log(head.data)
              console.log('----')

              const mergeCommit = await github.repos.getCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: prNode.potentialMergeCommit.oid,
              });
              console.log(mergeCommit.data)

              let hasSoftChanges = false;
              head.data.forEach((diff, index) => {
                console.log(diff.sha, " == ", mergeCommit.data.files[index].sha)
                hasSoftChanges = hasSoftChanges || diff.sha === mergeCommit.data.files[index].sha
              })
              core.endGroup()
              
              if (hasSoftChanges) {
                core.warning(`#${prNode.number} has soft changes`)
              }
            }
